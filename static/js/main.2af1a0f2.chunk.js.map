{"version":3,"sources":["Common/index.js","Data/resources.js","Data/getRecordingYear.js","Data/static.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/arrayToObject.js","MetaDash/Languages/index.js","Viz/D3Component/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Inputs/DoubleSlider/index.js","Inputs/HoverText/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","__all","all","filters","resourceContainsAllItems","itemField","itemFilters","r","i","length","item","indexOf","id","resourceContainsAllSubjects","subjects","resourceContainsAllInterviewers","interviewers","resourceContainsAllPrograms","programs","resourceContainsOnlyPrograms","getResources","options","gender","dateRanges","recording","recordingYear","birth","birth_years","reduce","curr","next","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","language","query","filter","record","recording_dates","a","map","Number","slice","sort","__webpack_require__","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","genderString","bind","assertThisInitialized","yearRangeString","languagesString","programString","birthplaceString","men","women","both","react_default","createElement","className","arr","join","languageCount","keys","summaryData","languages","numeral","format","affiliateCount","items","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","React","Component","state","Men","Women","Both","menRef","createRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","Error","concat","newState","objectSpread","setState","selections","push","updateSelections","vals","total","label","ref","d3","transition","duration","ease","style","_this2","toggleState","onClick","elem","trackScrolling","poolRef","itemCount","increment","scrollBottom","current","scrollTop","getBoundingClientRect","height","totalHeight","scrollHeight","console","log","addEventListener","removeEventListener","width","showBars","subtotal","nextItem","count","showAll","allItems","b","itemDict","val","barWidth","handleItemClick","key","renderBar","objectToArray","obj","arrayToObject","forEach","listProps","CountListWithBars_default","svg","initializeChart","updateChart","redrawChart","setMargin","currentWidth","margin","top","left","right","bottom","newMargin","data","_this3","newWidth","window","document","body","clearTimeout","timeout","setTimeout","PureComponent","html","selectAll","remove","xAxisG","append","classed","yAxisG","barG","node","yearRange","minYear","maxYear","countRange","x","xScale","domain","apply","padding","rangeRound","tickSteps","tickValues","xAxis","tickFormat","e","attr","yScale","yAxis","tickSizeOuter","ticks","Math","floor","undefined","ty","t","enter","barClass","bandwidth","update","exit","on","D3Component","h","children","size","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","mouseInCallback","mouseOutCallback","clickCallback","prevProps","prevState","min","arr1","arr2","allItemsMatch","root","parentId","packLayout","allowInteraction","y","onMouseOver","onMouseOut","newRadius","oldRadius","callback","updateValue","target","value","onChange","placeholder","type","GenericInput","handleClick","SelectionPooltem_default","data-value","TagPoolItem_default","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","newSelections","selectionItem","toConsumableArray","dropID","String","filterItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","handles","range","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","handleWidth","invert","round","select","each","text","xValues","render","innerHTML","trackX","trackWidth","bbox","handleHeight","trackHeight","yCenter","_","handleGroups","raise","yr","getBBox","oldProps","newData","legitArray","get","prototype","arrsMatch","hoverText","dropCallback","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","lazy","TagFilter_default","setText","handleMouseIn","handleMouseOut","TreeMap_default","HoverText_default","ItemSelector_default","arguments","selectionsDict","selectionsWithoutCurrentItem","_this$props$filterIte","_this$props$filterIte2","slicedToArray","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","cleanPlaceName","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","_React$createElement","inputProps","Cluster_default","defineProperty","dist_default","limit","renderResult","resultsRef","result","rel","href","link","pageYOffset","innerHeight","distanceFromBottom","offsetHeight","results","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","_data$getData","resources","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","birthYears","yrs","recordingYears","BirthPlaces_default","Interviewers_default","search","retDict","retItem","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"ogBAAA,IAAIA,EAAYC,EAAQ,KAexBC,EAAOC,QAAU,CACbC,gBAdJ,SAAyBC,GACrB,OAAOL,GAAWK,GAAM,IAAIC,cAAcC,SAc1CC,YAVJ,SAAqBC,EAASC,GAC1B,IAAIC,EAAM,GACV,IAAK,IAAIC,KAAKH,EACVE,EAAID,EAAOE,IAAMH,EAAQG,GAE7B,OAAOD,4BCZHE,EAAqBZ,EAAQ,IAA7BY,iBACAT,EAAoBH,EAAQ,IAA5BG,gBACAU,EAAcb,EAAQ,IAAtBa,UAOFC,EAAQd,EAAQ,KAChBe,EAAM,kBAAMD,GAEdE,EAAU,GAEdA,EAAQC,yBAA2B,SAACC,EAAWC,GAC3C,OAAO,SAAAC,GACH,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAYG,OAAQD,IAAK,CACzC,IAAIE,EAAOJ,EAAYE,GACvB,GAAID,EAAEF,GAAWM,QAAQD,EAAKE,IAAM,EAAG,OAAO,EAElD,OAAO,IAIfT,EAAQU,4BAA8B,SAAAC,GAAc,OAAOX,EAAQC,yBAAyB,eAAgBU,IAE5GX,EAAQY,gCAAkC,SAAAC,GAAkB,OAAOb,EAAQC,yBAAyB,eAAgBY,IAEpHb,EAAQc,4BAA8B,SAAAC,GAAc,OAAOf,EAAQC,yBAAyB,WAAYc,IAExGf,EAAQgB,6BAA+B,SAAAD,GACnC,OAAO,SAAAX,GACH,OAAIW,EAAST,OAAS,KAClBF,EAAEW,SAAST,OAAS,GAAKF,EAAEW,SAAST,OAAS,IAC7CF,EAAEW,SAAS,KAAOA,EAAS,GAAGN,KAK1CT,EAAQiB,aAAe,SAAAC,GAGnB,OAAKA,EAaE,SAAAd,GAGH,IAAKJ,EAAQU,4BAA4BQ,EAAQP,UAAY,GAAxDX,CAA4DI,GAAM,OAAO,EAG9E,MAAKc,EAAQC,QAAU,IAAIb,OAAS,IAAMY,EAAQC,QAAU,IAAIb,OAAS,GACjEY,EAAQC,OAAOX,QAAQX,EAAUO,IAAM,GAD/C,CAKA,GAAIc,EAAQE,YACLF,EAAQE,WAAWC,UAAW,CACjC,IAAMC,EAAgB1B,EAAiBQ,GACvC,GAAIkB,EAAgBJ,EAAQE,WAAWC,UAAU,IAC1CC,EAAgBJ,EAAQE,WAAWC,UAAU,KAC5CC,EAAiB,OAAO,EAOpC,GAAIJ,EAAQE,YAAcF,EAAQE,WAAWG,MAEzC,KADmBnB,EAAEoB,aAAe,IACpBC,OAAO,SAACC,EAAMC,GAC1B,QAAKD,KACAR,KACAA,EAAQE,cACRF,EAAQE,WAAWG,SACpBI,EAAOT,EAAQE,WAAWG,MAAM,IAAMI,EAAOT,EAAQE,WAAWG,MAAM,SAE3E,GAAS,OAAO,EAMvB,IAAKL,EAAQU,aAAe,IAAItB,OAAS,EAGrC,IAFA,IAAIuB,EAAQX,EAAQU,YAAY,GAEvBE,EAAI,EAAGA,GAAK1B,EAAE2B,oBAAsB,IAAIzB,OAAQwB,IAAK,CAE1D,IAAK1B,EAAE2B,oBAAsB,IAAIzB,UAAYF,EAAE4B,uBAAyB,IAAI1B,OAAU,OAAO,EAC7F,IAAI2B,EAAO7B,EAAE2B,mBAAmBD,GAC5BI,EAAU9B,EAAE4B,sBAAsBF,GAEtC,GAAI3C,EAAgB+C,KAAa/C,EAAgB0C,EAAMK,SAAU,OAAO,EACxE,GAAIL,EAAMI,MAEF9C,EAAgB8C,KAAU9C,EAAgB0C,EAAMI,KAAKE,MAAM,KAAK,IAAK,OAAO,EAQ5F,QAAKnC,EAAQgB,6BAA6BE,EAAQH,UAAY,GAAzDf,CAA6DI,OAG7DJ,EAAQY,gCAAgCM,EAAQL,cAAgB,GAAhEb,CAAoEI,MAGrEc,EAAQkB,UACuB,IAA5BlB,EAAQkB,SAAS9B,QACjBF,EAAEgC,WAAalB,EAAQkB,SAAS,GAAG3B,OA/EvBV,GAgH3Bd,EAAOC,QAAU,CAAEa,MAAKsC,MALxB,SAAenB,GACX,OAAKA,EACEnB,IAAMuC,OAAOtC,EAAQiB,aAAaC,IADnBnB,uCCtJ1B,SAASH,EAAiB2C,GAEtB,OAAQA,EAAOC,iBAAmB,IAC7BF,OAAO,SAAAG,GAAC,OAAIA,IACZC,IAAI,SAAAD,GAAC,OAAIE,OAAOF,EAAEG,MAAM,EAAG,MAC3BC,OAAO,GALhBC,EAAA1C,EAAA2C,GAAAD,EAAAE,EAAAD,EAAA,qCAAAnD,4DCAAkD,EAAA1C,EAAA2C,GAAAD,EAAAE,EAAAD,EAAA,gCAAAE,IAAAH,EAAAE,EAAAD,EAAA,kCAAAG,IAAA,IAAMD,EAAc,kBAChBC,EAAgB,qmoxICMhB,SAAAC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKU,gBAAkBV,EAAKU,gBAAgBF,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKW,gBAAkBX,EAAKW,gBAAgBH,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKY,cAAgBZ,EAAKY,cAAcJ,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKa,iBAAmBb,EAAKa,iBAAiBL,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAPTA,8EAYf,GAAIG,KAAKJ,MAAMpD,QAAQmB,OAAOb,OAAS,EAAK,MAAO,gBACnD,IAAM6D,EAAMX,KAAKJ,MAAMpD,QAAQmB,OAAOX,QAAQ,QAAU,EACpD4D,EAAQZ,KAAKJ,MAAMpD,QAAQmB,OAAOX,QAAQ,UAAY,EACtD6D,EAAOb,KAAKJ,MAAMpD,QAAQmB,OAAOX,QAAQ,SAAW,EAEpDpB,EAAO,SAMX,OALI+E,GAAOC,EAAShF,EAAO,gBAClB+E,EAAO/E,EAAO,MACdgF,EAAShF,EAAO,QAChBiF,IAAQjF,EAAO,qCAGpBkF,EAAA7B,EAAA8B,cAAA,kBACOD,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQpF,4CAMvBqF,GAEZ,OAAKA,EAGDA,EAAI,KAAOA,EAAI,GACPH,EAAA7B,EAAA8B,cAAA,kBACDD,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQC,EAAI,KAI/BH,EAAA7B,EAAA8B,cAAA,uBACID,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQC,EAAIC,KAAK,WAVzB,gDAiBpB,OAAQ,+CAoBR,IAAMC,EAAgBrB,OAAOsB,KAAKpB,KAAKJ,MAAMyB,YAAYC,WAAWxE,OACpE,OACIgE,EAAA7B,EAAA8B,cAAA,sBACWD,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQO,IAAQJ,GAAeK,OAAO,OAAtD,IAA+DL,EAAgB,EAAI,YAAc,qDAMhH,IAAMM,EAAiB3B,OAAOsB,KAAKpB,KAAKJ,MAAMyB,YAAY9D,UAAUT,OACpE,OACIgE,EAAA7B,EAAA8B,cAAA,kBACOD,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQO,IAAQE,GAAgBD,OAAO,OAAvD,IAAgEC,EAAiB,EAAI,oBAAsB,uDActH,OACIX,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cAAf,sCAEMF,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQO,IAAQvB,KAAKJ,MAAM8B,MAAM5E,QAAQ0E,OAAO,OAAhE,gBAFN,OAGWxB,KAAKI,eAHhB,YAIgBJ,KAAKO,gBAAgBP,KAAKJ,MAAMpD,QAAQoB,WAAWG,OAAS,CAACiC,KAAKJ,MAAM+B,UAAW3B,KAAKJ,MAAMgC,YAJ9G,OAKW5B,KAAKU,mBALhB,4BAMgCV,KAAKO,gBAAgBP,KAAKJ,MAAMpD,QAAQoB,WAAWC,WAAa,CAACmC,KAAKJ,MAAMiC,cAAe7B,KAAKJ,MAAMkC,gBANtI,OAOW9B,KAAKQ,kBAPhB,OAQWR,KAAKS,gBARhB,YAnGiBsB,IAAMC,yCCE/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDqC,MAAQ,CACTC,KAAO,EACPC,OAAS,EACTC,MAAQ,GAGZvC,EAAKwC,OAASN,IAAMO,YACpBzC,EAAK0C,QAAUR,IAAMO,YACrBzC,EAAK2C,SAAWT,IAAMO,YAEtBzC,EAAK4C,aAAe5C,EAAK4C,aAAapC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK6C,QAAU7C,EAAK6C,QAAQrC,KAAbP,OAAAQ,EAAA,EAAAR,CAAAD,IAbAA,4EAiBNlC,GAET,IACIgF,GADM3C,KAAKiC,MAAMtE,GAGjBiF,GAAW,EAIf,OAAQjF,GACJ,IAAK,MACDiF,EAAW5C,KAAKiC,MAAME,OAASnC,KAAKiC,MAAMG,KAC1C,MACJ,IAAK,QACDQ,EAAW5C,KAAKiC,MAAMC,KAAOlC,KAAKiC,MAAMG,KACxC,MACJ,IAAK,OACDQ,EAAW5C,KAAKiC,MAAMC,KAAOlC,KAAKiC,MAAME,MACxC,MACJ,QACI,MAAM,IAAIU,MAAJ,yBAAAC,OAAmCnF,IAIjD,GAAKiF,GAAaD,EAAlB,CAEA,IAAMI,EAAQjD,OAAAkD,EAAA,EAAAlD,CAAA,GAAQE,KAAKiC,OAC3Bc,EAASpF,GAAUgF,EACnB3C,KAAKiD,SAASF,GAEd,IAAIG,EAAa,GACbH,EAASb,KAAKgB,EAAWC,KAAK,OAC9BJ,EAASZ,OAAOe,EAAWC,KAAK,SAChCJ,EAASX,MAAMc,EAAWC,KAAK,QAEnCnD,KAAKJ,MAAMwD,iBAAiBF,sCAO5B,IAAMG,EAAO,CACT1C,IAAKX,KAAKJ,MAAMe,KAAO,EACvBC,MAAOZ,KAAKJ,MAAMgB,OAAS,EAC3BC,KAAMb,KAAKJ,MAAMiB,MAAQ,GAEzByC,EAAQD,EAAK1C,IAAM0C,EAAKzC,MAAQyC,EAAKxC,KAEnC6B,EAAU,SAACa,EAAOC,GAAR,OACZC,SAAUD,GACLE,aACAC,SAAS,KACTC,KAAKH,cACLI,MAAM,QAAS,kBAAqB,IAAdR,EAAKE,GAAeD,EAAS,OAE5DZ,EAAQ,OAAQ1C,KAAKuC,SACrBG,EAAQ,MAAO1C,KAAKqC,QACpBK,EAAQ,QAAS1C,KAAKwC,sDAIJxC,KAAK0C,uDACJ1C,KAAK0C,2CAEnB,IAAAoB,EAAA9D,KACCW,EAAMX,KAAKJ,MAAMe,KAAO,EAC1BC,EAAQZ,KAAKJ,MAAMgB,OAAS,EAC5BC,EAAOb,KAAKJ,MAAMiB,MAAQ,EAC1ByC,EAAQ3C,EAAME,EAAOD,EAEnBmD,EAAc,SAAAR,GAAK,OAAIO,EAAK7B,MAAMsB,GAAS,KAAO,OAExD,OACIzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,qBACXF,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,UACAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aAAaO,IAAQZ,EAAM2C,GAAO9B,OAAO,OACxDV,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aAAaO,IAAQV,EAAOyC,GAAO9B,OAAO,OAEzDV,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aAAaO,IAAQX,EAAQ0C,GAAO9B,OAAO,QAK9DV,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,uBACXF,EAAA7B,EAAA8B,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,QAEjCe,IAAK,SAACS,GAAWH,EAAKzB,OAAS4B,GAE/BjD,UAAS,kBAAA8B,OAAoBiB,EAAY,UAC7CjD,EAAA7B,EAAA8B,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,SAEjCe,IAAK,SAACS,GAAWH,EAAKvB,QAAU0B,GAEhCjD,UAAS,mBAAA8B,OAAqBiB,EAAY,WAC9CjD,EAAA7B,EAAA8B,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,UAEjCe,IAAK,SAACS,GAAWH,EAAKtB,SAAWyB,GAEjCjD,UAAS,oBAAA8B,OAAsBiB,EAAY,aAEnDjD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBACXF,EAAA7B,EAAA8B,cAAA,OACIC,UAAW,8BAAgC+C,EAAY,OACvDC,QAAS,kBAAMF,EAAKrB,aAAa,SAGjC3B,EAAA7B,EAAA8B,cAAA,kBACAD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WAAWO,IAAQZ,GAAKa,OAAO,SAGlDV,EAAA7B,EAAA8B,cAAA,OACIC,UAAW,+BAAiC+C,EAAY,QACxDC,QAAS,kBAAMF,EAAKrB,aAAa,UAGjC3B,EAAA7B,EAAA8B,cAAA,uBACAD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WAAWO,IAAQV,GAAMW,OAAO,SAInDV,EAAA7B,EAAA8B,cAAA,OACIiD,QAAS,kBAAMF,EAAKrB,aAAa,UACjCzB,UAAW,gCAAkC+C,EAAY,UAGzDjD,EAAA7B,EAAA8B,cAAA,oBACAD,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WAAWO,IAAQX,GAAOY,OAAO,kBAtJ3CO,IAAMC,wCCC/B,SAAArC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDsE,eAAiBrE,EAAKqE,eAAe7D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKsE,QAAUpC,IAAMO,YAErBzC,EAAKoC,MAAQ,CACTmC,UAAU,IACVC,UAAW,IAPDxE,gFAcd,KAAIG,KAAKiC,MAAMmC,WAAapE,KAAKJ,MAAM8B,OAAvC,CAEA,IACM4C,EADYtE,KAAKmE,QAAQI,QAAQC,UACNxE,KAAKmE,QAAQI,QAAQE,wBAAwBC,OACxEC,EAAc3E,KAAKmE,QAAQI,QAAQK,aAQzC,GAAKD,EAAcL,GAAiB,GAAG,CACnCO,QAAQC,IAAI,SAAUR,EAAcK,GAEpC,IAAMP,EAAYpE,KAAKiC,MAAMmC,UAAYpE,KAAKiC,MAAMoC,UACpDrE,KAAKiD,SAAS,CAACmB,4DAMnBpE,KAAKmE,QAAQI,QAAQQ,iBAAiB,SAAU/E,KAAKkE,+DAIrDlE,KAAKmE,QAAQI,QAAQS,oBAAoB,SAAUhF,KAAKkE,kDAIlDe,GACN,GAAKjF,KAAKJ,MAAMsF,SAChB,OACIpE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,qBACXF,EAAA7B,EAAA8B,cAAA,OAAK8C,MAAO,CAAEoB,MAASA,GAASjE,UAAU,8CAM7C,IAAA8C,EAAA9D,KAECsD,EAAQtD,KAAKJ,MAAM8B,MAAMzD,OAAO,SAACkH,EAAUC,GAAX,OAAwBD,EAAWC,EAASC,OAAO,GAGnF3D,EAAQ1B,KAAKJ,MAAM0F,QAAUtF,KAAKJ,MAAM2F,SAAWvF,KAAKJ,MAAM8B,MACpE,OACIZ,EAAA7B,EAAA8B,cAAA,OACAyC,IAAKxD,KAAKmE,QACVnD,UAAU,eACJU,GAAS,IACNrC,KAAK,SAACJ,EAAGuG,GAAJ,OAAUvG,EAAEoG,MAAQG,EAAEH,MAAQ,GAAK,IACxCjG,MAAM,EAAEY,KAAKiC,MAAMmC,WAEnBlF,IAAI,SAACnC,EAAMF,GAGR,OAAME,EAAKwG,OAASxG,EAAKwG,MAAMzG,OAAS,GAOpCC,EAAKE,MAAM6G,EAAKlE,MAAM6F,UACtBzE,EAAY,YACZoD,EAAY7C,IAAQuC,EAAKlE,MAAM6F,SAAS1I,EAAKE,IAAIoI,OAAO7D,OAAO,OAvBrEkE,EAwBuB5B,EAAKlE,MAAM6F,SAAS1I,EAAKE,IAAIoI,MAA9CM,EAxBH,GAAA7C,OAAa,IAAN4C,EAAYpC,EAAnB,OA2BGtC,EAAY,qBACZ2E,EAAW,EACXvB,EAAY,MAGZrH,EAAKE,MAAM6G,EAAKlE,MAAMsD,aACtBlC,EAAY,sBAKZF,EAAA7B,EAAA8B,cAAA,OAAKiD,QAAS,kBAAOF,EAAKlE,MAAMgG,iBAAoB,cAAY7I,IAAO8I,IAAKhJ,EACxEmE,UAAWA,GAEXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBAEfF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBACVjE,EAAKwG,OAGTO,EAAKgC,UAAUH,GAEhB7E,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBACVoD,KApCwC,KAErD,IAAIA,EACAuB,EACA3E,EAlBN0E,YA3DO3D,IAAMC,YCJpB+D,SAAA,SAAUC,GAErB,OADAA,EAAMA,GAAO,GACNlG,OAAOsB,KAAK4E,GAAK9G,IAAI,SAAA/C,GAAC,OAAE6J,EAAI7J,OCFxB8J,EAAA,SAAUhF,GACrB,IAAI+E,EAAM,GAEV,OADA/E,EAAIiF,QAAQ,SAAAnJ,GAAI,OAAEiJ,EAAIjJ,EAAKE,IAAMF,IAC1BiJ,sLCGE,IAAAnG,EAAAG,KAECmG,EAASrG,OAAAkD,EAAA,EAAAlD,CAAA,GACRE,KAAKJ,MADG,CAEXgG,gBAAiB,SAAA7I,GAEwB,IAAjC8C,EAAKD,MAAMsD,WAAWpG,QAAgBC,EAAKE,KAAO4C,EAAKD,MAAMsD,WAAW,GAAGjG,GAAM4C,EAAKD,MAAMwD,iBAAiB,CAACrG,IAC3G8C,EAAKD,MAAMwD,iBAAiB,KAEvCkC,SAAS,EACTpC,WAAY+C,EAAcjG,KAAKJ,MAAMsD,YACrCgC,UAAU,IAId,OACIpE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,wBACXF,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,aACAF,EAAA7B,EAAA8B,cAACqF,EACOD,WApBKpE,IAAMC,iCCD/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDyG,IAAMtE,IAAMO,YACjBzC,EAAKyG,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK2G,YAAc3G,EAAK2G,YAAYnG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK4G,UAAY5G,EAAK4G,UAAUpG,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IAEjBA,EAAKoC,MAAQ,CACTyE,cAAe,EACfC,OAAQ/G,EAAM+G,QAAU,CACpBC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,OAAO,IAIflH,EAAK8G,OAAS/G,EAAM+G,QAAU,CAC1BC,IAAI,EACJC,KAAK,EACLC,MAAM,EACNC,OAAO,GAvBIlH,yEA4BTmH,GACN,IAAML,EAAM7G,OAAAkD,EAAA,EAAAlD,CAAA,GAAOE,KAAKiC,MAAM0E,OAAWK,GACzChH,KAAKiD,SAAS,CAAE0D,wDAKhB3G,KAAKuG,YAAYvG,KAAKJ,MAAMqH,kDAI5BjH,KAAKsG,kBACLtG,KAAKuG,+CAIA,IAAAzC,EAAA9D,KACL,OAAQc,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,OACnBF,EAAA7B,EAAA8B,cAAA,YACAD,EAAA7B,EAAA8B,cAAA,OAAKyC,IAAK,SAACS,GAAWH,EAAKuC,IAAMpC,4CAI5B,IAAAiD,EAAAlH,KAGHmH,EAAWC,OAAOC,SAASC,KAAK7C,wBAAwBQ,MAC1DkC,IAAanH,KAAKiC,MAAMyE,eAE5B1G,KAAKiD,SAAS,CAACyD,aAAaS,IAG5BI,aAAavH,KAAKwH,SAClBxH,KAAKwH,QAAUC,WAAW,WACtBP,EAAKZ,kBACLY,EAAKX,eAEN,qFAQKU,WA3EalF,IAAM2F,8BCM/B,SAAA/H,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFASf,IAAMwG,EAAM5C,SAAUzD,KAAKqG,KAAKsB,KAAK,IACrCtB,EAAIuB,UAAU,KAAKC,SAEnB7H,KAAK8H,OAASzB,EAAI0B,OAAO,KACpBC,QAAQ,QAAQ,GAChBA,QAAQ,KAAK,GAElBhI,KAAKiI,OAAS5B,EAAI0B,OAAO,KACpBC,QAAQ,QAAQ,GAChBA,QAAQ,KAAK,GAElBhI,KAAKkI,KAAO7B,EAAI0B,OAAO,yCAIfd,GAGRA,EAAOA,GAAQjH,KAAKJ,MAAMqH,KAC1B,IAAMZ,EAAM5C,SAAUzD,KAAKqG,KAGrBpB,EAAQoB,EAAI8B,OAAO1D,wBAAwBQ,MAC7CP,EAAS1E,KAAKJ,MAAM8E,QAAU2B,EAAI8B,OAAO1D,wBAAwBC,OAM/D0D,EAAY,CAACpI,KAAKJ,MAAMyI,QAASrI,KAAKJ,MAAM0I,SAC5CC,EAAa,CAAC,EAAG9E,MAAOwD,EAAK/H,IAAI,SAAAsJ,GAAC,OAAIA,EAAEnD,UAAW,GAQnDsB,EAAS3G,KAAKiC,MAAM0E,OAGpB8B,EAAShF,cACViF,OAAOjF,QAAAkF,MAAAlF,EAAY2E,IACnBQ,QAAQ,IACRC,WAAW,CAAClC,EAAOE,KAAM5B,EAAQ0B,EAAOG,QAEvCgC,EAAY7D,EAAQ,IAAM,GAAK,GAC/B8D,EAAatF,QAASzD,KAAKJ,MAAMyI,QAASrI,KAAKJ,MAAM0I,QAASQ,GAG9DE,EAAQvF,aAAcgF,GACvBQ,WAAW,SAAAC,GAAC,OAAI3H,IAAQ2H,GAAG1H,OAAO,OAClCuH,WAAWA,GAEhB/I,KAAK8H,OACAqB,KAAK,YADV,aAAArG,OACoC,EADpC,IACyC4B,EAASiC,EAAOI,OADzD,MAEK5G,KAAK6I,GAEV,IAAMI,EAAS3F,gBACViF,OAAOH,GACPM,WAAW,CAACnE,EAASiC,EAAOI,OAAQJ,EAAOC,MAE1CyC,EAAQ5F,WAAY2F,GAAQE,cAAc,GAE3CC,MAAM7E,EAAS,IACfuE,WAAW,SAAAC,GAAC,OAAIM,KAAKC,MAAMP,KAAOA,EAAIA,OAAIQ,IAEzCC,EAAKlG,eAAgBE,SAAS,KAAMC,KAAKH,cAE/CzD,KAAKiI,OACAkB,KAAK,YADV,aAAArG,OACoC6D,EAAOE,KAD3C,IACmD,EADnD,MAEKnD,WAAWiG,GACXxJ,KAAKkJ,GAEV,IAAMO,EAAI,SAAA/M,GAAC,OAAIwJ,EAAI3C,aACdC,SAAS,KACTC,KAAKH,cAEVzD,KAAKkI,KAAKN,UAAU,QACfX,KAAKA,GACL/F,KACG,SAAC2I,EAAOhN,GAAR,OAAcgN,EAAM9B,OAAO,QACtBoB,KAAK,QAAS,SAAA3J,GAAC,OAAIA,EAAEsK,WACrB9B,QAAQ,OAAO,GACfmB,KAAK,mBAAoB,SAAA3J,GAAC,OAAIA,EAAE6F,QAChC8D,KAAK,aAAc,SAAA3J,GAAC,OAAIA,EAAE+D,QAC1B4F,KAAK,IAAK,SAAA3J,GAAC,OAAI4J,EAAO,KACtBD,KAAK,QAASV,EAAOsB,WACrBZ,KAAK,IAAK,SAAA3J,GAAC,OAAIiJ,EAAOjJ,EAAE+D,SACxBpD,KAAK,SAAA0J,GAAK,OAAIA,EAAMnG,WAAW,MAC3ByF,KAAK,IAAK,SAAA3J,GAAC,OAAI4J,EAAO5J,EAAE6F,OAAS,KACjC8D,KAAK,SAAU,SAAA3J,GAAC,OAAI4J,EAAO,GAAKA,EAAO5J,EAAE6F,OAAS,KAClD8D,KAAK,QAASV,EAAOsB,cAE9B,SAAAC,GAAM,OAAIA,EACLb,KAAK,oBAAqB,SAAA3J,GAAC,OAAIA,EAAE6F,QACjC8D,KAAK,QAAS,SAAA3J,GAAC,OAAIA,EAAEsK,WACrB9B,QAAQ,OAAO,GACfmB,KAAK,IAAK,SAAA3J,GAAC,OAAIiJ,EAAOjJ,EAAE+D,SACxBpD,KAAK,SAAA6J,GAAM,OAAIA,EAAOtG,WAAWkG,KAC7BT,KAAK,IAAK,SAAA3J,GAAC,OAAI4J,EAAO5J,EAAE6F,OAAS,KACjC8D,KAAK,SAAU,SAAA3J,GAAC,OAAI4J,EAAO,GAAKA,EAAO5J,EAAE6F,OAAS,QAE3D,SAAA4E,GAAI,OAAIA,EACHd,KAAK,kBAAmB,SAAA3J,GAAC,OAAIA,EAAE6F,QAE/B8D,KAAK,IAAK,SAAA3J,GAAC,OAAIiJ,EAAOjJ,EAAE+D,SACxBpD,KAAK,SAAA8J,GAAI,OAAIA,EAAKvG,WAAWkG,KACzBT,KAAK,SAAU,GACfA,KAAK,IAAK,kBAAMC,EAAO,SAIxC3F,SAAU2D,QAAQ8C,GAAG,mBAAoBlK,KAAKwG,YAAYnG,KAAKL,cA5H1CmK,yBCCzB,SAAAxK,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFAQf,IAAMwG,EAAM5C,SAAUzD,KAAKqG,KAAKsB,KAAK,IACrCtB,EAAIuB,UAAU,KAAKC,SAEnB,IACInD,EAAS1E,KAAKJ,MAAM8E,QAAU2B,EAAI8B,OAAO1D,wBAAwBC,OAErE2B,EAAI8C,KAAK,SAAUzE,yCAMT,IAAAZ,EAAA9D,KACJqG,EAAM5C,SAAUzD,KAAKqG,KAErBpB,EAAQoB,EAAI8B,OAAO1D,wBAAwBQ,MAC7CP,EAAS1E,KAAKJ,MAAM8E,QAAU2B,EAAI8B,OAAO1D,wBAAwBC,OAErE2B,EAAI8C,KAAK,SAAUzE,GACnB,IAAM0F,EAAI3G,YAAa,CAAE4G,SAAYrK,KAAKJ,MAAM8B,QAElC+B,YACT6G,KAAK,CAACrF,EAAOP,IACbkE,QAAQ,EAEb2B,CAAQH,EACHI,IAAI,SAAUhL,GAAK,OAAOA,EAAE6F,QAC5BhG,KAAK,SAAUJ,EAAGuG,GAAK,OAAOvG,EAAEyF,OAASc,EAAEd,QAAUc,EAAEH,MAAQpG,EAAEoG,SACpEoF,cAIF,IAAMC,EAAgB,SAAA3N,GAClB,IAAM4N,EAAW5N,EAAKkK,KACtB,SAAKnD,EAAKlE,MAAMsD,YAAcY,EAAKlE,MAAMsD,WAAWpG,OAAS,IACzD6N,EAAS1N,KAAO6G,EAAKlE,MAAMsD,WAAW,GAAGjG,IAG3C2M,EAAIvD,EAAI3C,aACTC,SAAS,KACTC,KAAKH,YAEV4C,EAAIuB,UAAU,QACTX,KAAKmD,EAAEQ,UACP1J,KACG,SAAA2I,GAAK,OAAIA,EACJ9B,OAAO,QACPC,QAAQ,WAAW,GACnBA,QAAQ,cAAe0C,GACvBvB,KAAK,KAAM,SAAU3J,GAAK,OAAOA,EAAEvC,KACnCkD,KAAK,SAAA0J,GAAK,OAAIA,EACVV,KAAK,IAAK,SAAA3J,GAAC,OAAIA,EAAEqL,KACjB1B,KAAK,IAAK,SAAA3J,GAAC,OAAIA,EAAEsL,KACjB3B,KAAK,QAAS,SAAU3J,GAAK,OAAOA,EAAEuL,GAAKvL,EAAEqL,KAC7C1B,KAAK,SAAU,SAAU3J,GAAK,OAAOA,EAAEwL,GAAKxL,EAAEsL,QAQvD,SAAAd,GAAM,OAAIA,EACLhC,QAAQ,cAAe0C,GACvBvB,KAAK,KAAM,SAAU3J,GAAK,OAAOA,EAAEvC,KAEnCkD,KAAK,SAAA6J,GAAM,OAAIA,EAAOtG,WAAWkG,GAC7BT,KAAK,IAAK,SAAA3J,GAAC,OAAIA,EAAEqL,KACjB1B,KAAK,IAAK,SAAA3J,GAAC,OAAIA,EAAEsL,KACjB3B,KAAK,QAAS,SAAU3J,GAAK,OAAOA,EAAEuL,GAAKvL,EAAEqL,KAC7C1B,KAAK,SAAU,SAAU3J,GAAK,OAAOA,EAAEwL,GAAKxL,EAAEsL,QAEvD,SAAAb,GAAI,OAAIA,EAAKpC,WAQrBxB,EAAIuB,UAAU,QACTsC,GAAG,YAAa,SAAAnN,GAAI,OAAI+G,EAAKlE,MAAMqL,gBAAiBlO,EAAKkK,QACzDiD,GAAG,WAAY,SAAAnN,GAAI,OAAI+G,EAAKlE,MAAMsL,iBAAkBnO,EAAKkK,QACzDiD,GAAG,QAAS,SAAAnN,GAAI,OAAI+G,EAAKlE,MAAMuL,cAAcpO,EAAKkK,QAGvDxD,SAAU2D,QAAQ8C,GAAG,iBAAkBlK,KAAKwG,YAAYnG,KAAKL,cAhGxCmK,0BCGzB,SAAAxK,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED0G,gBAAkBzG,EAAKyG,gBAAgBjG,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAK0G,YAAc1G,EAAK0G,YAAYlG,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAJJA,iFAQf,IAAMwG,EAAM5C,SAAUzD,KAAKqG,KAAKsB,KAAK,IAGjCjD,EAAS1E,KAAKJ,MAAM8E,QAAU2B,EAAI8B,OAAO1D,wBAAwBC,OAErE2B,EAAI8C,KAAK,SAAUzE,EAAS,iDAOb0G,EAAWC,GAC1BrL,KAAKuG,YAAY6E,EAAWC,uCAGpBD,EAAWC,GAAW,IAAAvH,EAAA9D,KAExBqG,EAAM5C,SAAUzD,KAAKqG,KAErBpB,EAAQoB,EAAI8B,OAAO1D,wBAAwBQ,MAC7CP,EAAS8E,KAAK8B,IAAIrG,EACdjF,KAAKJ,MAAM8E,QAAU2B,EAAI8B,OAAO1D,wBAAwBC,QAK1DhD,EAAQ1B,KAAKJ,MAAM8B,MAiBzB,IATA,SAAuB6J,EAAMC,GACzB,GAAID,EAAKzO,SAAW0O,EAAK1O,OAAU,OAAO,EAC1C,IAAK,IAAID,EAAI,EAAGA,EAAI0O,EAAKzO,OAAQD,IAAK,CAClC,GAAI0O,EAAK1O,GAAGI,KAAOuO,EAAK3O,GAAGI,GAAM,OAAO,EACxC,GAAIsO,EAAK1O,GAAGwI,QAAUmG,EAAK3O,GAAGwI,MAAS,OAAO,EAElD,OAAO,EAGPoG,EAOCL,GAAW,CAAC1J,MAAM,KAAKA,MACxB1B,KAAKJ,MAAM8B,OARf,CAkBA,IAAMgK,EAAOjI,aACRxG,GAAG,SAAAuC,GAAC,OAAIA,EAAE+D,MAAM5E,MAAM,KAAK,KAC3BgN,SAAS,SAAAnM,GAAC,OAAIA,EAAE+D,MAAM5E,MAAM,KAAK,IAFzB8E,CAE6B/B,GAEtCkK,EAAanI,SACZmF,QAAQ,MACR0B,KAAK,CAACrF,EAAOP,IAElBgH,EAAKlB,IAAI,SAAAhL,GAAC,OAAIL,OAAOK,EAAE6F,MAAQ7F,EAAE6F,MAAQ,KAEzC,IAAM4B,EAAOyE,EAAKjB,cACb3L,OAAO,SAAAU,GAAC,OAAIA,EAAEyH,KAAK1D,MAAMvG,QAAQ,QAAU,IAEhD4O,EAAWF,GACXrF,EAAIuB,UAAU,eAAelE,aAE7B,IAAMkG,EAAInG,eAAgBE,SAAS,MACnC3D,KAAK6L,iBAAmB5E,EAAKnK,OAQ7B,IAAMF,EAAI,SAAA4C,GAAC,OAAIA,EAAE5C,GAAK,GAChB4L,EAAI,SAAAhJ,GAAC,OAAIA,EAAEgJ,GAAK,GAChBsD,EAAI,SAAAtM,GAAC,OAAIA,EAAEsM,GAAK,GAEtBzF,EACKuB,UAAU,eACVX,KAAKA,GACL/F,KACG,SAAA2I,GAAK,OAAIA,EACJ9B,OAAO,UACPC,QAAQ,QAAQ,GAChBkC,GAAG,YAAa,SAAA1K,GAAC,OAAIsE,EAAKlE,MAAMmM,YAAYvM,EAAEyH,QAC9CiD,GAAG,WAAY,SAAA1K,GAAC,OAAIsE,EAAKlE,MAAMoM,WAAWxM,EAAEyH,QAC5CiD,GAAG,QAAS,SAAA1K,GACLsE,EAAKlE,MAAMsD,YACyB,IAAjCY,EAAKlE,MAAMsD,WAAWpG,QACtBgH,EAAKlE,MAAMsD,WAAW,GAAGjG,KAAOuC,EAAEyH,KAAKhK,GAC1C6G,EAAKlE,MAAMwD,iBAAiB,IAE5BU,EAAKlE,MAAMwD,iBAAiB,CAAC5D,EAAEyH,SAGtCkC,KAAK,KAAMX,GACXW,KAAK,KAAM2C,GACX3C,KAAK,IAAKvM,IACf,SAAAoN,GAAM,OAAIA,EACLb,KAAK,YAAa,SAAA3J,GAAC,OAAIA,EAAEyH,KAAK1D,QAC9BpD,KAAK,SAAA6J,GACFA,EACKtG,WAAW,SAAUlE,GAElB,OAAI5C,EAAE4C,IAAM,EAAY,MAnC5ByM,EAoCsBrP,EAAE4C,GApCb0M,EAoCiBzI,SAAUzD,MAAMmJ,KAAK,MAAQ,EAnCjE8C,EAAY,GAAOC,EAAY,EAmCuCtC,EAAI,MApCtF,IAAoBqC,EAAWC,IAsCV/C,KAAK,KAAMX,GACXW,KAAK,KAAM2C,GACX3C,KAAK,IAAKvM,MAEvB,SAAAqN,GAAI,OAAIA,EAAKpC,WAQrBpE,SAAU2D,QAAQ8C,GAAG,iBAAkBlK,KAAKwG,YAAYnG,KAAKL,eA/IxCmK,uLCDrB,OACIrJ,EAAA7B,EAAA8B,cAAA,mBAJiBgB,IAAMC,0DCI/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDuM,SAAWtM,EAAKD,MAAMuM,UAAY,aAEvCtM,EAAKuM,YAAcvM,EAAKuM,YAAY/L,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IALJA,2EAQPqJ,GACRlJ,KAAKmM,SAASjD,EAAEmD,OAAOC,wCAIvB,IAAMA,EAAQtM,KAAKJ,MAAM0M,OAAS,GAClC,OACIxL,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACXF,EAAA7B,EAAA8B,cAAA,SACAwL,SAAUvM,KAAKoM,YACfE,MAAOA,EACPE,YAAaxM,KAAKJ,MAAM4M,YACxBC,KAAK,iBAtBQC,0BCCzB,SAAA/M,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACD+M,YAAc9M,EAAK8M,YAAYtM,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAFJA,6EAMfG,KAAKJ,MAAMuM,SAASnM,KAAKJ,MAAM7C,uCAI/B,OACI+D,EAAA7B,EAAA8B,cAAA,OAAKiD,QAAShE,KAAK2M,YAAa3L,UAAU,qBACtCF,EAAA7B,EAAA8B,cAAA,WAAMf,KAAKJ,MAAM7C,KAAKwG,OAD1B,IACuCzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBAdrCe,IAAMC,uMCGtB,IAAAnC,EAAAG,KACL,OACIc,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBACThB,KAAKJ,MAAM8B,OAAS,IAAIxC,IAAI,SAACnC,EAAKF,GAChC,OAAQiE,EAAA7B,EAAA8B,cAAC6L,EAAD,CAAmB/G,IAAKhJ,EAAGsP,SAAUtM,EAAKD,MAAMuM,SAAUpP,KAAMA,cAN/DgF,IAAMC,kCCC/B,SAAArC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAED+M,YAAc9M,EAAK8M,YAAYtM,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHLA,6EAOdG,KAAKJ,MAAMuM,SAASnM,KAAKJ,MAAM7C,uCAI/B,OACI+D,EAAA7B,EAAA8B,cAAA,OAAKiD,QAAShE,KAAK2M,YAAaE,aAAY7M,KAAKJ,MAAM7C,KAAKuP,MAAOtL,UAAU,WAAWhB,KAAKJ,MAAM7C,KAAKwG,cAdvFxB,IAAMC,kCCG/B,SAAArC,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDsE,eAAiBrE,EAAKqE,eAAe7D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKsE,QAAUpC,IAAMO,YAErBzC,EAAKoC,MAAQ,CACTmC,UAAU,IACVC,UAAW,IAPDxE,gFAcd,KAAIG,KAAKiC,MAAMmC,WAAapE,KAAKJ,MAAM8B,QAQ1B,MANK1B,KAAKmE,QAAQI,QAAQC,UACNxE,KAAKmE,QAAQI,QAAQE,wBAAwBC,QAC1D1E,KAAKmE,QAAQI,QAAQE,wBAAwBC,QAI9C,GAAG,CAClB,IAAMN,EAAYpE,KAAKiC,MAAMmC,UAAYpE,KAAKiC,MAAMoC,UACpDrE,KAAKiD,SAAS,CAACmB,2DAMnBpE,KAAKmE,QAAQI,QAAQQ,iBAAiB,SAAU/E,KAAKkE,+DAIrDlE,KAAKmE,QAAQI,QAAQS,oBAAoB,SAAUhF,KAAKkE,iDAIpD,IAAAJ,EAAA9D,KACJ,OACIc,EAAA7B,EAAA8B,cAAA,OACAyC,IAAKxD,KAAKmE,QACVnD,UAAU,YACJhB,KAAKJ,MAAM8B,MAAMtC,MAAM,EAAGY,KAAKiC,MAAMmC,YAAc,IAAIlF,IAAI,SAACnC,EAAMF,GAChE,OACAiE,EAAA7B,EAAA8B,cAAC+L,EAAD,CACAX,SAAUrI,EAAKlE,MAAMuM,UAAY,aACjCtG,IAAKhJ,EACLE,KAAMA,cAlDGgF,IAAMC,0BCK/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAEfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDqC,MAAQ,CACT8K,WAAY,IAGhBlN,EAAKmN,iBAAmBnN,EAAKmN,iBAAiB3M,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKoN,aAAepN,EAAKoN,aAAa5M,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKqN,kBAAoBrN,EAAKqN,kBAAkB7M,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IACzBA,EAAKsN,cAAgBtN,EAAKsN,cAAc9M,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKuD,iBAAmBvD,EAAKuD,iBAAiB/C,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAZTA,gFAeFuN,GACbpN,KAAKJ,MAAMwD,iBAAiBgK,GAC5BpN,KAAKiD,SAAS,CAAE8J,WAAY,8CAGfnD,GACb5J,KAAKiD,SAAS,CACV8J,WAAYnD,yCAIPyD,GAET,IAAID,EAAatN,OAAAwN,EAAA,EAAAxN,CAAOE,KAAKJ,MAAMsD,YAC/BkK,EAActO,OAAO,SAAAG,GAAC,OAAIA,EAAEhC,KAAOoQ,EAAcpQ,KAAIH,OAAS,IAElEsQ,EAAa,GAAAtK,OAAAhD,OAAAwN,EAAA,EAAAxN,CAAOsN,GAAP,CAAsBC,IAEnCrN,KAAKoD,iBAAiBgK,EAAepN,KAAKiC,MAAM8K,uDAGlCQ,GACd,IAAIH,EAAatN,OAAAwN,EAAA,EAAAxN,CAAOE,KAAKJ,MAAMsD,YACnCkK,EAAgBA,EAActO,OAAO,SAAAG,GAEjC,OADYuO,OAAOvO,EAAEhC,MAAQuQ,OAAOD,KAIxCvN,KAAKoD,iBAAiBgK,EAAepN,KAAKiC,MAAM8K,kDAGtChQ,GACViD,KAAKkN,kBAAkBnQ,EAAKE,qCAGvB,IAAA6G,EAAA9D,KAIC0B,EAAQ1B,KAAKJ,MAAM6N,YAAYzN,KAAKiC,MAAM8K,WAAWpO,MAAM,MAC5DG,OAAO,SAAAjC,GAAC,OAAIA,EAAEI,MAAM6G,EAAKlE,MAAM2F,WAGpC,OACIzE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,YAEXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cAAchB,KAAKJ,MAAM8N,OACxC5M,EAAA7B,EAAA8B,cAAC4M,EAAD,CACIxB,SAAUnM,KAAKgN,iBACfR,YAAaxM,KAAKJ,MAAM4M,YACxBF,MAAOtM,KAAKiC,MAAM8K,cAI1BjM,EAAA7B,EAAA8B,cAAC6M,EAAD,CACIzB,SAAUnM,KAAKmN,cACfzL,MAAO1B,KAAKJ,MAAMsD,cAI1BpC,EAAA7B,EAAA8B,cAAC8M,EAAD,CACI1B,SAAUnM,KAAKiN,aACfvL,MAAOA,GAAS,aAjFPgL,MCJA3K,IAAMC,6BCE/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDkO,gBAAkBjO,EAAKiO,gBAAgBzN,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IACvBA,EAAKkO,eAAiBlO,EAAKkO,eAAe1N,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHPA,+EAMH9C,GACZiD,KAAKJ,MAAMwD,iBAAiBpD,KAAKJ,MAAM8B,MAAM5C,OAAO,SAAAjC,GAAC,OAAIA,EAAEI,KAAOF,EAAKsP,OAAOC,kDAI9EtM,KAAKJ,MAAMwD,iBAAiB,qCAK5B,IAAM4K,EAAWhO,KAAKJ,MAAMsD,YAA+C,IAAjClD,KAAKJ,MAAMsD,WAAWpG,OAAekD,KAAKJ,MAAMsD,WAAW,GAAK,CAAEjG,GAAI,OAE1GgR,EAA2B,QAAhBD,EAAS/Q,GAAe,QAAU,IAE/CiR,EAAc,eAIlB,OAHAA,EAAc,iBAAmBD,EAEb,QAAhBD,EAAS/Q,KAAgBiR,GAAe,YAExCpN,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,gBAEXF,EAAA7B,EAAA8B,cAAA,UACIC,UAAWiN,EAAW,iBACtBE,aAAcH,EAASI,GACvB7B,SAAUvM,KAAK8N,iBACfhN,EAAA7B,EAAA8B,cAAA,UACIiD,QAAShE,KAAK+N,eACdzB,MAAM,OACRtM,KAAKJ,MAAM4M,aAAe,aAE3BxM,KAAKJ,MAAM8B,MAAMxC,IAAI,SAACnC,EAAMF,GACzB,IAAMwR,EAAc,CAEhB/B,MAAOvP,EAAKE,IAEhB,OACI6D,EAAA7B,EAAA8B,cAAA,SAAAjB,OAAAwO,OAAA,CACIzI,IAAKhJ,GACDwR,GAActR,EAAKwG,UAKvCzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAW,UAAYkN,EAAalK,QAAShE,KAAK+N,yBAnD1ChM,IAAMC,0CCI/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAODqD,SAAS,CACVsL,QAAS,GACTC,MAAO,CAAC,CAAElC,MAAO1M,EAAM0L,KAAO,CAAEgB,MAAO1M,EAAM6O,MAC7CC,OAAQ,CAAC,CAAEpC,MAAO1M,EAAM0L,KAAO,CAAEgB,MAAO1M,EAAM6O,QAGlD5O,EAAK8O,MAAQ9O,EAAK8O,MAAMtO,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IACbA,EAAK+O,SAAW/O,EAAK+O,SAASvO,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKgP,SAAWhP,EAAKgP,SAASxO,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAKiP,WAAajP,EAAKiP,WAAWzO,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKkP,OAASlP,EAAKkP,OAAO1O,KAAZP,OAAAQ,EAAA,EAAAR,CAAAD,IACdA,EAAKmP,eAAiBnP,EAAKmP,eAAe3O,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKoP,aAAepP,EAAKoP,aAAa5O,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKqP,YAAcrP,EAAKqP,YAAY7O,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKsP,qBAAuBtP,EAAKsP,qBAAqB9O,KAA1BP,OAAAQ,EAAA,EAAAR,CAAAD,IAE5BA,EAAKuP,kBAAoBvP,EAAKuP,kBAAkB/O,KAAvBP,OAAAQ,EAAA,EAAAR,CAAAD,IAxBVA,uEA6Bf,OAAO4D,gBACFiF,OAAO,CAAC1I,KAAKJ,MAAM0L,IAAKtL,KAAKJ,MAAM6O,MAEnCD,MAAM,CAACxO,KAAKiC,MAAM0E,OAAOE,KAAM7G,KAAKiF,MAAQjF,KAAKiC,MAAM0E,OAAOG,yCAI9DpB,GACL,OAAO1F,KAAK2O,OAAL3O,CAAa0F,GAAO1F,KAAKqP,YAAc,mCAGzC7G,GACL,OAAOxI,KAAK2O,QAAQW,OAAO9G,EAAIxI,KAAKqP,YAAc,sCAG3C/C,GACP,OAAO9C,KAAKiF,IAAIzO,KAAKJ,MAAM0L,IAAK9B,KAAK8B,IAAItL,KAAKJ,MAAM6O,IAAKnC,mCAGtD9D,GACH,OAAOxI,KAAK4O,SAAS5O,KAAK8O,WAAWtF,KAAK+F,MAAMvP,KAAK6O,SAASrG,+CAI9D,IAAIgG,EAAQ,GAOZ,OANA/K,SAAUzD,KAAKqG,KACVmJ,OAAO,iBACP5H,UAAU,qBACV6H,KAAK,SAAAjQ,GAAC,OAAIgP,EAAMrL,KAAK3D,KAE1BgP,EAAQA,EAAMnP,KAAK,SAACJ,EAAGuG,GAAQ,OAAOvG,EAAEqN,MAAQ9G,EAAE8G,OAAS,EAAI,2CAM/C7I,SAAUzD,KAAKqG,KAAKmJ,OAAO,iBAAiB5H,UAAU,WAE9D6H,KAAK,SAAUjQ,GACnBiE,SAAUzD,MAAMwP,OAAO,QAAQE,KAAKlQ,EAAE8M,+CAM1C,IAAIkC,EAAQxO,KAAKgP,iBACjBhP,KAAKJ,MAAMwD,iBAAiBoL,EAAMtP,IAAI,SAAAsJ,GAAC,OAAIA,EAAE8D,wDAM7C,IAAIqD,EAAU,GAEdlM,SAAUzD,KAAKqG,KAAKuB,UAAU,WACzB6H,KAAK,WAEFE,EAAQxM,KAAKhE,OAAOsE,SAAUzD,MAAMmJ,KAAK,SAGjD1F,SAAUzD,KAAKqG,KAAKmJ,OAAO,cACtBrG,KAAK,IAAK1F,MAAOkM,GAAW3P,KAAKqP,YAAc,GAC/ClG,KAAK,QAAS1F,MAAOkM,GAAWlM,MAAOkM,qFAM9B,IAAA7L,EAAA9D,KAEdA,KAAK4P,SAEL,IAAIvJ,EAAM5C,SAAUzD,KAAKqG,KACzBA,EAAIuB,UAAU,KAAKC,SACnBxB,EAAIsB,KAAK,IAET,IACI3H,KAAKqG,IAAI9B,QAAQsL,UAAY,GAC/B,MAAO3G,IAIT,IAmBoB4G,EAAQC,EAlBxBC,GAHJ3J,EAAM5C,SAAUzD,KAAKqG,MAGN8B,OAAO1D,wBAClBQ,EAAQ+K,EAAK/K,MACbP,EAASsL,EAAKtL,OACduL,EAAejQ,KAAKJ,MAAMqQ,cAAgB,OAC1CZ,EAAcrP,KAAKJ,MAAMyP,aAAe,GACxCa,EAAclQ,KAAKJ,MAAMsQ,aAAe,EAExCC,EAAUnQ,KAAKiC,MAAM0E,OAAOC,KAAOlC,EAAS1E,KAAKiC,MAAM0E,OAAOI,QAAU,EAE5E/G,KAAKiF,MAAQA,EACbjF,KAAK0E,OAASA,EACd1E,KAAKqP,YAAcA,EAEnBrP,KAAKiD,SAAS,CAAEkN,YAChBnQ,KAAKiQ,aAAeA,EAgBpBH,EAAS,SAAAM,GAAC,OAAItM,EAAK7B,MAAM0E,OAAOE,MAChCkJ,EAAa,SAAAK,GAAC,OAAInL,EAAQnB,EAAK7B,MAAM0E,OAAOE,KAAO/C,EAAK7B,MAAM0E,OAAOG,OAarET,EAAI8C,KAAK,SAAUzE,EAAS,MAW5B2B,EAAI0B,OAAO,QACNC,QAAQ,SAAS,GACjBmB,KAAK,IAAK,WAAc,OAAO2G,MAC/B3G,KAAK,QAAS,WAAc,OAAO4G,MAInC5G,KAAK,IAAKgH,EAAUD,EAAc,GAClC/G,KAAK,SAAU+G,GAGpB7J,EAAI0B,OAAO,QACNC,QAAQ,aAAa,GACrBmB,KAAK,IAAKgH,EAAUD,EAAc,GAClC/G,KAAK,SAAU+G,GAMpB,IAAMnB,EAAS/O,KAAK+O,OAChBF,EAAW7O,KAAK6O,SAChBI,EAAejP,KAAKiP,aAElBE,EAAuBnP,KAAKmP,qBAclC,IAAMD,EAAclP,KAAKkP,YAOzB,IAAMjI,EAAOjH,KAAKJ,MAAMsD,WAAalD,KAAKJ,MAAMsD,WAAWhE,IAAI,SAAAsJ,GAAO,MAAO,CAAE8D,MAAO9D,KAAS,CAAC,CAAE8D,MAAOtM,KAAKJ,MAAM0L,KAAO,CAAEgB,MAAOtM,KAAKJ,MAAM6O,MAKzI4B,EAHchK,EAAI0B,OAAO,KAC1BC,QAAQ,gBAAgB,GAGxBJ,UAAU,YACVX,KAAKA,GACL4C,QACA9B,OAAO,KACPC,QAAQ,UAAU,GAClBmB,KAAK,IAAK,SAAAX,GAAC,OAAI1E,EAAK8K,SAASpG,EAAE8D,SAC/BnD,KAAK,YAAa,SAAAX,GAAC,mBAAA1F,OAAiBgB,EAAK8K,SAASpG,EAAE8D,OAAjC,KAAAxJ,OAA2CqN,EAAUF,EAAe,EAApE,OACnB9P,KAAKsD,SACDyG,GAAG,QA3CZ,SAAqB1K,GACjBiE,SAAUzD,MAAMsQ,QAAQtI,QAAQ,UAAU,KA2CrCkC,GAAG,OAlCZ,SAAiB1K,GACbiE,SAAUzD,MAAMmJ,KAAK,IAAK4F,EAAOtL,QAAS+E,IAC1C,IAAM+H,EAAK1B,EAASE,EAAOtL,QAAS+E,IACpC/E,SAAUzD,MACLmJ,KAAK,YAAa,SAAAX,GAAC,mBAAA1F,OAAiBiM,EAAOtL,QAAS+E,GAAjC,KAAA1F,OAAuCqN,EAAUF,EAAe,EAAhE,OAExBxM,SAAUzD,MAAMmJ,KAAK,aAAc3J,EAAE8M,MAAQiE,GAE7CtB,IACAE,MA0BKjF,GAAG,MArBZ,SAAmB1K,GACfiE,SAAUzD,MAAMgI,QAAQ,UAAU,GAClCkH,OAsBJC,IAGAkB,EAAatI,OAAO,SACfC,QAAQ,eAAe,GACvBmB,KAAK,aAFV,6BAAArG,OAFkB,iSAKbqG,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,QAASkG,GACdlG,KAAK,SAAU8G,GAEpBI,EAAatI,OAAO,QACfC,QAAQ,eAAe,GACvB0H,KAAK,SAAAlQ,GAAC,OAAIA,EAAE8M,QACZnD,KAAK,YAAa,WACf,mBAAArG,OACIuM,EAAc,EAAI5L,SAAUzD,MAAMmI,OAAOqI,UAAUvL,MAAQ,EAD/D,KAAAnC,OAGIqN,EACEF,EAAe,EACf,EALN,OAQRxM,SAAU2D,QAAQ8C,GAAG,sBAAwBlK,KAAKJ,MAAM2D,MAAOvD,KAAKwG,YAAYnG,KAAKL,iDA+JvEiB,GAAK,IAAAiG,EAAAlH,KACdiB,IAAOA,EAAM,CAACjB,KAAKJ,MAAM0L,IAAKtL,KAAKJ,MAAM6O,MAG1BhL,SAAUzD,KAAKqG,KAAKmJ,OAAO,iBACnC5H,UAAU,WACjBX,KAAKhG,EAAI/B,IAAI,SAAAsJ,GAAO,MAAO,CAAE8D,MAAO9D,MACpCW,KAAK,IAAK,SAAAX,GAAC,OAAItB,EAAK0H,SAASpG,EAAE8D,SAC/BnD,KAAK,YAAa,SAAAX,GAAC,mBAAA1F,OAAiBoE,EAAK0H,SAASpG,EAAE8D,OAAjC,KAAAxJ,OAA2CoE,EAAKjF,MAAMkO,QAAUjJ,EAAK+I,aAAe,EAApF,kDAITQ,EAAUC,GAGzB,SAASC,EAAW1P,GAChB,OAAKA,GAAc,EAAE,GAAI,GAH7BnB,OAAA8Q,EAAA,EAAA9Q,QAAAI,EAAA,EAAAJ,CAAAH,EAAAkR,WAAA,qBAAA7Q,MAAyBG,KAAKH,MAU9B,SAAmBuL,EAAMC,GACrB,GAAID,EAAKzO,SAAW0O,EAAK1O,OAAU,OAAO,EAC1C,IAAK,IAAID,EAAI,EAAGA,EAAI0O,EAAKzO,OAAQD,IAC7B,GAAI0O,EAAK1O,KAAO2O,EAAK3O,GAAM,OAAO,EAEtC,OAAO,EAGNiU,CAXUH,EAAWF,EAASvN,YACtByN,EAAW3Q,KAAKJ,MAAMsD,cAW1BlD,KAAKJ,MAAMsD,aAEZlD,KAAKoP,kBAAkBpP,KAAKJ,MAAMsD,YAClClD,KAAKiP,eACLjP,KAAKmP,yDAYb,OACIrO,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,gBACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,eAAehB,KAAKJ,MAAM2D,OACzCzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,iBACVmJ,EAAY0G,UAAUjB,OAAOzP,KAAKH,eAnd1BmK,+LCErB,IAAIjO,EAAK,KAuBT,OApBIA,GAFC8D,KAAKJ,MAAMsD,YAAclD,KAAKJ,MAAMsD,WAAWpG,OAAS,EAGrDgE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WACfF,EAAA7B,EAAA8B,cAAA,WACCf,KAAKJ,MAAMmR,WAAa,MAM7BjQ,EAAA7B,EAAA8B,cAAA,OACAC,UAAU,gBACVgD,QAAShE,KAAKJ,MAAMoR,cAEhBlQ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WACfF,EAAA7B,EAAA8B,cAAA,WAAMf,KAAKJ,MAAM2D,QAKtBzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aAAa9E,UAzBd6F,IAAMC,kCCG/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAODqR,mBAAqBpR,EAAKoR,mBAAmB5Q,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IARXA,kFAYAgG,GAAK,IAAA/B,EAAA9D,KACpB,OAAO,SAAAsM,GACH,IAAI4E,EAAOpR,OAAAkD,EAAA,EAAAlD,CAAA,GAAQgE,EAAKlE,MAAMsD,YAC9BgO,EAAQrL,GAAOyG,EACfxI,EAAKlE,MAAMwD,iBAAiB8N,qCAMhC,IAAMC,EAASrR,OAAAkD,EAAA,EAAAlD,CAAA,GACRE,KAAKJ,MADG,CAEX+G,OAAQ,CACJC,IAAK,GACLC,KAAM,GACNC,MAAO,GACPC,OAAQ,MAGVqK,EAAYpR,KAAKJ,MAAMyR,WAAa,cAAgB,YAE1D,OACIvQ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAW,wBAA0BoQ,GACtCtQ,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,SACAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACXF,EAAA7B,EAAA8B,cAACuQ,EACOH,IAKZrQ,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,oBACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,QACXF,EAAA7B,EAAA8B,cAACwQ,EAAD,CACIhO,MAAM,aACNH,iBAAkBpD,KAAKiR,mBAAmB,SAC1C/N,WAAYlD,KAAKJ,MAAMsD,WAAWnF,MAClCuN,IAAKtL,KAAKJ,MAAM+B,UAChB8M,IAAKzO,KAAKJ,MAAMgC,UAChB+E,OAAQ,CAAEC,IAAK,EAAGG,OAAQ,GAAIF,KAAM,GAAIC,MAAO,OAIvDhG,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,QACXF,EAAA7B,EAAA8B,cAACwQ,EAAD,CACIhO,MAAM,iBACNL,WAAYlD,KAAKJ,MAAMsD,WAAWrF,UAClCuF,iBAAkBpD,KAAKiR,mBAAmB,aAC1C3F,IAAKtL,KAAKJ,MAAMiC,cAChB4M,IAAKzO,KAAKJ,MAAMkC,cAChB6E,OAAQ,CAAEC,IAAK,EAAGG,OAAQ,GAAIF,KAAM,GAAIC,MAAO,gBAhE9C/E,IAAMC,uMCE3B,IAAMpC,EAAKE,OAAAkD,EAAA,EAAAlD,CAAA,GACJE,KAAKJ,MADD,CAEP4R,MAAM,IAGV,OACI1Q,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,mBACXF,EAAA7B,EAAA8B,cAAC0Q,EAAc7R,WAVFmC,IAAMC,kCCG/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDqC,MAAQ,CAAE8O,UAAW,KAC1BlR,EAAK6R,QAAU7R,EAAK6R,QAAQrR,KAAbP,OAAAQ,EAAA,EAAAR,CAAAD,IACfA,EAAK8R,cAAgB9R,EAAK8R,cAActR,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAK+R,eAAiB/R,EAAK+R,eAAevR,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAK8M,YAAc9M,EAAK8M,YAAYtM,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAK0D,MAAQ1D,EAAK0D,MAAMlD,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IAREA,uEAcf,OAAKG,KAAKJ,MAAMsD,YAAclD,KAAKJ,MAAMsD,WAAWpG,OAAS,EAAY,GAClEkD,KAAKJ,MAAMsD,WAAW,GAAGK,sCAK5BwN,GACJ/Q,KAAKiD,SAAS,CAAE8N,oDAGNhU,GACViD,KAAK0R,QAAQ3U,EAAKwG,2CAGVxG,GAEJiD,KAAKJ,MAAMsD,YACRlD,KAAKJ,MAAMsD,WAAWpG,OAAS,GAC/BkD,KAAKJ,MAAMsD,WAAW,GAAGjG,KAAOF,EAAKE,GACxC+C,KAAKJ,MAAMwD,iBAAiB,IAE5BpD,KAAKJ,MAAMwD,iBAAiB,CAACrG,6CAMjCiD,KAAK0R,QAAQ,sCAGR,IAAA5N,EAAA9D,KAEL,OACIc,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,uBAEXF,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,sBAEAF,EAAA7B,EAAA8B,cAAC8Q,EAAD,CACInQ,MAAOqE,EAAc/F,KAAKJ,MAAMrC,UAChCkI,SAAUzF,KAAKJ,MAAMrC,SAErB0N,gBAAiBjL,KAAK2R,cACtBzG,iBAAkBlL,KAAK4R,eACvB1O,WAAYlD,KAAKJ,MAAMsD,WACvBiI,cAAenL,KAAK2M,cAMxB7L,EAAA7B,EAAA8B,cAAC+Q,EAAD,CACI5O,WAAYlD,KAAKJ,MAAMsD,WACvB6N,UAAW/Q,KAAKiC,MAAM8O,UACtBC,aAAc,WAAQlN,EAAKlE,MAAMwD,iBAAiB,KAClDG,MAAOvD,KAAKuD,UAGhBzC,EAAA7B,EAAA8B,cAACgR,EAAD,CACI3O,iBAAkBpD,KAAKJ,MAAMwD,iBAC7B1B,MAAOqE,EAAc/F,KAAKJ,MAAMrC,UAChC2F,WAAYlD,KAAKJ,MAAMsD,WACvBsJ,YAAa,mCA7EJzK,IAAMC,0CCI/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDqC,MAAQ,CACT8K,WAAY,IAEhBlN,EAAKuD,iBAAmBvD,EAAKuD,iBAAiB/C,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKmN,iBAAmBnN,EAAKmN,iBAAiB3M,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKsN,cAAgBtN,EAAKsN,cAAc9M,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAK+F,gBAAkB/F,EAAK+F,gBAAgBvF,KAArBP,OAAAQ,EAAA,EAAAR,CAAAD,IARRA,6EAYL9C,GACViD,KAAKJ,MAAMwD,iBAAiBpD,KAAKJ,MAAMsD,WAAWpE,OAAO,SAAAjC,GAAC,OAAIA,EAAEI,KAAOF,EAAKE,+CAG/D8P,GAGb/M,KAAKiD,SAAS,CACV8J,0DASJ/M,KAAKgN,iBAAiB,IACtBhN,KAAKJ,MAAMwD,iBAAiBuF,MAAM,KAAMqJ,mDAI5BjV,GAGZ,IAAMmG,EAAalD,KAAKJ,MAAMqS,eACxBC,EAA+BlS,KAAKJ,MAAMsD,WAAWpE,OAAO,SAAAjC,GAAC,OAAIA,EAAEI,KAAOF,EAAKE,KAEjFF,EAAKE,MAAMiG,EAAclD,KAAKoD,iBAAiB8O,GAC5ClS,KAAKoD,iBAAiB8O,EAA6BpP,OAAO,CAAC/F,sCAK7D,IAAAoV,EAIqBnS,KAAKJ,MAAM6N,YAAYzN,KAAKiC,MAAM8K,YAJvDqF,EAAAtS,OAAAuS,EAAA,EAAAvS,CAAAqS,EAAA,GAIEzQ,EAJF0Q,EAAA,GAIS3M,EAJT2M,EAAA,GAMCjM,EAAY,CACdjB,SAAUlF,KAAKJ,MAAMsF,SACrB9B,iBAAkBpD,KAAKoD,iBACvB1B,QACA6D,SAAUvF,KAAKJ,MAAM0S,gBACrBhN,SAAS,EACTG,WACAG,gBAAiB5F,KAAK4F,gBACtB1C,WAAYlD,KAAKJ,MAAMqS,gBAM3B,OACInR,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,2BACXF,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,gBACAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,iBACXF,EAAA7B,EAAA8B,cAAC4M,EAAD,CACInB,YAAY,iBACZL,SAAUnM,KAAKgN,iBACfV,MAAOtM,KAAKiC,MAAM8K,YAHtB,MAWJjM,EAAA7B,EAAA8B,cAACqF,EAAsBD,WAnFVpE,IAAMC,mDCI/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA+GV2S,eAAiB,SAAAjG,GAEb,OADYzM,EAAK2S,mBACN1T,OAAO,SAAA0J,GAAC,OAAI7M,0BAAgB6M,EAAEjF,OAAOvG,QAAQrB,0BAAgB2Q,KAAW,KAlHpEzM,EA4HnB4S,4BAA8B,SAAAC,GAAe,IAAZpG,EAAYoG,EAAZpG,MAC7BzM,EAAKoD,SAAS,CACV0P,YAAa9S,EAAK0S,eAAejG,MA9HtBzM,EAmInB+S,4BAA8B,WAC1B/S,EAAKoD,SAAS,CACV0P,YAAa,MAlIjB9S,EAAKoC,MAAQ,CACT8K,WAAY,GACZ4F,YAAa,GACb5B,UAAW,KAGflR,EAAK2S,iBAAmB3S,EAAK2S,iBAAiBnS,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IAExBA,EAAKsN,cAAgBtN,EAAKsN,cAAc9M,KAAnBP,OAAAQ,EAAA,EAAAR,CAAAD,IACrBA,EAAKmM,WAAanM,EAAKmM,WAAW3L,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKkM,YAAclM,EAAKkM,YAAY1L,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAEnBA,EAAK0S,eAAiB1S,EAAK0S,eAAelS,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IACtBA,EAAKgT,mBAAqBhT,EAAKgT,mBAAmBxS,KAAxBP,OAAAQ,EAAA,EAAAR,CAAAD,IAC1BA,EAAK0M,SAAW1M,EAAK0M,SAASlM,KAAdP,OAAAQ,EAAA,EAAAR,CAAAD,IAChBA,EAAK+S,4BAA8B/S,EAAK+S,4BAA4BvS,KAAjCP,OAAAQ,EAAA,EAAAR,CAAAD,IACnCA,EAAK4S,4BAA8B5S,EAAK4S,4BAA4BpS,KAAjCP,OAAAQ,EAAA,EAAAR,CAAAD,IACnCA,EAAKiT,iBAAmBjT,EAAKiT,iBAAiBzS,KAAtBP,OAAAQ,EAAA,EAAAR,CAAAD,IACxBA,EAAKkT,qBAAuBlT,EAAKkT,qBAAqB1S,KAA1BP,OAAAQ,EAAA,EAAAR,CAAAD,IAC5BA,EAAK0D,MAAQ1D,EAAK0D,MAAMlD,KAAXP,OAAAQ,EAAA,EAAAR,CAAAD,IACbA,EAAKmT,eAAiBnT,EAAKmT,eAAe3S,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAItBA,EAAK2S,mBA3BU3S,8EA+BJ9C,GACX,IAAKA,EAAO,MAAO,GACnB,IAAI0B,EAAO1B,EAAKwG,MAAM5E,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC/CD,EAAU3B,EAAK2B,QAGf,OAAID,GAAQC,EAAiBD,EAAO,KAAOC,EAClCD,IACAC,QAAJ,mCAIL,OAAKsB,KAAKJ,MAAMsD,YAAclD,KAAKJ,MAAMsD,WAAWpG,OAAS,EAAW,GAEjEkD,KAAKgT,eAAehT,KAAKJ,MAAMsD,WAAW,kDAI/B+P,EAAWC,GAI7B,OAHsBD,IAAcjT,KAAKJ,OACjCsT,IAAclT,KAAKiC,iDASZ,IAAA6B,EAAA9D,KAEXmT,EAAiB,GAEjBC,EAAcrN,EAAc/F,KAAKJ,MAAMyT,gBACtCvU,OACG,SAAAT,GAAK,OAAgE,IAA5DA,EAAMkF,MAAM5E,MAAM,KAAKG,OAAO,SAAA0J,GAAC,OAAIA,EAAE1L,OAAS,IAAGA,SAE7DoC,IAAI,SAAAnC,GACD,IAAIb,EAAG4D,OAAAkD,EAAA,EAAAlD,CAAA,GAAQ/C,GAgBf,OAdMA,EAAKE,MAAM6G,EAAKlE,MAAM0T,cAExBpX,EAAImJ,MAAQ,GAYTnJ,IAkBf,OAZAkX,EAAYlN,QAAQ,SAAAqN,GAChB,IAAM7U,EAAU6U,EAAQhQ,MAAM5E,MAAM,KAAK,GACzC,KAAIwU,EAAenW,QAAQ0B,IAAY,GAAvC,CACAyU,EAAehQ,KAAKzE,GACpB,IAAM6E,EAAK,GAAAT,OAAMpE,EAAN,SACP8U,EAAU,CAAEjQ,QAAOtG,GAAIsG,GAC3B6P,EAAYjQ,KAAKqQ,MAGrBJ,EAAYjQ,KAAK,CAAEI,MAAO,QAAStG,GAAI,UAGhCmW,6CAIQK,GAEf,OAAOzT,KAAKgT,eAAeS,oCAStBC,KAAqB,IAAZC,EAAYC,EAAZD,SACd3T,KAAKiD,SAAS,CACV8J,WAAY4G,6CAiBHF,GACb,OACI3S,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cACVhB,KAAKgT,eAAeS,iDAMZvK,KAAmB,IAAduK,EAAcI,EAAdJ,WACtBzT,KAAKJ,MAAMwD,iBAAiB,CAACqQ,4CAI7BzT,KAAKJ,MAAMwD,iBAAiB,wCAGpB5D,GACRQ,KAAKiD,SAAS,CAAE8N,UAAW/Q,KAAKgT,eAAexT,0CAM/CQ,KAAKiD,SAAS,CAAE8N,UAAW,6EA4BtB,IAAA+C,EAECC,EAAa,CACfvH,YAAa,oBACbF,MAAOtM,KAAKiC,MAAM8K,WAClBR,SAAUvM,KAAKuM,UAGnB,OACIzL,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,0BACXF,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,SAAd,gBAEAF,EAAA7B,EAAA8B,cAACiT,GAADF,EAAA,CACIpS,MAAO1B,KAAKwS,oBADhB1S,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,QAEW9T,KAAKwS,oBAFhB1S,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,WAIc9T,KAAKJ,MAAM0T,aAJzBxT,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,aAKgB9T,KAAKJ,MAAMsD,YAL3BpD,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,cAMiB9T,KAAK+L,aANtBjM,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,aAOgB9T,KAAKgM,YAPrBlM,OAAAmU,EAAA,EAAAnU,CAAAgU,EAAA,mBAQsB9T,KAAKJ,MAAMwD,kBARjC0Q,IAWAhT,EAAA7B,EAAA8B,cAACmT,EAAAjV,EAAD,CACI0T,YAAa3S,KAAKiC,MAAM0Q,YACxBF,4BAA6BzS,KAAKyS,4BAClCG,4BAA6B5S,KAAK4S,4BAClCC,mBAAoB7S,KAAK6S,mBACzBE,qBAAsB/S,KAAK+S,qBAC3BD,iBAAkB9S,KAAK8S,iBACvBiB,WAAYA,IAMhBjT,EAAA7B,EAAA8B,cAAC+Q,EAAD,CACId,aAAchR,KAAKmN,cACnBjK,WAAYlD,KAAKJ,MAAMsD,WACvB6N,UAAW/Q,KAAKiC,MAAM8O,UACtBxN,MAAOvD,KAAKuD,kBAxOHxB,IAAMC,0CCD/B,SAAArC,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDqC,MAAQ,CACTkS,MAAO,EACP9P,UAAW,GAIfxE,EAAKuU,aAAevU,EAAKuU,aAAa/T,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAKqE,eAAiBrE,EAAKqE,eAAe7D,KAApBP,OAAAQ,EAAA,EAAAR,CAAAD,IAEtBA,EAAKwU,WAAatS,IAAMO,YAZTzC,4EAoBNyU,EAAQzX,GAAG,IAAAiH,EAAA9D,KAEpB,OACIc,EAAA7B,EAAA8B,cAAA,KACAsL,OAAO,SACPkI,IAAI,sBACJC,KAAMF,EAAOG,KACb5O,IAAKhJ,GACDiE,EAAA7B,EAAA8B,cAAA,OACAC,UAAU,eACNF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBACVsT,EAAO5G,OAGZ5M,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cACVsT,EAAOtW,YAAYkB,IAAI,SAAAqR,GAAE,OAAKzP,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,WAAW6E,IAAKhJ,GAAI0T,KAIhE+D,EAAO/V,mBAAmBW,IAAI,SAACT,EAAM5B,GAAP,OAAciE,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,WAAW6E,IAAKhJ,GAAI4B,EAAMA,GAAQ6V,EAAO9V,sBAAsB3B,GAAK,KAAO,GAAIyX,EAAO9V,sBAAsB3B,OAG3KiE,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACVsT,EAAO/W,SAAS2B,IAAI,SAACsE,EAAK3G,GAAN,OAAaiE,EAAA7B,EAAA8B,cAAA,MAAIC,UAAU,WAAW6E,IAAKhJ,GAAIiH,EAAKlE,MAAMrC,SAASiG,GAAKD,UAEjGzC,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBACV5E,2BAAiBkY,IAGtBxT,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,wBACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cAAf,oDAQhB,IAAMsD,EAAe8C,OAAOsN,YAActN,OAAOuN,YAC3CC,EAAqBxN,OAAOC,SAASC,KAAKuN,aAAevQ,EAE3DtE,KAAKJ,MAAMkV,QAAQhY,OAASkD,KAAKiC,MAAMkS,OACpCS,EAAqB,KACxB5U,KAAKiD,SAAS,CAAEkR,MAAOnU,KAAKiC,MAAMkS,MAAQnU,KAAKiC,MAAMoC,wDAKzDgD,SAAStC,iBAAiB,SAAU/E,KAAKkE,+DAIzCmD,SAASrC,oBAAoB,SAAUhF,KAAKkE,iDAI5C,OACIpD,EAAA7B,EAAA8B,cAAA,OACIC,UAAU,WACVF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,SAAf,aACcF,EAAA7B,EAAA8B,cAAA,QAAMC,UAAU,QAAQO,IAAQvB,KAAKJ,MAAMkV,QAAQhY,QAAQ0E,OAAO,QADhF,wCAGAV,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,WACXF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBAAf,mBAGAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,cAAf,sBAGAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aAAf,aAGAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,kBAAf,kBAIAF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,wBAAf,SAIJF,EAAA7B,EAAA8B,cAAA,OACIyC,IAAKxD,KAAKqU,WACVrT,UAAU,qBACThB,KAAKJ,MAAMkV,QAAQ1V,MAAM,EAAGY,KAAKiC,MAAMkS,OAAOjV,IAAIc,KAAKoU,uBAzG/CrS,IAAMC,WCa7BiF,UAAOzL,EAAQ,KAMfuZ,EAAkB,CACpBpX,OAAU,CAAC,MAAO,QAAS,QAC3BqX,UAAa,GACbC,aAAgB,GAChBrW,SAAY,GACZsW,aAAgB,GAChB/X,SAAY,GACZE,aAAgB,GAChBE,SAAY,GACZK,WAAc,kBAKd,SAAA+B,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IAEfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDuV,SAAWlO,EAAKmO,UAErBvV,EAAKoC,MAALnC,OAAAkD,EAAA,EAAAlD,CAAA,GACOD,EAAKsV,SADZ,CAII3Y,QAASuY,IAIblV,EAAKwV,WAAaxV,EAAKwV,WAAWhV,KAAhBP,OAAAQ,EAAA,EAAAR,CAAAD,IAClBA,EAAKyV,aAAezV,EAAKyV,aAAajV,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IACpBA,EAAK0V,oBAAsB1V,EAAK0V,oBAAoBlV,KAAzBP,OAAAQ,EAAA,EAAAR,CAAAD,IAfZA,0EAkBRrD,GACPA,EAAUA,GAAWuY,EADL,IAAAS,EAE6BvO,EAAKmO,QAAQ5Y,GAAlDiZ,EAFQD,EAERC,UAAWtY,EAFHqY,EAEGrY,SAAUkE,EAFbmU,EAEanU,YAE7BrB,KAAKiD,SAAS,CACVzG,UACAiZ,YACAtY,WACAkE,uDAISrB,KAAKqV,yDAEFxP,GAAK,IAAA/B,EAAA9D,KACrB,OAAO,SAAA0F,GACH,IAAIlJ,EAAOsD,OAAAkD,EAAA,EAAAlD,CAAA,GAAQgE,EAAK7B,MAAMzF,SAC9BA,EAAQqJ,GAAOH,EACf5B,EAAKuR,WAAW7Y,qCAcf,IAAA0K,EAAAlH,KAEL6E,QAAQC,IAAI,wBAAyB9E,KAAKiC,OAE1C,IAAIyT,EAAiB,GAOrB,OANA5V,OAAOsB,KAAKpB,KAAKiC,MAAMZ,YAAYlE,UAAU+I,QAAQ,SAAAyP,GAC7C,CAAC,MAAO,SAAS3Y,QAAQkK,EAAKjF,MAAMZ,YAAYlE,SAASwY,GAAGpS,QAAU,GACtEmS,EAAevS,KAAK+D,EAAKjF,MAAMZ,YAAYlE,SAASwY,MAKxD7U,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,YAEXF,EAAA7B,EAAA8B,cAAA,WAASC,UAAU,6BACfF,EAAA7B,EAAA8B,cAAC6U,EAAD,CACIlU,MAAO1B,KAAKiC,MAAMwT,UAClBjZ,QAASwD,KAAKiC,MAAMzF,QACpB6E,YAAarB,KAAKiC,MAAMZ,YACxBM,UAxFN,KAyFMC,UAxFN,KAyFMC,cAxFF,KAyFEC,cAxFF,QA6FNhB,EAAA7B,EAAA8B,cAAA,WAASC,UAAU,eAKfF,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,aACXF,EAAA7B,EAAA8B,cAAA,OACIC,UAAU,OACVgD,QAAShE,KAAKsV,cAFlB,iBAIAxU,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,QAAf,kBAGJF,EAAA7B,EAAA8B,cAAC8U,EAAD,CACIzS,iBAAkBpD,KAAKuV,oBAAoB,UAC3C5U,IAAKX,KAAKiC,MAAMZ,YAAY1D,OAAOgD,IAAI0E,MACvCzE,MAAOZ,KAAKiC,MAAMZ,YAAY1D,OAAOiD,MAAMyE,MAC3CxE,KAAMb,KAAKiC,MAAMZ,YAAY1D,OAAOkD,KAAKwE,QAG7CvE,EAAA7B,EAAA8B,cAAC+U,EAAD,CACI1S,iBAAkBpD,KAAKuV,oBAAoB,YAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQoC,SAC/B8C,MAAOqE,EAAc/F,KAAKiC,MAAMZ,YAAYC,WAC5CmE,SAAUzF,KAAKiC,MAAMZ,YAAYC,UACjCiE,SAAUQ,EAAc/F,KAAKmV,SAAS9T,YAAYC,aAGtDR,EAAA7B,EAAA8B,cAACgV,EAAD,CAEI1N,QA9HN,KA+HMC,QA5HF,KA6HE3G,UAhIN,KAiIMC,UAhIN,KAiIMC,cAhIF,KAiIEC,cAhIF,KAiIEsB,iBAAkBpD,KAAKuV,oBAAoB,cAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQoB,WAC/ByT,WAAYrR,KAAKmV,SAASM,UAAU3Y,OAASkD,KAAKiC,MAAMwT,UAAU3Y,OAClEmK,KACInH,OAAOsB,KAAKpB,KAAKiC,MAAMZ,YAAY2U,YAC9B9W,IAAI,SAAA/C,GAAC,OAAI+K,EAAKjF,MAAMZ,YAAY2U,WAAW7Z,KAG3C2C,OAAO,SAAAmX,GAAG,OAAIA,EAAI1S,OA5IjC,MA4IuD0S,EAAI1S,OA3I3D,OA4IerE,IAAI,SAAAD,GAAO,OAAOa,OAAAkD,EAAA,EAAAlD,CAAA,GAAKb,EAAZ,CAAe6K,SAAU,YACpChH,OACGhD,OAAOsB,KAAKpB,KAAKiC,MAAMZ,YAAY6U,gBAC9BhX,IAAI,SAAA/C,GAAC,OAAI+K,EAAKjF,MAAMZ,YAAY6U,eAAe/Z,KAC/C2C,OAAO,SAAAmX,GAAG,OAAIA,EAAI1S,OA/IrC,MA+I+D0S,EAAI1S,OA9InE,OA+ImBrE,IAAI,SAAAD,GAAO,OAAOa,OAAAkD,EAAA,EAAAlD,CAAA,GAAKb,EAAZ,CAAe6K,SAAU,mBAKzDhJ,EAAA7B,EAAA8B,cAACoV,EAAD,CACI/S,iBAAkBpD,KAAKuV,oBAAoB,eAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQ4B,YAC/BkV,YAAatT,KAAKiC,MAAMZ,YAAYiS,YACpCD,eAAgBrT,KAAKmV,SAAS9T,YAAYiS,YAC1C9G,YAAY,yBAGhB1L,EAAA7B,EAAA8B,cAACqV,EAAD,CACI/Y,aAAc2C,KAAKiC,MAAMZ,YAAYhE,aACrCiV,gBAAiBtS,KAAKmV,SAAS9T,YAAYhE,aAC3C+F,iBAAkBpD,KAAKuV,oBAAoB,gBAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQa,aAC/B4U,eAAgBhM,EAAcjG,KAAKiC,MAAMzF,QAAQa,cAEjDoQ,YAAa,SAAA7D,GAGT,IAAMkL,EAAU7N,EAAK5J,aAAagZ,QAAQzM,GAAK,IAAIjL,MAAM,MACrD2X,EAAU,GASd,MAAO,CARMxB,EACZhW,OAAO,SAAAjC,GAAC,OAAIA,EAAEI,MAAMiK,EAAKjF,MAAMZ,YAAYhE,eAC3C6B,IAAI,SAAArC,GACD,IAAM0Z,EAAOzW,OAAAkD,EAAA,EAAAlD,CAAA,GAAQjD,EAAR,CAAWwI,MAAO6B,EAAKjF,MAAMZ,YAAYhE,aAAaR,EAAEI,IAAIoI,QAEzE,OADAiR,EAAQzZ,EAAEI,IAAMsZ,EACTA,IAGKD,MAOxBxV,EAAA7B,EAAA8B,cAACyV,EAAD,CACIpT,iBAAkBpD,KAAKuV,oBAAoB,YAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQe,SAC/BgI,SAAUvF,KAAKiC,MAAMZ,YAAY9D,SACjCA,SAAUyC,KAAKiC,MAAMZ,YAAY9D,SACjCkQ,YAAaxG,EAAK1J,SAAS8Y,OAC3B7J,YAAY,iCAKpB1L,EAAA7B,EAAA8B,cAAA,WAASC,UAAU,iBACfF,EAAA7B,EAAA8B,cAAC0V,EAAD,CACI/I,MAAM,WACNtK,iBAAkBpD,KAAKuV,oBAAoB,YAC3CrS,WAAYlD,KAAKiC,MAAMzF,QAAQW,SAC/BoI,SAAUvF,KAAKiC,MAAMZ,YAAYlE,SACjCsQ,YAAaxG,EAAK9J,SAASkZ,OAC3B7J,YAAY,iCAIpB1L,EAAA7B,EAAA8B,cAAA,WAASC,UAAU,mBACfF,EAAA7B,EAAA8B,cAAC2V,EAAD,CACInZ,SAAUyC,KAAKiC,MAAMZ,YAAY9D,SACjCuX,QAAS9U,KAAKiC,MAAMwT,qBAlMf1T,IAAMC,WCzBpB2U,OARf,WACE,OACE7V,EAAA7B,EAAA8B,cAAA,OAAKC,UAAU,OACfF,EAAA7B,EAAA8B,cAAC6V,EAAD,QCKgBC,QACW,cAA7BzP,OAAO0P,SAASC,UAEe,UAA7B3P,OAAO0P,SAASC,UAEhB3P,OAAO0P,SAASC,SAASC,MACvB,2DCXNC,IAASrH,OAAO9O,EAAA7B,EAAA8B,cAACmW,GAAD,MAAS7P,SAAS8P,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,mCE9HnBhc,EAAOC,QAAU,SAASuL,EAAMyQ,GAAY,IAMhC/b,EAAoBH,EAAQ,IAA5BG,gBACF8Z,EAAYja,EAAQ,IAEtBmc,EAAS,GAEK1Q,EAEZf,QAAQ,SAAAtJ,GAAC,OAAI+a,EAAO/a,EAAEK,IAAML,IAElC,IAAMgb,EAAO,SAAA3a,GAAE,OAAI0a,EAAO1a,IAEtBT,EAAU,GAoCd,OAlCAA,EAAQqb,qBAAuB,SAAUC,GAErC,OADAA,EAAQA,GAAS,GACV,SAAU/a,GACb,IAAK,IAAIF,EAAI,EAAGA,EAAIib,EAAMhb,OAAQD,IAAK,CACnC,IAAIjB,EAAOkc,EAAMjb,GACjB,GAAIlB,EAAgBoB,EAAKwG,OAAOvG,QAAQrB,EAAgBC,IAAS,EAAG,OAAO,EAE/E,OAAO,IA2BR,CAACgc,OAAMvB,OAfd,SAAiByB,GAEb,IAAI5b,EAAM,GAUV,OATA4b,EAAQA,GAAS,IAEhBrC,EAAU5W,SAAW,IAAIqH,QAAQ,SAAAtJ,GAC9BA,EAAE8a,GAAYxR,QAAQ,SAAAyP,GAClB,IAAMnZ,EAAQqb,qBAAqBC,EAA7Btb,CAAoCob,EAAKjC,IAAQ,OAAO,EAC1DzZ,EAAIc,QAAQ4a,EAAKjC,IAAM,GAAGzZ,EAAIiH,KAAKyU,EAAKjC,QAI7CzZ,mYCxCf,SAASkZ,EAAQ1X,GAEb,IAAIxB,EAAM,CAENiB,SAAY,GACZmE,UAAa,GACb0U,WAAc,GACd3Y,aAAgB,GAChBM,OAAU,CACNgD,IAAK,CAAE4C,MAAO,MAAO8B,MAAO,GAC5BzE,MAAO,CAAE2C,MAAO,QAAS8B,MAAO,GAChCxE,KAAM,CAAE0C,MAAO,OAAQ8B,MAAO,IAElC9H,SAAY,GAGZ2Y,eAAkB,GAGlB5C,YAAe,GACfyE,YAAe,GACfC,eAAkB,IAMtB,SAASC,EAAKC,EAAQnb,GACZA,EAAKE,MAAMf,EAAIgc,KACjBhc,EAAIgc,GAAQnb,EAAKE,IAAjB6C,OAAAqY,EAAA,EAAArY,CAAA,GAA4B/C,EAA5B,CAAkCsI,MAAO,KAE7CnJ,EAAIgc,GAAQnb,EAAKE,IAAIoI,OAAS,EAGlC,IAAI+S,EAAM3C,QAAgB/X,GAAW,IAErC,SAAS4V,EAAY1W,GACjB,IAAIV,EAAM,GACJmc,GAAazb,EAAE2B,oBAAsB,IAAIzB,OACzCwb,GAAgB1b,EAAE4B,uBAAyB,IAAI1B,OACrD,GAAIub,EAAY,GAAKA,IAAcC,EAAgB,MAAO,GAC1D,IAAK,IAAIzb,EAAI,EAAGA,EAAIwb,EAAWxb,IAAK,CAChC,IAAM4B,EAAO7B,EAAE2B,mBAAmB1B,IAAM,GACpC6B,EAAU9B,EAAE4B,sBAAsB3B,IAAM,GAC5CX,EAAIiH,KAAJ,GAAAL,OAAYrE,EAAZ,KAAAqE,OAAoBpE,EAApB,KAAAoE,OAA+BpE,IAEnC,OAAOxC,EAsEX,OAnEAkc,EAAMA,EAAIlZ,IAAI,SAAAtC,GAAO,OAAOkD,OAAAqY,EAAA,EAAArY,CAAA,GAAKlD,EAAZ,CAAe0W,YAAaA,EAAY1W,QAEzDsJ,QAAQ,SAAAtJ,GAGRA,EAAE2b,aAAarS,QAAQ,SAAAyP,GAAOsC,EAAK,WAAY9a,OAAcwY,MAK7DsC,EAAK,SAFc,CAAEhb,GAAIZ,oBAAUO,GAAGf,gBAMlCe,EAAEoB,aAAwC,IAAzBpB,EAAEoB,YAAYlB,QAC/Bmb,EAAK,aAAc,CAAE1U,MAAO3G,EAAEoB,YAAY,GAAIf,GAAIL,EAAEoB,YAAY,KAIpEia,EAAK,YAAa,CAAE1U,MAAO3G,EAAEgC,SAAU3B,GAAIL,EAAEgC,WAG7ChC,EAAE0W,YAAYpN,QAAQ,SAAA7H,GAClB,IAAMI,EAAOJ,EAAMM,MAAM,KAAK,GAC1BD,EAAUL,EAAMM,MAAM,KAAK,GAC/BsZ,EAAK,cAAe,CAChB1U,MAAOlF,EACPpB,GAAIoB,EACJI,OACAC,YAEJuZ,EAAK,cAAe,CAChB1U,MAAO9E,EACPxB,GAAIwB,IAERwZ,EAAK,iBAAkB,CACnB1U,MAAO7E,EACPzB,GAAIyB,MAOZ,IAAM8Z,EAAQpc,2BAAiBQ,GAC/Bqb,EAAK,iBAAkB,CAAE1U,MAAOiV,EAAOvb,GAAIub,KAG1C5b,EAAEW,UAAY,IAAI2I,QAAQ,SAAArJ,GAAOob,EAAK,WAAY1a,OAAcV,OAGhED,EAAES,cAAgB,IAAI6I,QAAQ,SAAArJ,GAAOob,EAAK,eAAgB5a,OAAkBR,QAU7D,CAChB4Y,UAAW2C,EACXjb,cAAUuM,EACVrI,YAAanF,qCChIrBoD,EAAA1C,EAAA2C,GAAAD,EAAAE,EAAAD,EAAA,8BAAAlD,IAAA,IAAMoc,EAAcjd,EAAQ,KAE5B,SAASa,EAAUqc,GACf,IAAM/X,EAAM+X,EAASH,aAAavb,QAAQyb,EAAYhZ,cAAgB,EACtEmB,EAAQ8X,EAASH,aAAavb,QAAQyb,EAAY/Y,gBAAkB,EAGpE,OAFOiB,GAAOC,EAEI,OACTA,EAAe,QACfD,EAAa,MACf,+BCPX,IAAMgY,EAA2Bnd,EAAQ,IAEnCyL,EAAOzL,EAAQ,KAChB0D,IAAI,SAAAD,GAKD,MAJY,CACRsE,MAAOtE,EAAEyO,MACTzQ,GAAIgC,EAAE2Z,OAKlBnd,EAAOC,QAAUid,EAAyB1R,EAAM,oCCdhD,IAAM0R,EAA2Bnd,EAAQ,IAEnCyL,EAAOzL,EAAQ,KAChB0D,IAAI,SAAArC,GAED,GAAIA,EAAEgc,cAAc/b,OAAS,EAAI,MAAM,IAAI+F,MAAM,mCACjD,MAAO,CACH5F,GAAIJ,EAAE+b,IACNrV,MAAO1G,EAAEgc,cAAc,MAKnCpd,EAAOC,QAAUid,EAAyB1R,EAAM,oCCbhD,IAAM0R,EAA2Bnd,EAAQ,IAEnCyL,EAAOzL,EAAQ,KAChB0D,IAAI,SAAArC,GAED,GAAIA,EAAEgc,cAAc/b,OAAS,EAAI,MAAM,IAAI+F,MAAM,+BACjD,MAAO,CACH5F,GAAIJ,EAAE+b,IACNrV,MAAO1G,EAAEgc,cAAc,MAMnCpd,EAAOC,QAAUid,EAAyB1R,EAAM","file":"static/js/main.2af1a0f2.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst __all = require(\"./json/index.4.min.json\");\nconst all = () => __all;\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        if (options.dateRanges\n            && options.dateRanges.recording) {\n            const recordingYear = getRecordingYear(r);\n            if (recordingYear < options.dateRanges.recording[0]\n                || recordingYear > options.dateRanges.recording[1]\n                || !recordingYear) { return false }\n\n        } else { \n            // console.log(\"Skipping recording year filter\")\n    }\n\n        // TODO - filter by year of birth\n        if (options.dateRanges && options.dateRanges.birth) {\n            const birthYears = r.birth_years || [];\n            if (!birthYears.reduce((curr, next) => {\n                if (!curr) { return false }\n                if (!options) { return true };\n                if (!options.dateRanges) { return true };\n                if (!options.dateRanges.birth) { return true }\n                if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n                return true;\n            }, true)) { return false }\n\n        } else { \n            // console.log(\"Skipping birth year filter\")\n        }\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (place.city){\n                    // if there's a city, limit by that as well\n                    if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n                }\n\n            }\n        }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length === 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\n// let query = options => all().filter(filters.getResources(options))\n\nfunction query(options){\n    if (!options){ return all()}\n    return all().filter(filters.getResources(options));\n}\n\nmodule.exports = { all, query }","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes\n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw new Error(`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 10\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.scrollHeight //getBoundingClientRect().height,\n              //startPct = scrollTop / totalHeight,\n            //   endPct = scrollBottom / totalHeight\n            ;\n\n        // console.log(\"height\",totalHeight, this.poolRef.current.getBoundingClientRect().height)\n\n        // if ((endPct * 100) > 99){\n        if ((totalHeight - scrollBottom) <= 80){\n            console.log(\"height\", scrollBottom, totalHeight)\n\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .slice(0,this.state.itemCount)\n                    // .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        // skip the filter loop\n                        if (!(item.label && item.label.length > 0)){ return (null)}\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n        this.setMargin = this.setMargin.bind(this);\n\n        this.state = {\n            currentWidth: -1,\n            margin: props.margin || {\n                top:0,\n                left:0,\n                right:0,\n                bottom:0\n            }\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n\n    }\n\n    setMargin(newMargin){\n        const margin = {...this.state.margin, ...newMargin};\n        this.setState({ margin });\n\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        // const margin = this.props.margin || {\n        //     bottom: 30,\n        //     top: 20,\n        //     left: 20,\n        //     right: 20\n        // }\n        const margin = this.state.margin;\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const tickSteps = width > 600 ? 10 : 40;\n        const tickValues = d3.range(this.props.minYear, this.props.maxYear, tickSteps);\n\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(tickValues)\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n        \n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            // .tickSize(width - margin.left - margin.right)\n            .ticks(height / 20)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        const ty = d3.transition().duration(1000).ease(d3.easeQuadIn);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition(ty)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(null)\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(1000))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n\n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        ).descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter => enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                // .on(\"click\", d => {\n                //     if (d.data.id in this.props.itemDict) {\n                //         return this.props.clickCallback(d)\n                //     }\n                // })\n                ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            // .on(\"click\", d => {\n            //     if (d.data.id in this.props.itemDict) {\n            //         return this.props.clickCallback(d.data)\n            //     }\n            // })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", item => this.props.mouseInCallback (item.data))\n            .on(\"mouseout\", item => this.props.mouseOutCallback (item.data))\n            .on(\"click\", item => this.props.clickCallback(item.data));\n\n\n        d3.select(window).on(\"resize.treemap\", this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","import \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\n// import { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = Math.min(width,\n                this.props.height || svg.node().getBoundingClientRect().height\n            );\n\n        \n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        // let allItems = this.props.items;\n\n        //--------------HACK--------------\n        // TODO - Fix this q-a-d hack to prevent redrawing if the data have not changed\n        //        Get rid of this whole block....\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        if (allItemsMatch(\n\n            // this works, but do I really have to loop this each time?\n            // objectToArray((prevProps || {}).itemDict || {}),\n            // objectToArray(this.props.itemDict)\n\n            // this seems to be working just as well without the two loops\n            (prevProps||{items:[]}).items,\n            this.props.items\n            )){\n                // console.log(\"redraw prevented\")\n\n            // objectToArray(this.props.itemDict))) {\n            return\n        }\n        // ... down to here.\n        //----------END OF HACK-----------\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => Number(d.count ? d.count : 0));\n\n        const data = root.descendants()\n            .filter(d => d.data.label.indexOf(\"root\") < 0)\n\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1100);\n        this.allowInteraction = data.length;\n\n        // let nodes = \n\n        function realChange(newRadius, oldRadius) {\n            return (newRadius > 0) && (oldRadius > 0);\n        };\n\n        const r = d => d.r || 0;\n        const x = d => d.x || 0;\n        const y = d => d.y || 0;\n\n        svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length === 1\n                            && this.props.selections[0].id === d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', x)\n                    .attr('cy', y)\n                    .attr('r', r),\n                update => update\n                    .attr(\"data-city\", d => d.data.label)\n                    .call(update => {\n                        update\n                            .transition(function (d) {\n                                // only transition if \n                                if (r(d) <= 0) { return null }\n                                return realChange(r(d), d3.select(this).attr(\"r\") || 0) ? t : null\n                            })\n                            .attr('cx', x)\n                            .attr('cy', y)\n                            .attr('r', r);\n                    }),\n                exit => exit.remove()\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n        d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n}","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\"></div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        this.poolRef = React.createRef();\n\n        this.state = {\n            itemCount:100,\n            increment: 50\n        }\n    }\n\n    trackScrolling(){\n\n        // this adds lazy loading in 100-item increments\n        if (this.state.itemCount >= this.props.items){ return }\n\n        const scrollTop = this.poolRef.current.scrollTop,\n              scrollBottom = scrollTop + this.poolRef.current.getBoundingClientRect().height,\n              totalHeight = this.poolRef.current.getBoundingClientRect().height,\n            //   startPct = scrollTop / totalHeight,\n              endPct = scrollBottom / totalHeight;\n\n        if (endPct * 100 > 80){\n            const itemCount = this.state.itemCount + this.state.increment;\n            this.setState({itemCount});\n        }\n\n    }\n\n    componentDidMount() {\n        this.poolRef.current.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        this.poolRef.current.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n\n    render(){\n        return (\n            <div \n            ref={this.poolRef}\n            className=\"TagPool\">\n                {(this.props.items.slice(0, this.state.itemCount) || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections) {\n        this.props.updateSelections(newSelections);\n        this.setState({ searchTerm: \"\" })\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t,\n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        // return (null);\n\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n            .filter(i => i.id in this.props.allItems)\n\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                    <div className=\"type-area\">\n                        <div className=\"title-area\">{this.props.title}</div>\n                        <TextInput\n                            callback={this.updateSearchTerm}\n                            placeholder={this.props.placeholder}\n                            value={this.state.searchTerm}\n                        ></TextInput>\n\n                    </div>\n                    <SelectionPool\n                        callback={this.dropSelection}\n                        items={this.props.selections}\n                    ></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     handles: [],\n        //     range: [{ value: props.min }, { value: props.max }],\n        //     labels: [{ value: props.min }, { value: props.max }]\n        // }\n        this.setState({\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        })\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            // .range([this.margin.left, this.width - this.margin.right]);\n            .range([this.state.margin.left, this.width - this.state.margin.right]);\n\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function (d) {\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try {\n            this.svg.current.innerHTML = \"\";\n        } catch (e) { }\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6;\n\n        let yCenter = this.state.margin.top + (height - this.state.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        // this.yCenter = yCenter;\n        this.setState({ yCenter })\n        this.handleHeight = handleHeight;\n\n        // for really narrow windows, put the label\n        // top and center\n        let labelX, labelY, trackX, trackWidth;\n        // if (width < 300) {\n        labelX = el => width / 2 - d3.select(el).node().getBBox().width / 2;\n        // labelY = _ => 0;//yCenter + d3.select(el).node().getBBox().height * 0.25;\n        // labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        labelY = el => {\n            this.setMargin({ top: d3.select(el).node().getBBox().height })\n            // this.margin.top = d3.select(el).node().getBBox().height;\n            // yCenter += 4;\n            // this.setState({yCenter});\n            return d3.select(el).node().getBBox().height;\n        }\n        trackX = _ => this.state.margin.left;\n        trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n        // } else {\n        //     this.setMargin({ left: 140 });\n        //     // this.margin.left = 140;\n        //     labelX = el => 145 + 10 - d3.select(el).node().getBBox().width - 2 * handleWidth\n        //     labelY = el => yCenter + d3.select(el).node().getBBox().height * 0.25;\n        //     trackX = _ => this.state.margin.left;\n        //     trackWidth = _ => width - this.state.margin.left - this.state.margin.right;\n\n\n        // }\n\n        svg.attr(\"height\", height + \"px\");\n\n        // // add label and position it\n        // svg.append(\"text\")\n        //     .classed(\"track-label\", true)\n        //     .text(this.props.label || \"Double Slider\")\n        //     .attr(\"x\", function () { return labelX(this) })\n        //     .attr(\"y\", function () { return labelY(this) });\n        // // .attr(\"x\", function () { return (lpad + 10) - d3.select(this).node().getBBox().width - 2 * handleWidth })\n        // // .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", function () { return trackX(this) })\n            .attr(\"width\", function () { return trackWidth(this) })\n\n            // .attr(\"x\", this.state.margin.left)\n            // .attr(\"width\", width - this.state.margin.left - this.state.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.state.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                <div className=\"track-label\">{this.props.label}</div>\n                <div className=\"track-wrapper\">\n                    {D3Component.prototype.render.call(this)}\n                </div>\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n    render() {\n        let ret=(null);\n        if (!this.props.selections || this.props.selections.length < 1) {\n\n            ret = (\n                <div className=\"unselected-item\">\n                    <div className=\"x-icon\"></div>\n                    <div>\n                    {this.props.hoverText || \" \"}\n                    </div>\n                </div>                \n            )\n        } else {\n            ret = (\n                <div \n                className=\"selected-item\"\n                onClick={this.props.dropCallback}\n                >\n                    <div className=\"x-icon\"></div>\n                    <div>{this.props.label}</div>\n                </div>\n            )\n        }\n\n        return <div className=\"HoverText\">{ret}</div>\n\n        \n    }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n\n      \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        const props = {\n            ...this.props,\n            lazy: true\n        };\n\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { ItemSelector, HoverText } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.label = this.label.bind(this);\n\n    }\n\n\n    label() {\n        if (!this.props.selections || this.props.selections.length < 1) { return \"\" }\n        return this.props.selections[0].label;\n    }\n\n\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.label)\n    }\n\n    handleClick(item) {\n\n        if (this.props.selections\n            && this.props.selections.length > 0\n            && this.props.selections[0].id === item.id) {\n            this.props.updateSelections([])\n        } else {\n            this.props.updateSelections([item])\n        }\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                {/* <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div> */}\n                <HoverText\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    dropCallback={() => { this.props.updateSelections([]) }}\n                    label={this.label()}\n                ></HoverText>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n\n\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n\n        this.setState({\n            searchTerm, \n        })\n\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = this.props.selectionsDict; //arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        // 6-3-19 - updated to expect an array and a dictionary to prevent\n        // the need to use arrayToObject(dict+arr+interviewers)\n        const [items, itemDict] = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items,//: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict,//: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: this.props.selectionsDict,//arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\nimport { HoverText } from \"../../Inputs\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \",\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n        this.label = this.label.bind(this);\n        this.cleanPlaceName = this.cleanPlaceName.bind(this);\n\n        // this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    cleanPlaceName(item){\n        if (!item){ return \"\"}\n        let city = item.label.split(\"|\")[0].split(\",\")[0], \n        country = item.country;\n\n        \n        if (city && country){ return city + \", \" + country}\n        else if (city){ return city}\n        else if (country){ return country}\n        // return item.label.split(\"|\")[0].split(\",\")[0] + \", \" + item.country\n    }\n    label(){\n        if (!this.props.selections || this.props.selections.length < 1){ return \"\"}\n\n        return this.cleanPlaceName(this.props.selections[0]);\n//        return this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = [];\n\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length === 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n\n                // const element = ret;\n\n                // if (addedCountries.indexOf(country) < 0) { \n                //     addedCountries.push(country);\n                //     const label = `${country}|root`,\n                //         newItem = { label, id: label };\n                //     countryItems.push(newItem)\n                //  }\n\n                return ret\n            });\n\n        // clusterData = clusterData.concat(countryItems);\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n//        return suggestion.label;\n        return this.cleanPlaceName(suggestion);\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {this.cleanPlaceName(suggestion)}\n                {/* {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")} */}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: this.cleanPlaceName(d) })\n\n        // this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \", \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    // renderHoverField() {\n    //     if (!this.props.selections || this.props.selections.length < 1) {\n\n    //         return (\n    //             <span>\n    //                 {this.state.hoverText || \" \"}\n    //             </span>\n    //         )\n    //     }\n    //     return (\n    //         <div \n    //         className=\"selected-item\"\n    //         onClick={this.dropSelection}\n    //         >\n    //             <div className=\"x-icon\"></div>\n    //             <div>{this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country}</div>\n    //         </div>\n    //     )\n    // }\n\n    placeLabel(){\n\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    items={this.cleanClusterData()}\n                    // allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n\n                {/* <div className=\"hover-text\">\n                    {this.renderHoverField()}\n                </div> */}\n                <HoverText\n                    dropCallback={this.dropSelection}\n                    selections={this.props.selections}\n                    hoverText={this.state.hoverText}\n                    label={this.label()}\n                ></HoverText>\n\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n\n        return (\n            <a \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            href={result.link} \n            key={i}>\n                <div \n                className=\"result-item\">\n                    <div className=\"testimony-name\">\n                        {result.title}\n                    </div>\n\n                    <div className=\"birth-year\">\n                        {result.birth_years.map(yr => (<li className=\"sub-item\" key={i}>{yr}</li>))}\n                        {/* </div>\n\n                    <div className=\"birth-place\"> */}\n                        {result.birth_place_cities.map((city, i) => (<li className=\"sub-item\" key={i}>{city}{city && result.birth_place_countries[i] ? \", \" : \"\"}{result.birth_place_countries[i]}</li>))}\n\n                    </div>\n                    <div className=\"affiliate\">\n                        {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                    </div>\n                    <div className=\"recording-year\">\n                        {getRecordingYear(result)}\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        <div className=\"big-button\">View</div>\n                    </div>\n                </div>\n            </a>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// import { TagFilter, RangeSlider } from '../Inputs';\n// import { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\n\nimport \"./style/main.scss\";\n\nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).forEach(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        selectionsDict={arrayToObject(this.state.filters.interviewers)} // TODO - improve efficiency\n                        // allInterviewers={ data.interviewers.search() } // TODO - improve efficiency\n                        filterItems={t => {\n                            // 6-3-19 - just updated to return both an array and a dictionary\n                            // so it doesn't have to be retouched later on. (dict+arr+interviewers)\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            let retDict = {}\n                            let retArr = results\n                            .filter(i => i.id in this.state.summaryData.interviewers)\n                            .map(i => { \n                                const retItem = { ...i, count: this.state.summaryData.interviewers[i.id].count }\n                                retDict[i.id] = retItem;\n                                return retItem;\n                             })\n\n                            return [retArr, retDict];\n                            // return results\n                            //     .filter(i => i.id in this.state.summaryData.interviewers)\n                            //     .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    // let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}