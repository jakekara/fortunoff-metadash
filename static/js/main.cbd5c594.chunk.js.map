{"version":3,"sources":["Inputs/DoubleSlider/style/graphics/slider.svg","Common/index.js","Data/resources.js","Data/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Viz/D3Component/index.js","Inputs/DoubleSlider/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/CountListWithBars.js","MetaDash/Common/arrayToObject.js","Viz/Cluster/index.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Languages/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Data/static.js","Data/createReferenceInterface.js","Data/getRecordingYear.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["module","exports","__webpack_require__","p","unidecode","require","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","MEN_SUBJECT","WOMEN_SUBJECT","all","filters","itemField","itemFilters","r","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsAllPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","getData","languages","birthYears","men","label","count","women","both","recordingYears","birthPlaces","incr","retKey","Object","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","resources","cityCount","countryCount","push","concat","map","forEach","subject_refs","s","ryear","undefined","summaryData","react_default","a","createElement","React","Component","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callback","updateValue","bind","assertThisInitialized","e","target","value","className","onChange","placeholder","type","GenericInput","handleClick","onClick","items","SelectionPooltem_default","key","data-value","TagPoolItem_default","state","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","updateSelections","newSelections","setState","t","selectionItem","toConsumableArray","selections","dropID","String","_this2","filterItems","allItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","svg","createRef","initializeChart","updateChart","redrawChart","margin","top","left","right","bottom","data","ref","elem","_this3","clearTimeout","timeout","setTimeout","PureComponent","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","d3","domain","width","val","handleWidth","x","invert","Math","round","select","selectAll","each","d","sort","b","xValues","Number","attr","console","log","html","bbox","node","getBoundingClientRect","height","handleHeight","trackHeight","yCenter","append","text","getBBox","classed","handleGroups","enter","on","raise","transition","duration","yr","window","D3Component","prototype","render","xAxisG","yAxisG","barG","yearRange","minYear","maxYear","countRange","xScale","apply","padding","rangeRound","xAxis","tickFormat","numeral","format","tickValues","yScale","yAxis","tickSizeOuter","floor","ease","join","barClass","bandwidth","update","exit","h","children","isHighlighted","size","treemap","sum","descendants","itemData","leaves","x0","y0","x1","y1","remove","itemDict","clickCallback","mouseInCallback","mouseOutCallback","objectToArray","obj","keys","arrayToObject","arr","prevProps","prevState","arr1","arr2","allItemsMatch","root","parentId","packLayout","allowInteraction","onMouseOver","onMouseOut","y","genderString","yearRangeString","birthYearRange","recordingYearRange","languageCount","programCount","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","newState","objectSpread","vals","total","style","toggleState","showBars","subtotal","nextItem","showAll","itemCount","barWidth","handleItemClick","renderBar","listProps","MetaDash_CountListWithBars_default","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","selectionsWithoutCurrentItem","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","renderHoverField","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","limit","increment","renderResult","trackScrolling","resultsRef","result","scrollBottom","pageYOffset","innerHeight","distanceFromBottom","document","body","offsetHeight","results","addEventListener","removeEventListener","slice","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","setFilters","clearFilters","updateFilterFactory","_data$getData","_React$createElement","genderSubjects","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","yrs","BirthPlaces_default","Interviewers_default","defineProperty","search","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_exports__","indexField","__byID","byID","itemContainsAllTerms","terms","record","recording_dates","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.cbd5c594.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/slider.8a77e598.svg\";","var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const {getRecordingYear }= require(\"./getRecordingYear\");\nconst {normalizeString} = require(\"../Common\");\nconst { MEN_SUBJECT, WOMEN_SUBJECT } = require(\"./static\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.2.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    function validRecordingYear(r){\n        const yr = getRecordingYear(r);\n        if (!options.filters){ return true}\n        if (!options.filters.dateRanges){ return true}\n        if (!options.filters.dateRanges.recording){ return true}\n        if (yr < options.filters.dateRanges[0]){ return false}\n        if (yr > options.filters.dateRanges[1]){ return false}\n        return true;\n\n    }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3){\n            if (options.gender.indexOf(getGender(r)) < 0){ return }\n        }\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges \n           && options.dateRanges.recording \n           && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)){ return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next)=>{ \n            if (!curr){ return false}\n            if (!options){ return true};\n            if (!options.dateRanges){ return true};\n            if (!options.dateRanges.birth){ return true}\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]){ return false}\n            return true;\n        }, true)) { return false}\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities||[]).length !== (r.birth_place_countries||[]).length){ return false}\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length == 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { MEN_SUBJECT, WOMEN_SUBJECT } from \"./static\";\nimport {getRecordingYear} from \"./getRecordingYear\";\nimport {getGender} from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men:{label:\"Men\",count:0},\n            women:{label:\"Women\",count:0},\n            both:{label:\"Both\",count:0}},\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = {id:getGender(r).toLowerCase()};\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => incr(\"birthPlaces\", {\n            label: place,\n            id: place,\n            city: place.split(\"|\")[0],\n            country: place.split(\"|\")[1],\n        }));\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n            // count occurrences of each affiliate program\n            (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n    \n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs\n};","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections){\n        this.props.updateSelections(newSelections);\n        this.setState({searchTerm:\"\"})\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t, \n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n        .filter(i=>i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                <div className=\"title-area\">{this.props.title}</div>\n                <TextInput\n                    callback={this.updateSearchTerm}\n                    placeholder={this.props.placeholder}\n                    value={this.state.searchTerm}></TextInput>\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n        // throttle redrawing\n        clearTimeout(this.timeout)\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nimport sliderHandleIcon from \"./style/graphics/slider.svg\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        this.setState({ labels: this.getHandleRange() });\n    }\n\n    updateRange() {\n\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n            console.log(\"Double slider Updating track highlight\", xValues)\n\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    initializeChart() {\n\n        const svg = d3.select(this.svg).html(\"\"),\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        this.yCenter = yCenter;\n        this.handleHeight = handleHeight;\n\n        svg.attr(\"height\", height + \"px\");\n\n        const label = svg.append(\"text\")\n            .text(this.props.label || \"Double Slider\")\n            .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n        label.attr(\"y\", function () {\n            return yCenter\n                + d3.select(this).node().getBBox().height * 0.25\n        })\n\n        this.margin.left = 120;\n        // this.margin.left = label.node().getBBox().width\n        //     + label.node().getBBox().x\n        //     + handleWidth;\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n\n        // add selected tract\n        const trackHighlight = svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n                .transition().duration(250)//.ease(d3.easeQuadIn)\n            // .attr(\"transform\",\"skewX(10)\")\n            // .attr(\"height\",handleHeight * 0.7)\n            // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n            // .attr(\"width\",handleWidth * 0.7);\n\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            // valueToX = this.valueToX,\n            updateLabels = this.updateLabels;\n                    // range = this.state.range;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            d3.select(this).select(\".year-label\").text(yr)\n            updateLabels();\n\n            // \n            // let xValues = [];\n            // svg.selectAll(\".handle\")\n            //     .each(function () {\n            //         xValues.push(Number(d3.select(this).attr(\"x\")));\n            //     });\n\n            // trackHighlight\n            //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n            //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            // .transition().duration(250)//.ease(d3.easeQuadOut)\n            // .attr(\"transform\",\"skewX(0)\")\n            // .attr(\"y\", yCenter - handleHeight / 2)\n            // .attr(\"height\",handleHeight)\n            // .attr(\"width\",handleWidth)\n\n            updateRange();\n\n        }\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true)\n\n        const handleGroups = handleLayer\n            // .append(\"g\")\n            // .classed(\"handle\", true)\n            .selectAll(\"g\")\n            // .data(this.props.selections.map(x=>{return{value:x}}))\n            // .data(this.state.range)\n            .data([{ value: this.props.min }, { value: this.props.max }])\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\"\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n        // .attr(\"xlink:href\", { sliderHandleIcon })\n\n        // handleGroups.append(\"rect\")\n        //     .attr(\"width\", handleWidth)\n        //     .attr(\"height\", handleHeight)\n        // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n        // .attr(\"y\", yCenter - handleHeight / 2)\n\n        // .attr(\"x\", x => this.valueToX(x.value))\n        // .attr(\"y\", yCenter - handleHeight / 2)\n\n        handleGroups.append(\"text\")\n            .classed(\"year-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n        // this.setState({ handles });\n\n\n    }\n\n    updateChart() {\n        // const svg = d3.select(this.svg),\n        //     bbox = svg.node().getBoundingClientRect(),\n        //     width = bbox.width,\n        //     height = bbox.height,\n            // handleHeight = this.props.handleHeight || 17.151,\n            // handleWidth = this.props.handleWidth || 13,\n            // trackHeight = this.props.trackHeight || 6,\n            // yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n\n\n        if (this.props.selections && this.props.selections.length === 2){ \n            console.log(\"Double slider update skipped\", this.props)\n            return \n        }\n\n        console.log(\"Double slider thinks it should reset\", this.props)\n\n//        this.initializeChart();\n        // let data = ([this.props.min, this.props.max]).map(x => { return { value: x } });\n        // const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n\n        // console.log(\"Double slider updating handle positions\", data, handleLayer.node(), this.handleHeight, this.yCenter)\n        // handleLayer\n        //     // .append(\"g\")\n        //     // .classed(\"handle\", true)\n        //     .selectAll(\"g.handle\")\n        //     // .data(this.state.range)\n        //     .data(data)\n        //     .attr(\"x\", x => this.valueToX(x.value))\n        //     .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.yCenter - this.handleHeight / 2})`);\n\n        // this.updateTrackHighlight();\n\n    }\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin || {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n        \n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        var nodes = treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        )\n            .descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        var cell = svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter=>enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                    // .on(\"click\", d => {\n                    //     if (d.data.id in this.props.itemDict) {\n                    //         return this.props.clickCallback(d)\n                    //     }\n                    // })\n                    ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            .on(\"click\", d => {\n                if (d.data.id in this.props.itemDict) {\n                    return this.props.clickCallback(d)\n                }\n            })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", item => {\n                return this.props.clickCallback(item)\n            });\n\n\n        d3.select(window).on(\"resize.treemap\",this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        return (\n            <div className=\"count-list\">\n                {(this.props.allItems || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let barWidth = width(item.count);\n                        let className=\"list-item on\"\n                        if (!(item.id in this.props.itemDict)){\n                            barWidth = 0;\n                            className=\"list-item off\"\n                        } else {\n                        }\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick||(()=>{}))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"off-icon\">x</div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {numeral(item.count).format(\"0,0\")}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\nimport { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        console.log(\"Initializing cluster chart\")\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        let allItems = this.props.items;\n\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        // FIXME - this is a really naive improvement that prevents reanimating when\n        // the length of the properties hasn't changed. There could be cases when\n        // it should redraw but won't. really I should check that each item/count is unchanged\n        // if (Object.keys((prevProps||{}).itemDict||{}).length ===  Object.keys(this.props.itemDict).length){ return }\n        // this should be better\n        if (allItemsMatch(\n            objectToArray((prevProps || {}).itemDict || {}),\n            objectToArray(this.props.itemDict))) {\n            return\n        }\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => d.count);\n\n        const data = root.descendants().filter(d => d.data.label.indexOf(\"root\") < 0);\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1400)//.ease(d3.easeQuad);\n        this.allowInteraction = data.length;\n\n        let nodes = svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length == 1\n                            && this.props.selections[0].id == d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', function (d) { return d.x; })\n                    .attr('cy', function (d) { return d.y; })\n                    .attr('r', function (d) { return d.r; }),\n                update => update\n                    .call(update =>\n                        update.transition(t)\n                            .attr(\"data-city\", d => d.data.label)\n                            .attr('cx', d => d.x)\n                            .attr('cy', d => d.y)\n                            .attr('r', d => d.r)\n                    ),\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n            d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n\n    }\n\n    genderString() {\n        return \"GENDER\"\n    }\n\n    yearRangeString() {\n        return \"YEAR RANGE\"\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes \n                &nbsp; <span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span> \n                &nbsp; by <span className=\"stat\">{this.genderString()}</span> \n                &nbsp; born in <span className=\"stat\">{this.yearRangeString(this.props.birthYearRange)}</span>\n                &nbsp; from <span className=\"stat\">{this.props.cityCount}</span> cities\n                &nbsp; who were interviewed from <span className=\"stat\">{this.yearRangeString(this.props.recordingYearRange)}</span>\n                &nbsp; across <span className=\"stat\">{this.props.languageCount} languages</span>\n                &nbsp; by <span className=\"stat\">{this.props.programCount} affiliate programs</span>.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw (`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Both</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n\n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={1890}\n                            max={1945}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={1969}\n                            max={2020}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { TagFilter, ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n        // if (item.id in this.props.programs) {\n            this.props.updateSelections([item.data])\n        //};\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        console.log(\"Programs.render state\", this.props)\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { arrayToObject, objectToArray } from \"../Common\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput, SelectionPool } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const items = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport SelectionPool from \"../../Inputs/SelectionPool\";\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n        this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = []\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length == 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n                return ret\n            });\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \" \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    renderHoverField() {\n        if (!this.props.selections || this.props.selections.length < 1) {\n            return (\n                <span>\n                    {this.state.hoverText || \" \"}\n                </span>\n            )\n        }\n        return (\n            <div className=\"selected-item\">\n                <div className=\"x-icon\"></div>\n                <div>{this.props.selections[0].label}</div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                {/* <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool> */}\n\n                <div className=\"hover-text\">\n                    {/* {this.state.hoverText} */}\n                    {this.renderHoverField()}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n        return (\n            <div key={i} className=\"result-item\">\n                <div className=\"testimony-name\">\n                    Name of testimony\n                </div>\n                <div className=\"birth-year\">\n                    19XX\n                </div>\n                <div className=\"birth-place\">\n                    City, Country\n                </div>\n                <div className=\"affiliate\">\n                    Affiliate name\n                </div>\n                <div className=\"recording-year\">\n                    19XX\n                </div>\n            </div>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100){\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { TagFilter, RangeSlider } from '../Inputs';\nimport { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\n\nimport \"./style/main.scss\";\nimport { Subject } from 'rxjs';\n\nconst data = require(\"../Data\");\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        console.log(\"Setting filters\", filters)\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={1890}\n                        maxYear={2022}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= 1890 && yrs.label < 1950)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= 1960 && yrs.label < 2030)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        allInterviewers={\n                            data.interviewers.search()\n                        }\n                        filterItems={t => {\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            return results\n                                .filter(i => i.id in this.state.summaryData.interviewers)\n                                .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}