{"version":3,"sources":["Common/index.js","Data/resources.js","Data/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Viz/D3Component/index.js","Inputs/DoubleSlider/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/CountListWithBars.js","MetaDash/Common/arrayToObject.js","Viz/Cluster/index.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Languages/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Data/static.js","Data/createReferenceInterface.js","Data/getRecordingYear.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","MEN_SUBJECT","WOMEN_SUBJECT","all","filters","itemField","itemFilters","r","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsAllPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","getData","languages","birthYears","men","label","count","women","both","recordingYears","birthPlaces","incr","retKey","Object","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","resources","cityCount","countryCount","push","concat","map","forEach","subject_refs","s","ryear","undefined","summaryData","react_default","a","createElement","React","Component","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callback","updateValue","bind","assertThisInitialized","e","target","value","className","onChange","placeholder","type","GenericInput","handleClick","onClick","items","SelectionPooltem_default","key","data-value","TagPoolItem_default","state","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","updateSelections","newSelections","setState","t","selectionItem","toConsumableArray","selections","dropID","String","_this2","filterItems","allItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","svg","createRef","initializeChart","updateChart","redrawChart","currentWidth","margin","top","left","right","bottom","data","ref","elem","_this3","newWidth","window","document","body","getBoundingClientRect","width","clearTimeout","timeout","setTimeout","PureComponent","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","d3","domain","val","handleWidth","x","invert","Math","round","select","selectAll","each","d","sort","b","text","xValues","Number","attr","render","remove","html","current","innerHTML","bbox","node","height","handleHeight","trackHeight","yCenter","append","getBBox","classed","handleGroups","enter","on","raise","yr","arr","oldProps","newData","legitArray","get","prototype","arr1","arr2","arrsMatch","D3Component","xAxisG","yAxisG","barG","yearRange","minYear","maxYear","countRange","xScale","apply","padding","rangeRound","xAxis","tickFormat","numeral","format","tickValues","yScale","yAxis","tickSizeOuter","floor","transition","duration","ease","join","barClass","bandwidth","update","exit","h","children","isHighlighted","size","treemap","sum","descendants","itemData","leaves","x0","y0","x1","y1","itemDict","clickCallback","mouseInCallback","console","log","mouseOutCallback","objectToArray","obj","keys","arrayToObject","prevProps","prevState","allItemsMatch","root","parentId","packLayout","allowInteraction","onMouseOver","onMouseOut","y","genderString","yearRangeString","birthYearRange","recordingYearRange","languageCount","programCount","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","newState","objectSpread","vals","total","style","toggleState","showBars","subtotal","nextItem","showAll","itemCount","barWidth","handleItemClick","renderBar","listProps","MetaDash_CountListWithBars_default","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","selectionsWithoutCurrentItem","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","renderHoverField","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","limit","increment","renderResult","trackScrolling","resultsRef","result","scrollBottom","pageYOffset","innerHeight","distanceFromBottom","offsetHeight","results","addEventListener","removeEventListener","slice","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","setFilters","clearFilters","updateFilterFactory","_data$getData","_React$createElement","genderSubjects","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","yrs","BirthPlaces_default","Interviewers_default","defineProperty","search","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","__webpack_require__","__webpack_exports__","indexField","__byID","byID","itemContainsAllTerms","terms","record","recording_dates","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.da91e403.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const {getRecordingYear }= require(\"./getRecordingYear\");\nconst {normalizeString} = require(\"../Common\");\nconst { MEN_SUBJECT, WOMEN_SUBJECT } = require(\"./static\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.2.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    function validRecordingYear(r){\n        const yr = getRecordingYear(r);\n        if (!options.filters){ return true}\n        if (!options.filters.dateRanges){ return true}\n        if (!options.filters.dateRanges.recording){ return true}\n        if (yr < options.filters.dateRanges[0]){ return false}\n        if (yr > options.filters.dateRanges[1]){ return false}\n        return true;\n\n    }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3){\n            if (options.gender.indexOf(getGender(r)) < 0){ return }\n        }\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges \n           && options.dateRanges.recording \n           && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)){ return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next)=>{ \n            if (!curr){ return false}\n            if (!options){ return true};\n            if (!options.dateRanges){ return true};\n            if (!options.dateRanges.birth){ return true}\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]){ return false}\n            return true;\n        }, true)) { return false}\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities||[]).length !== (r.birth_place_countries||[]).length){ return false}\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length == 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { MEN_SUBJECT, WOMEN_SUBJECT } from \"./static\";\nimport {getRecordingYear} from \"./getRecordingYear\";\nimport {getGender} from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men:{label:\"Men\",count:0},\n            women:{label:\"Women\",count:0},\n            both:{label:\"Both\",count:0}},\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = {id:getGender(r).toLowerCase()};\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => incr(\"birthPlaces\", {\n            label: place,\n            id: place,\n            city: place.split(\"|\")[0],\n            country: place.split(\"|\")[1],\n        }));\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n            // count occurrences of each affiliate program\n            (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n    \n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs\n};","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections){\n        this.props.updateSelections(newSelections);\n        this.setState({searchTerm:\"\"})\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t, \n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n        .filter(i=>i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                <div className=\"title-area\">{this.props.title}</div>\n                <TextInput\n                    callback={this.updateSearchTerm}\n                    placeholder={this.props.placeholder}\n                    value={this.state.searchTerm}></TextInput>\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.state = {\n            currentWidth: -1\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function(d){\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try{\n            this.svg.current.innerHTML = \"\";\n        } catch(e){}\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        this.yCenter = yCenter;\n        this.handleHeight = handleHeight;\n        this.margin.left = 110;\n\n\n        svg.attr(\"height\", height + \"px\");\n\n        // add label and position it\n        const label = svg.append(\"text\")\n            .text(this.props.label || \"Double Slider\")\n            .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n            .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length != arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin || {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n        \n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        var nodes = treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        )\n            .descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        var cell = svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter=>enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                    // .on(\"click\", d => {\n                    //     if (d.data.id in this.props.itemDict) {\n                    //         return this.props.clickCallback(d)\n                    //     }\n                    // })\n                    ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            .on(\"click\", d => {\n                if (d.data.id in this.props.itemDict) {\n                    return this.props.clickCallback(d)\n                }\n            })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", item => {\n                return this.props.clickCallback(item)\n            });\n\n\n        d3.select(window).on(\"resize.treemap\",this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`;\n\n        return (\n            <div className=\"count-list\">\n                {(this.props.allItems || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let barWidth = width(item.count);\n                        let className=\"list-item on\"\n                        if (!(item.id in this.props.itemDict)){\n                            barWidth = 0;\n                            className=\"list-item off\"\n                        } else {\n                        }\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick||(()=>{}))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"off-icon\">x</div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {numeral(item.count).format(\"0,0\")}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\nimport { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        console.log(\"Initializing cluster chart\")\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        let allItems = this.props.items;\n\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        // FIXME - this is a really naive improvement that prevents reanimating when\n        // the length of the properties hasn't changed. There could be cases when\n        // it should redraw but won't. really I should check that each item/count is unchanged\n        // if (Object.keys((prevProps||{}).itemDict||{}).length ===  Object.keys(this.props.itemDict).length){ return }\n        // this should be better\n        if (allItemsMatch(\n            objectToArray((prevProps || {}).itemDict || {}),\n            objectToArray(this.props.itemDict))) {\n            return\n        }\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => d.count);\n\n        const data = root.descendants().filter(d => d.data.label.indexOf(\"root\") < 0);\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1400)//.ease(d3.easeQuad);\n        this.allowInteraction = data.length;\n\n        let nodes = svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length == 1\n                            && this.props.selections[0].id == d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', function (d) { return d.x; })\n                    .attr('cy', function (d) { return d.y; })\n                    .attr('r', function (d) { return d.r; }),\n                update => update\n                    .call(update =>\n                        update.transition(t)\n                            .attr(\"data-city\", d => d.data.label)\n                            .attr('cx', d => d.x)\n                            .attr('cy', d => d.y)\n                            .attr('r', d => d.r)\n                    ),\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n            d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n\n    }\n\n    genderString() {\n        return \"GENDER\"\n    }\n\n    yearRangeString() {\n        return \"YEAR RANGE\"\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes \n                &nbsp; <span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span> \n                &nbsp; by <span className=\"stat\">{this.genderString()}</span> \n                &nbsp; born in <span className=\"stat\">{this.yearRangeString(this.props.birthYearRange)}</span>\n                &nbsp; from <span className=\"stat\">{this.props.cityCount}</span> cities\n                &nbsp; who were interviewed from <span className=\"stat\">{this.yearRangeString(this.props.recordingYearRange)}</span>\n                &nbsp; across <span className=\"stat\">{this.props.languageCount} languages</span>\n                &nbsp; by <span className=\"stat\">{this.props.programCount} affiliate programs</span>.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw (`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Both</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n\n      \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        console.log(\"Rendering dates module\")\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={BIRTH_MIN}\n                            max={BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={RECORDING_MIN}\n                            max={RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { TagFilter, ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n        // if (item.id in this.props.programs) {\n            this.props.updateSelections([item.data])\n        //};\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        console.log(\"Programs.render state\", this.props)\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { arrayToObject, objectToArray } from \"../Common\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput, SelectionPool } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const items = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport SelectionPool from \"../../Inputs/SelectionPool\";\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n        this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = []\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length == 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n                return ret\n            });\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \" \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    renderHoverField() {\n        if (!this.props.selections || this.props.selections.length < 1) {\n            return (\n                <span>\n                    {this.state.hoverText || \" \"}\n                </span>\n            )\n        }\n        return (\n            <div className=\"selected-item\">\n                <div className=\"x-icon\"></div>\n                <div>{this.props.selections[0].label}</div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        console.log(\"Rendering birth places module\")\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                {/* <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool> */}\n\n                <div className=\"hover-text\">\n                    {/* {this.state.hoverText} */}\n                    {this.renderHoverField()}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n        return (\n            <div key={i} className=\"result-item\">\n                <div className=\"testimony-name\">\n                    Name of testimony\n                </div>\n                <div className=\"birth-year\">\n                    19XX\n                </div>\n                <div className=\"birth-place\">\n                    City, Country\n                </div>\n                <div className=\"affiliate\">\n                    Affiliate name\n                </div>\n                <div className=\"recording-year\">\n                    19XX\n                </div>\n            </div>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100){\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { TagFilter, RangeSlider } from '../Inputs';\nimport { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\n\nimport \"./style/main.scss\";\nimport { Subject } from 'rxjs';\n\nconst data = require(\"../Data\");\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        console.log(\"Setting filters\", filters)\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={1890}\n                        maxYear={2022}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= 1890 && yrs.label < 1950)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= 1960 && yrs.label < 2030)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        allInterviewers={\n                            data.interviewers.search()\n                        }\n                        filterItems={t => {\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            return results\n                                .filter(i => i.id in this.state.summaryData.interviewers)\n                                .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}