{"version":3,"sources":["Data/static.js","Common/index.js","Data/resources.js","Data/createReferenceInterface.js","Data/getRecordingYear.js","Data/subjects.js","Data/interviewers.js","Data/programs.js","Data/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Viz/D3Component/index.js","Inputs/DoubleSlider/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","MetaDash/OverviewBillboard/index.js","MetaDash/Gender/index.js","MetaDash/Common/CountListWithBars.js","MetaDash/Common/objectToArray.js","MetaDash/Languages/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","all","filters","itemField","itemFilters","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsAllPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","data","indexField","resources","__byID","forEach","byID","itemContainsAllTerms","terms","label","search","s","push","record","recording_dates","a","map","Number","slice","sort","createReferenceInterface","title","uri","display_names","getData","languages","birthYears","both","count","recordingYears","birthCities","birthCountries","birthPlaces","incr","retKey","Object","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","concat","subject_refs","ryear","men","women","undefined","summaryData","react_default","createElement","React","Component","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callback","updateValue","bind","assertThisInitialized","e","target","value","className","onChange","placeholder","type","GenericInput","handleClick","onClick","items","SelectionPooltem_default","key","data-value","TagPoolItem_default","state","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","updateSelections","newSelections","setState","t","selectionItem","toConsumableArray","selections","dropID","String","_this2","filterItems","allItems","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","clearButtonText","buttonClass","optionProps","assign","svg","createRef","initializeChart","updateChart","redrawChart","margin","top","left","right","bottom","ref","elem","_this3","clearTimeout","timeout","setTimeout","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","d3","domain","width","val","x","invert","Math","round","select","selectAll","each","b","bbox","node","getBoundingClientRect","height","handleHeight","handleWidth","trackHeight","yCenter","attr","append","classed","enter","on","raise","transition","duration","D3Component","prototype","render","html","xAxisG","yAxisG","barG","yearRange","minYear","maxYear","countRange","xScale","apply","rangeRound","xAxis","tickFormat","numeral","format","tickValues","yScale","yAxis","tickSizeOuter","floor","ease","join","barClass","bandwidth","update","exit","window","h","children","size","padding","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","mouseInCallback","console","log","mouseOutCallback","clickCallback","itemDict","root","parentId","packLayout","y","onMouseOver","onMouseOut","style","testimonyCount","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","newState","objectSpread","vals","total","showBars","subtotal","nextItem","handleItemClick","renderBar","objectToArray","obj","keys","listProps","CountListWithBars_default","updateRangeFactory","newDict","itemProps","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","addedCountries","clusterData","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","birthYear","birthCountry","yearRecorded","updateFilterFactory","_data$getData","genderSubjects","OverviewBillboard_default","Gender_default","Languages_default","BirthAndRecordingYears_default","yrs","SubjectHeadings_default","BirthPlaces_default","Interviewers_default","Programs_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce2a5fc7.chunk.js","sourcesContent":["const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const {getRecordingYear }= require(\"./getRecordingYear\");\nconst {normalizeString} = require(\"../Common\");\nconst { MEN_SUBJECT, WOMEN_SUBJECT } = require(\"./static\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.2.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    function validRecordingYear(r){\n        const yr = getRecordingYear(r);\n        if (!options.filters){ return true}\n        if (!options.filters.dateRanges){ return true}\n        if (!options.filters.dateRanges.recording){ return true}\n        if (yr < options.filters.dateRanges[0]){ return false}\n        if (yr > options.filters.dateRanges[1]){ return false}\n        return true;\n\n    }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length == 1 && options.gender[0] === \"Men\") {\n            if (!filters.resourceContainsAllSubjects([{ id: MEN_SUBJECT }])(r)) { return false }\n        }\n        if ((options.gender || []).length == 1 && options.gender[0] === \"Women\") {\n\n            if (!filters.resourceContainsAllSubjects([{ id: WOMEN_SUBJECT }])(r)) { return false }\n        }\n\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges \n           && options.dateRanges.recording \n           && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)){ return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next)=>{ \n            if (!curr){ return false}\n            if (!options){ return true};\n            if (!options.dateRanges){ return true};\n            if (!options.dateRanges.birth){ return true}\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]){ return false}\n            return true;\n        }, true)) { return false}\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities||[]).length !== (r.birth_place_countries||[]).length){ return false}\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length == 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { MEN_SUBJECT, WOMEN_SUBJECT } from \"./static\";\nimport {getRecordingYear} from \"./getRecordingYear\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {both:{label:\"Both\",count:0}},\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {},\n        \"birthPlaces\": {},\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => incr(\"birthPlaces\", {\n            label: place,\n            id: place,\n            city: place.split(\"|\")[0],\n            country: place.split(\"|\")[1],\n        }));\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n            // count occurrences of each affiliate program\n            (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    ret.gender.men.count -= ret.gender.both.count;\n    ret.gender.women.count -= ret.gender.both.count;\n    \n\n    const returnValue = {\n        \"resources\": res,\n        subjects: undefined,\n        \"summaryData\": ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs\n};","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections){\n        this.props.updateSelections(newSelections);\n        this.setState({searchTerm:\"\"})\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t, \n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n        .filter(i=>i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <TextInput\n                    callback={this.updateSearchTerm}\n                    placeholder={this.props.placeholder}\n                    value={this.state.searchTerm}></TextInput>\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}></SelectionPool>\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <div className={buttonClass} onClick={this.clearSelection}>\n                    {clearButtonText}\n                </div>\n                <select \n                onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data) \n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n        // throttle redrawing\n        clearTimeout(this.timeout)\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 100)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val);\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange(){\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"rect\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels(){\n        this.setState({labels:this.getHandleRange()});\n    }\n\n    updateRange() {\n\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        this.setState({ range })\n    }\n\n    initializeChart() {\n\n        const svg = d3.select(this.svg),\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 20,\n            handleWidth = this.props.handleWidth || 20,\n            trackHeight = this.props.trackHeight || 4,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n\n        svg.attr(\"height\", height + \"px\");\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n            .transition().duration(250)//.ease(d3.easeQuadIn)\n            // .attr(\"transform\",\"skewX(10)\")\n            .attr(\"height\",handleHeight * 0.7)\n            .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n            // .attr(\"width\",handleWidth * 0.7);\n\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            d3.select(this).attr(\"data-value\", d.value = xToValue(limitX(d3.event.x)));\n            updateLabels();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            // .transition().duration(250)//.ease(d3.easeQuadOut)\n            // .attr(\"transform\",\"skewX(0)\")\n            .attr(\"y\", yCenter - handleHeight / 2)\n            .attr(\"height\",handleHeight)\n            // .attr(\"width\",handleWidth)\n\n            updateRange();\n\n        }\n\n        this.setState({\n            handles: svg.append(\"g\").classed(\"handle-layer\", true)\n                .selectAll(\"rect\")\n                .data(this.state.range)\n                .enter()\n                .append(\"rect\")\n                .classed(\"handle\", true)\n                .attr(\"x\", x => this.valueToX(x.value))\n                .attr(\"y\", yCenter - handleHeight / 2)\n                .attr(\"width\", handleWidth)\n                .attr(\"height\", handleHeight)\n                .call(d3.drag()\n                    .on(\"start\", dragstarted)\n                    .on(\"drag\", dragged)\n                    .on(\"end\", dragended))\n\n        });\n\n\n\n\n\n    }\n\n    updateChart() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div>\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n    }\n\n    updateChart(data) {\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n            // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin ||  {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n        .tickFormat(e => numeral(e).format(\"0\"))\n        .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n        .tickFormat( e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\",d=>d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d=>d.count)\n                    .attr(\"data-label\", d=>d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => {\n                            return yScale(d.count || 0)\n                        })\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ), \n                update => update\n                    .attr(\"data-update-value\", d=>d.count)\n                    .attr(\"class\",d=>d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                .attr(\"data-exit-value\", d=>d.count)\n                // .attr(\"class\",d=>d.barClass)\n                .attr(\"x\", d => xScale(d.label))\n                .call(exit => exit.transition(t(100))\n                    .attr(\"height\", 0)\n                    .attr(\"y\", () =>  yScale(0))\n                )\n            )\n\n       d3.select(window).on(\"resize\",this.redrawChart)\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\",height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        var nodes = treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        )\n            .descendants();\n\n        function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        var cell = svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .attr(\"x\", d => d.x0)\n                    .attr(\"y\", d => d.y0)\n                    .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                    .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n            )\n\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", this.props.clickCallback || (() => { }));\n\n\n        d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    }\n\n    updateChart() {\n\n        const svg = d3.select(this.svg);\n        svg.selectAll(\"rect\")\n        .classed(\"highlighted\", d=>{\n            return d.data.id in this.props.itemDict})\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n\n        const items = this.props.items\n\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n        \n            //svg.attr(\"height\", height + \"px\");\n\n        d3.select(window).on(\"resize\", this.redrawChart)\n\n        const root = d3.stratify()\n        .id(d=>d.label.split(\"|\")[0])\n        .parentId(d=>d.label.split(\"|\")[1])(items)\n\n        var packLayout = d3.pack()\n        .padding(0.725)\n        .size([width, height]);\n\n        root.sum(d=>d.count);\n\n        packLayout(root);\n\n        let nodes = svg.append(\"g\")\n        .selectAll('circle')\n        .data(root.descendants().filter(d=>d.data.label.indexOf(\"root\")<0))\n        .enter()\n        .append('circle')\n        .attr(\"data-city\", d=>d.data.label)\n        .attr('cx', function(d) { return d.x; })\n        .attr('cy', function(d) { return d.y; })\n        .attr('r', function(d) { return d.r; })\n        .on(\"mouseover\", d=>this.props.onMouseOver(d.data))\n        .on(\"mouseout\", d=>this.props.onMouseOut(d.data))\n\n    }\n\n    updateChart() {\n\n        // highlight the selected subset\n        const svg = d3.select(this.svg);\n        svg.selectAll(\"circle\")\n        .classed(\"highlighted\", d=>{\n            return d.data.label in this.props.itemDict\n        })\n        .transition().duration(1500).ease(d3.easeQuad)\n        .style(\"opacity\",d=>d.data.label in this.props.itemDict ? 1 : 0.25 )\n\n\n        // // resize to show only the appropriate area\n        // // represented by the subset items\n        // .transition(d3.transition().duration(3000))\n        // .attr('r', d =>{\n        //     if (!(d.data.id in this.props.itemDict)) return d.r;\n        \n        //     // resize in place\n        //     const oldCount = d.data.count,\n        //     newCount = this.props.itemDict[d.data.id].count,\n        //     ratio = newCount / oldCount,\n        //     newRadius = d.r * ratio;\n\n        //     return newRadius\n        // })\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n    render(){ \n        return (\n            <div className=\"OverviewBillboard module-box\">\n                <div className=\"big-number-value\">{numeral(this.props.testimonyCount).format(\"0,0\")}</div>\n                <div className=\"big-number-label\">testimonies</div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n\n        let val = this.state[gender],\n            newVal = !val,\n            otherVal = gender === \"Men\" ? this.state.Women : this.state.Men\n\n        // prevent turning off both genders\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big\">{numeral(both/ total).format(\"0%\")}</div>\n\n                    <div className=\"big\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className=\"men gender-bar\"></div>\n                    <div\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className=\"both gender-bar\"></div>\n                    <div\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className=\"women gender-bar\"></div>\n                </div>\n                <div className=\"label-container\">\n                    <div className=\"label-area men\"\n                    // className={\"toggle-area men \" + toggleState(\"Men\")}\n                    //     onClick={() => this.genderToggle(\"Men\")}\n                        >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div>{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div \n                    className=\"label-area both\"\n                    // className={\"toggle-area both \" + toggleState(\"Both\")}\n                        // onClick={() => this.genderToggle(\"Both\")}\n                        >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Both</div>\n                        <div>{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div className=\"label-area women\"\n                        // onClick={() => this.genderToggle(\"Women\")}\n                        // className={\"toggle-area women \" + toggleState(\"Women\")}\n                        >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div>{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     // item: false,\n        // }\n\n        // this.toggleItem = this.toggleItem.bind(this);\n        // this.addItem = this.addItem.bind(this);\n    }\n\n    /**\n     * \n     * addItem - add an item to the selection list.\n     *         - by default, only allow one item to be\n     *           selected at a time\n     *         - if this.allowMultipleSelections\n     * \n     * @param {item object} item \n     */\n    // addItem(item){\n\n    //     // const items = this.props.items.concat([item]);\n    //     this.props.updateSelections(items);\n\n    // }\n\n    // toggleItem(item) {\n\n    //     if (this.props.allowMultipleSelections === true){ this.addItem(item); return;}\n\n    //     if (this.state.items.length) {\n    //         this.setState({ item });\n    //         this.props.updateSelections([item]);\n    //     } else {\n    //         this.setState({ item: false });\n    //         this.props.updateSelections([]);\n    //     }\n    // }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        return (\n            <div className=\"count-list\">\n                {(this.props.items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n                        return (\n                            <div onClick={() => (this.props.handleItemClick||(()=>{}))(item)} key={i}\n                                className=\"list-item\">\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(width(item.count))}\n\n                                <div className=\"list-item-value\">\n                                    {numeral(item.count).format(\"0,0\")}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","import React from 'react';\n\nimport \"./style/main.scss\";\n// import numeral from \"numeral\";\nimport {CountListWithBars} from \"../Common\";\n\nexport default class extends React.Component {\n\n\n    // constructor(props) {\n    //     super(props);\n\n    //     this.state = {\n    //         language: false\n    //     }\n\n    //     this.toggleLanguage = this.toggleLanguage.bind(this);\n    //     this.renderBar = this.renderBar.bind(this);\n    // }\n\n    // toggleLanguage(lang) {\n    //     if (!this.state.language) {\n    //         this.setState({ language: lang });\n    //         this.props.updateSelections([lang]);\n    //     } else {\n    //         this.setState({ language: false });\n    //         this.props.updateSelections([]);\n    //     }\n    // }\n\n    // // conditionally render a bar, if we're showing all languages\n    // renderBar(style) {\n    //     if (this.state.language) { return (null) }\n    //     return (\n    //         <div style={style} className=\"pct-bar\"></div>\n    //     )\n    // }\n\n    render() {\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                if (this.props.selections.length < 1){ this.props.updateSelections([item]);}\n                else { this.props.updateSelections([])}\n            },\n            showBars:true}\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n\n    // render() {\n\n    //     const total = this.props.languages.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n    //     const width = val => `${val * 100 / total}%`\n\n    //     return (\n    //         <div className=\"Languages\">\n    //             <h3>Languages</h3>\n    //             <div className=\"language-list\">\n    //                 {(this.props.languages || [])\n    //                     .sort((a, b) => a.count < b.count ? 1 : -1)\n    //                     .filter(a => a.label && a.label.length > 0)\n    //                     .map((lang, i) => {\n    //                         return (\n    //                             <div onClick={() => this.toggleLanguage(lang.label)} key={i}\n    //                                 className=\"list-item\">\n\n    //                                 <div className=\"list-item-name\">\n    //                                     {lang.label}\n    //                                 </div>\n\n    //                                 {/* <div className=\"pct-bar-container\">\n    //                                     {this.renderBar({ \"width\": width(lang.count) })}\n\n    //                                 </div> */}\n\n\n    //                                 <div className=\"pct-bar-container\">\n    //                                     <div style={{ \"width\": width(lang.count) }} className=\"pct-bar\"></div>\n    //                                 </div>\n\n    //                                 <div className=\"list-item-value\">\n    //                                     {numeral(lang.count).format(\"0,0\")}\n    //                                 </div>\n\n\n    //                             </div>\n    //                         )\n    //                     })}\n    //             </div>\n    //         </div>\n    //     );\n    // }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selections: props.selections\n        }\n\n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        return (\n            <div className=\"BirthYear module-box\">\n                <h3 className=\"title\">Dates</h3>\n                <Histogram\n                    {...itemProps}\n                ></Histogram>\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            min={1890}\n                            max={1945}\n                            margin={{ top: 2, bottom: 2, left: 20, right: 20 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={1969}\n                            max={2020}\n                            margin={{ top: 2, bottom: 2, left: 20, right: 20 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { TagFilter, ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n\n        // if (this.props.selections[0] && item.data.id === this.props.selections[0].id) {\n        //     this.props.updateSelections([])\n        // } else {\n            this.props.updateSelections([item.data])\n        // }\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { CountListWithBars, objectToArray } from \"../Common\";\nimport { TextInput, SelectionPool } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item){\n        this.props.updateSelections(this.props.selections.filter(i=>i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm){\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n        \n    }\n\n    updateSelections(){\n\n        this.updateSearchTerm(this.state.searchTerm);\n        this.props.updateSelections.apply(null, arguments);\n        \n    }\n\n    handleItemClick(item){\n        this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: this.props.filterItems(this.state.searchTerm),\n            handleItemClick: this.handleItemClick\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div>\n                    <TextInput\n                    placeholder=\"Search by name\"\n                    callback={this.updateSearchTerm}\n                    value={this.state.searchTerm}>\n                    ></TextInput>\n                </div>\n                <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div>\n                    <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport SelectionPool from \"../../Inputs/SelectionPool\";\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n    }\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = []\n        let clusterData = objectToArray(this.props.birthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length == 2\n            );\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        this.setState({ cleanClusterData: clusterData });\n\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(e) {\n        this.setState({ hoverText: e.label.split(\"|\")[0].split(\",\")[0] + \" \" + e.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n\n    }\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        const hoverText = \"\";\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool>\n\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    itemDict={this.props.birthPlaces}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { TagFilter, RangeSlider } from '../Inputs';\nimport { BarChart, DonutChart } from \"../Viz\";\n\nimport OverviewBillboard from \"./OverviewBillboard\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport { objectToArray } from \"./Common\";\n\nimport \"./style/main.scss\";\nimport { Subject } from 'rxjs';\n\nconst data = require(\"../Data\");\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // const { resources, _, summaryData } = data.getData();\n\n        this.state = {\n            ...data.getData(),\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: {\n                \"gender\": [\"Men\", \"Women\"],\n                \"birthYear\": [],\n                \"birthCountry\": [],\n                \"language\": [],\n                \"yearRecorded\": [],\n                \"subjects\": [],\n                \"interviewers\": [],\n                \"programs\": [],\n                \"dateRanges\":{}\n            },\n        }\n\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            const { resources, subjects, summaryData } = data.getData(filters);\n\n            this.setState({\n                filters: filters,\n                resources,\n                subjects,\n                summaryData\n            });\n        }\n    }\n\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <OverviewBillboard\n                    testimonyCount={this.state.resources.length}\n                ></OverviewBillboard>\n\n                <Gender\n                    updateSelections={this.updateFilterFactory(\"gender\")}\n                    men={this.state.summaryData.gender.men.count}\n                    women={this.state.summaryData.gender.women.count}\n                    both={this.state.summaryData.gender.both.count}\n                ></Gender>\n\n                <Languages\n                    updateSelections={this.updateFilterFactory(\"language\")}\n                    selections={this.state.filters.language}\n                    items={objectToArray(this.state.summaryData.languages)}\n                ></Languages>\n\n                <BirthAndRecordingYear\n                    // height={200}\n                    minYear={1890}\n                    maxYear={2022}\n                    updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                    selections={this.state.filters.dateRanges}\n                    data={\n                        Object.keys(this.state.summaryData.birthYears)\n                            .map(k => this.state.summaryData.birthYears[k])\n                            .filter(yrs => yrs.label >= 1890 && yrs.label < 1950)\n                            .map(a => { return { ...a, barClass: \"birth\" } })\n                            .concat(\n                                Object.keys(this.state.summaryData.recordingYears)\n                                .map(k => this.state.summaryData.recordingYears[k])\n                                .filter(yrs => yrs.label >= 1960 && yrs.label < 2030)\n                                .map(a => { return { ...a,barClass: \"recording\" } })\n                            )\n                    }\n                ></BirthAndRecordingYear>\n\n                <SubjectHeadings\n                    updateSelections={this.updateFilterFactory(\"subjects\")}\n                    selections={this.state.filters.subjects}\n                    allItems={this.state.summaryData.subjects}\n                    filterItems={data.subjects.search}\n                    placeholder=\"Begin searching subjects...\">\n                </SubjectHeadings>\n\n                <BirthPlaces\n                    updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                    selections={this.state.filters.birthplaces}\n                    birthPlaces={this.state.summaryData.birthPlaces}\n                    placeholder=\"Search for a city...\"\n                ></BirthPlaces>\n\n                <Interviewers\n                    interviewers={this.state.summaryData.interviewers}\n                    updateSelections={this.updateFilterFactory(\"interviewers\")}\n                    selections={this.state.filters.interviewers}\n                    filterItems={t => {\n                        const results = data.interviewers.search((t || \"\").split(\" \"));\n                        return results\n                            .filter(i => i.id in this.state.summaryData.interviewers)\n                            .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                    }}\n                ></Interviewers>\n\n                <Programs\n                    updateSelections={this.updateFilterFactory(\"programs\")}\n                    selections={this.state.filters.programs}\n                    allItems={this.state.summaryData.programs}\n                    programs={this.state.summaryData.programs}\n                    filterItems={data.programs.search}\n                    placeholder=\"Begin searching programs...\">\n                </Programs>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}