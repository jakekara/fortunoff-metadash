{"version":3,"sources":["Common/index.js","Data/resources.js","Data/getRecordingYear.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Viz/D3Component/index.js","Inputs/DoubleSlider/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/CountListWithBars.js","MetaDash/Common/arrayToObject.js","Viz/Cluster/index.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Languages/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js","Data/static.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","all","filters","itemField","itemFilters","r","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsOnlyPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","record","recording_dates","a","map","Number","slice","sort","__webpack_require__","__webpack_exports__","d","react_default","createElement","React","Component","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callback","updateValue","bind","assertThisInitialized","e","target","value","className","onChange","placeholder","type","GenericInput","handleClick","onClick","label","items","SelectionPooltem_default","key","data-value","TagPoolItem_default","state","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","updateSelections","newSelections","setState","t","selectionItem","toConsumableArray","selections","concat","dropID","String","_this2","filterItems","allItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","svg","createRef","initializeChart","updateChart","redrawChart","currentWidth","margin","top","left","right","bottom","data","ref","elem","_this3","newWidth","window","document","body","getBoundingClientRect","width","clearTimeout","timeout","setTimeout","PureComponent","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","d3","domain","val","handleWidth","x","invert","Math","round","select","selectAll","each","push","b","text","xValues","attr","render","remove","html","current","innerHTML","bbox","node","height","handleHeight","trackHeight","yCenter","append","getBBox","classed","handleGroups","enter","on","raise","yr","arr","oldProps","newData","legitArray","get","prototype","arr1","arr2","arrsMatch","D3Component","xAxisG","yAxisG","barG","yearRange","minYear","maxYear","countRange","count","xScale","apply","padding","rangeRound","xAxis","tickFormat","numeral","format","tickValues","yScale","yAxis","tickSizeOuter","floor","undefined","transition","duration","ease","join","barClass","bandwidth","update","exit","h","children","isHighlighted","size","treemap","sum","descendants","itemData","leaves","x0","y0","x1","y1","itemDict","clickCallback","mouseInCallback","console","log","mouseOutCallback","objectToArray","obj","keys","arrayToObject","forEach","prevProps","prevState","allItemsMatch","root","parentId","packLayout","allowInteraction","onMouseOver","onMouseOut","y","genderString","yearRangeString","languagesString","programString","birthplaceString","men","women","both","languageCount","summaryData","languages","affiliateCount","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","newState","objectSpread","vals","total","style","toggleState","showBars","subtotal","nextItem","showAll","itemCount","barWidth","handleItemClick","renderBar","listProps","MetaDash_CountListWithBars_default","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","selectionsWithoutCurrentItem","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","renderHoverField","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","limit","increment","renderResult","trackScrolling","resultsRef","result","href","link","scrollBottom","pageYOffset","innerHeight","distanceFromBottom","offsetHeight","results","addEventListener","removeEventListener","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","_data$getData","resources","_React$createElement","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","birthYears","yrs","recordingYears","BirthPlaces_default","Interviewers_default","defineProperty","search","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","MEN_SUBJECT","WOMEN_SUBJECT","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.5880c060.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.4.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges\n            && options.dateRanges.recording\n            && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)) { return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next) => {\n            if (!curr) { return false }\n            if (!options) { return true };\n            if (!options.dateRanges) { return true };\n            if (!options.dateRanges.birth) { return true }\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n            return true;\n        }, true)) { return false }\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length == 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections){\n        this.props.updateSelections(newSelections);\n        this.setState({searchTerm:\"\"})\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t, \n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n        .filter(i=>i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                <div className=\"title-area\">{this.props.title}</div>\n                <TextInput\n                    callback={this.updateSearchTerm}\n                    placeholder={this.props.placeholder}\n                    value={this.state.searchTerm}></TextInput>\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.state = {\n            currentWidth: -1\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function(d){\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try{\n            this.svg.current.innerHTML = \"\";\n        } catch(e){}\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        this.yCenter = yCenter;\n        this.handleHeight = handleHeight;\n        this.margin.left = 110;\n\n\n        svg.attr(\"height\", height + \"px\");\n\n        // add label and position it\n        const label = svg.append(\"text\")\n            .text(this.props.label || \"Double Slider\")\n            .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n            .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length != arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin || {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n        \n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        var nodes = treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        )\n            .descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        var cell = svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter=>enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                    // .on(\"click\", d => {\n                    //     if (d.data.id in this.props.itemDict) {\n                    //         return this.props.clickCallback(d)\n                    //     }\n                    // })\n                    ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            .on(\"click\", d => {\n                if (d.data.id in this.props.itemDict) {\n                    return this.props.clickCallback(d)\n                }\n            })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", item => {\n                return this.props.clickCallback(item)\n            });\n\n\n        d3.select(window).on(\"resize.treemap\",this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`;\n\n        return (\n            <div className=\"count-list\">\n                {(this.props.allItems || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let barWidth = width(item.count);\n                        let className=\"list-item on\"\n                        if (!(item.id in this.props.itemDict)){\n                            barWidth = 0;\n                            className=\"list-item off\"\n                        } else {\n                        }\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick||(()=>{}))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"off-icon\">x</div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {numeral(item.count).format(\"0,0\")}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\nimport { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        let allItems = this.props.items;\n\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        // FIXME - this is a really naive improvement that prevents reanimating when\n        // the length of the properties hasn't changed. There could be cases when\n        // it should redraw but won't. really I should check that each item/count is unchanged\n        // if (Object.keys((prevProps||{}).itemDict||{}).length ===  Object.keys(this.props.itemDict).length){ return }\n        // this should be better\n        if (allItemsMatch(\n            objectToArray((prevProps || {}).itemDict || {}),\n            objectToArray(this.props.itemDict))) {\n            return\n        }\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => d.count);\n\n        const data = root.descendants().filter(d => d.data.label.indexOf(\"root\") < 0);\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1400)//.ease(d3.easeQuad);\n        this.allowInteraction = data.length;\n\n        let nodes = svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length == 1\n                            && this.props.selections[0].id == d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', function (d) { return d.x; })\n                    .attr('cy', function (d) { return d.y; })\n                    .attr('r', function (d) { return d.r; }),\n                update => update\n                    .call(update =>\n                        update.transition(t)\n                            .attr(\"data-city\", d => d.data.label)\n                            .attr('cx', d => d.x)\n                            .attr('cy', d => d.y)\n                            .attr('r', d => d.r)\n                    ),\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n            d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes\n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw (`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n\n      \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { TagFilter, ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n        // if (item.id in this.props.programs) {\n            this.props.updateSelections([item.data])\n        //};\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        console.log(\"Programs.render state\", this.props)\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { arrayToObject, objectToArray } from \"../Common\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput, SelectionPool } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const items = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport SelectionPool from \"../../Inputs/SelectionPool\";\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n        this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = []\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length == 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n                return ret\n            });\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \" \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    renderHoverField() {\n        if (!this.props.selections || this.props.selections.length < 1) {\n            return (\n                <span>\n                    {this.state.hoverText || \" \"}\n                </span>\n            )\n        }\n        return (\n            <div className=\"selected-item\">\n                <div className=\"x-icon\"></div>\n                <div>{this.props.selections[0].label}</div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                {/* <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool> */}\n\n                <div className=\"hover-text\">\n                    {/* {this.state.hoverText} */}\n                    {this.renderHoverField()}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n        return (\n            <a target=\"_blank\" href={result.link} key={i}>\n                <div className=\"result-item\">\n                    <div className=\"testimony-name\">\n                        {result.title}\n                    </div>\n\n                    <div className=\"birth-year\">\n                        {result.birth_years.map(yr => (<li className=\"sub-item\" key={i}>{yr}</li>))}\n                        {/* </div>\n\n                    <div className=\"birth-place\"> */}\n                        {result.birth_place_cities.map((city, i) => (<li className=\"sub-item\" k={i}>{city}, {result.birth_place_countries[i]}</li>))}\n\n\n                    </div>\n                    <div className=\"affiliate\">\n                        {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                    </div>\n                    <div className=\"recording-year\">\n                        {getRecordingYear(result)}\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        <div className=\"big-button\">View</div>\n                    </div>\n                </div>\n            </a>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { TagFilter, RangeSlider } from '../Inputs';\nimport { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\n\nimport \"./style/main.scss\";\nimport { Subject } from 'rxjs';\n\nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        allInterviewers={\n                            data.interviewers.search()\n                        }\n                        filterItems={t => {\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            return results\n                                .filter(i => i.id in this.state.summaryData.interviewers)\n                                .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { MEN_SUBJECT, WOMEN_SUBJECT } from \"./static\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }"],"sourceRoot":""}