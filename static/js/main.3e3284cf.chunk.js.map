{"version":3,"sources":["Common/index.js","Data/resources.js","Data/getRecordingYear.js","Data/static.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/arrayToObject.js","MetaDash/Languages/index.js","Viz/D3Component/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","Viz/Cluster/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Inputs/DoubleSlider/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Data/createReferenceInterface.js","Data/index.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","all","filters","itemField","itemFilters","r","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsOnlyPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","record","recording_dates","a","map","Number","slice","sort","__webpack_require__","__webpack_exports__","d","MEN_SUBJECT","WOMEN_SUBJECT","_default","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","genderString","bind","assertThisInitialized","yearRangeString","languagesString","programString","birthplaceString","men","women","both","react_default","createElement","className","arr","join","languageCount","keys","summaryData","languages","numeral","format","affiliateCount","items","BIRTH_MIN","BIRTH_MAX","RECORDING_MIN","RECORDING_MAX","React","Component","state","Men","Women","Both","menRef","createRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","Error","concat","newState","objectSpread","setState","selections","push","updateSelections","vals","total","label","ref","d3","transition","duration","ease","style","_this2","toggleState","onClick","elem","width","showBars","subtotal","nextItem","count","showAll","allItems","b","itemCount","barWidth","val","itemDict","handleItemClick","key","renderBar","objectToArray","obj","arrayToObject","forEach","listProps","CountListWithBars_default","svg","initializeChart","updateChart","redrawChart","currentWidth","margin","top","left","right","bottom","data","_this3","newWidth","window","document","body","getBoundingClientRect","clearTimeout","timeout","setTimeout","PureComponent","html","selectAll","remove","xAxisG","append","classed","yAxisG","barG","node","height","yearRange","minYear","maxYear","countRange","x","xScale","domain","apply","padding","rangeRound","xAxis","tickFormat","e","tickValues","attr","yScale","yAxis","tickSizeOuter","Math","floor","undefined","t","enter","barClass","bandwidth","update","exit","on","D3Component","h","children","size","treemap","sum","descendants","isHighlighted","itemData","leaves","x0","y0","x1","y1","clickCallback","mouseInCallback","console","log","mouseOutCallback","prevProps","prevState","arr1","arr2","allItemsMatch","root","parentId","packLayout","allowInteraction","onMouseOver","onMouseOut","y","callback","updateValue","target","value","onChange","placeholder","type","GenericInput","handleClick","SelectionPooltem_default","data-value","TagPoolItem_default","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","newSelections","selectionItem","toConsumableArray","dropID","String","filterItems","title","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","updateTrackHighlight","repositionHandles","handleWidth","invert","round","select","each","text","xValues","render","current","innerHTML","bbox","handleHeight","trackHeight","yCenter","getBBox","handleGroups","raise","yr","oldProps","newData","legitArray","get","prototype","arrsMatch","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","selectionsWithoutCurrentItem","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","renderHoverField","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","birthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","limit","increment","renderResult","trackScrolling","resultsRef","result","rel","href","link","scrollBottom","pageYOffset","innerHeight","distanceFromBottom","offsetHeight","results","addEventListener","removeEventListener","DEFAULT_FILTERS","birthYear","birthCountry","yearRecorded","fullData","getData","setFilters","clearFilters","updateFilterFactory","_data$getData","resources","_React$createElement","genderSubjects","s","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","birthYears","yrs","recordingYears","BirthPlaces_default","Interviewers_default","defineProperty","search","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","indexField","__byID","byID","itemContainsAllTerms","terms","birthCities","birthCountries","incr","retKey","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","subject_refs","ryear","staticStuff","resource","createReferenceInterface","uri","display_names"],"mappings":"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","file":"static/js/main.3e3284cf.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const { getRecordingYear } = require(\"./getRecordingYear\");\nconst { normalizeString } = require(\"../Common\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.4.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.resourceContainsOnlyPrograms = programs => {\n    return r => {\n        if (programs.length < 1) { return true; } // don't filter if it's not set\n        if (r.programs.length > 1 || r.programs.length < 1) { return false }\n        if (r.programs[0] === programs[0].id) { return true }\n        return false;\n    }\n}\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    // function validRecordingYear(r){\n    //     const yr = getRecordingYear(r);\n    //     if (!options.filters){ return true}\n    //     if (!options.filters.dateRanges){ return true}\n    //     if (!options.filters.dateRanges.recording){ return true}\n    //     if (yr < options.filters.dateRanges[0]){ return false}\n    //     if (yr > options.filters.dateRanges[1]){ return false}\n    //     return true;\n\n    // }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3) {\n            if (options.gender.indexOf(getGender(r)) < 0) { return }\n        }\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges\n            && options.dateRanges.recording\n            && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)) { return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next) => {\n            if (!curr) { return false }\n            if (!options) { return true };\n            if (!options.dateRanges) { return true };\n            if (!options.dateRanges.birth) { return true }\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]) { return false }\n            return true;\n        }, true)) { return false }\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities || []).length !== (r.birth_place_countries || []).length) { return false }\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        // if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n        if (!filters.resourceContainsOnlyPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length === 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n        this.languagesString = this.languagesString.bind(this);\n        this.programString = this.programString.bind(this);\n        this.birthplaceString = this.birthplaceString.bind(this);\n\n    }\n\n    genderString() {\n        if (this.props.filters.gender.length < 1) { return \"men and women\" }\n        const men = this.props.filters.gender.indexOf(\"Men\") >= 0,\n            women = this.props.filters.gender.indexOf(\"Women\") >= 0,\n            both = this.props.filters.gender.indexOf(\"Both\") >= 0;\n\n        let term = \"people\"\n        if (men && women) { term = \"women and men\" }\n        else if (men) { term = \"men\" }\n        else if (women) { term = \"women\" }\n        else if (both) { term = \"women and men testifying together\" }\n\n        return (\n            <span>\n                by <span className=\"stat\">{term}</span>\n            </span>\n        )\n\n    }\n\n    yearRangeString(arr) {\n\n        if (!arr) { return (null) }\n\n\n        if (arr[0] === arr[1]) {\n            return (<span>\n                in <span className=\"stat\">{arr[0]}</span>\n            </span>)\n        }\n\n        return (<span>\n            between <span className=\"stat\">{arr.join(\" and \")}</span>\n        </span>)\n    }\n\n    birthplaceString() {\n        // the data is too inaccurate at this point\n\n        return (null);\n\n\n        // const cityCount = Object.keys(this.props.summaryData.birthCities).length;\n        // const countryCount = Object.keys(this.props.summaryData.birthCountries).length;\n\n        // const cityPart = (\n        //     <span>from <span className=\"stat\">{cityCount} cities</span></span>\n        // );\n\n        // const countryPart = (\n        //     <span>from <span className=\"stat\">{cityCount} countries</span></span>\n        // );\n\n        // if (cityCount > 0 && countryCount > 0){\n        //     return <span>{cityPart} and {countryPart}</span>\n        // }\n    }\n\n    languagesString() {\n        const languageCount = Object.keys(this.props.summaryData.languages).length;\n        return (\n            <span>\n                across <span className=\"stat\">{numeral(languageCount).format(\"0,0\")} {languageCount > 1 ? \"languages\" : \"language\"}</span>\n            </span>\n        )\n    }\n\n    programString() {\n        const affiliateCount = Object.keys(this.props.summaryData.programs).length;\n        return (\n            <span>\n                by <span className=\"stat\">{numeral(affiliateCount).format(\"0,0\")} {affiliateCount > 1 ? \"affilate programs\" : \"affiliate program\"}</span>\n            </span>\n        )\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes\n            &nbsp;<span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span>\n                &nbsp;{this.genderString()}\n                &nbsp;born {this.yearRangeString(this.props.filters.dateRanges.birth || [this.props.BIRTH_MIN, this.props.BIRTH_MAX])}\n                &nbsp;{this.birthplaceString()}\n                &nbsp;who were interviewed {this.yearRangeString(this.props.filters.dateRanges.recording || [this.props.RECORDING_MIN, this.props.RECORDING_MAX])}\n                &nbsp;{this.languagesString()}\n                &nbsp;{this.programString()}.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw new Error(`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Multiple</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.state = {\n            currentWidth: -1\n        }\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data);\n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n\n        // prevent redraw if the width hasn't changed\n        const newWidth = window.document.body.getBoundingClientRect().width;\n        if (newWidth === this.state.currentWidth){ return };\n\n        this.setState({currentWidth:newWidth});\n\n        // only redraw at max once per second\n        clearTimeout(this.timeout);\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 1000)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n\n    }\n\n    updateChart(data) {\n\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin || {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n        \n        d3.select(window).on(\"resize.histogram\", this.redrawChart.bind(this))\n\n        // d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","// import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n        svg.selectAll(\"*\").remove();\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        // svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        ).descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter => enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                // .on(\"click\", d => {\n                //     if (d.data.id in this.props.itemDict) {\n                //         return this.props.clickCallback(d)\n                //     }\n                // })\n                ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            .on(\"click\", d => {\n                if (d.data.id in this.props.itemDict) {\n                    return this.props.clickCallback(d)\n                }\n            })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", item => {\n                return this.props.clickCallback(item)\n            });\n\n\n        d3.select(window).on(\"resize.treemap\", this.redrawChart.bind(this))\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","import \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\nimport { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const //width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n        // svg.attr(\"width\", width + \"px\");\n\n        // svg.on(\"resize\", ()=>super.redrawChart.call(this));\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        // let allItems = this.props.items;\n\n        function allItemsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false }\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i].id !== arr2[i].id) { return false }\n                if (arr1[i].count !== arr2[i].count) { return false }\n            }\n            return true;\n        }\n\n        // FIXME - this is a really naive improvement that prevents reanimating when\n        // the length of the properties hasn't changed. There could be cases when\n        // it should redraw but won't. really I should check that each item/count is unchanged\n        // if (Object.keys((prevProps||{}).itemDict||{}).length ===  Object.keys(this.props.itemDict).length){ return }\n        // this should be better\n        if (allItemsMatch(\n            objectToArray((prevProps || {}).itemDict || {}),\n            objectToArray(this.props.itemDict))) {\n            return\n        }\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => d.count);\n\n        const data = root.descendants().filter(d => d.data.label.indexOf(\"root\") < 0);\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1400)//.ease(d3.easeQuad);\n        this.allowInteraction = data.length;\n\n        let nodes = svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections\n                            && this.props.selections.length == 1\n                            && this.props.selections[0].id == d.data.id) {\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', function (d) { return d.x; })\n                    .attr('cy', function (d) { return d.y; })\n                    .attr('r', function (d) { return d.r; }),\n                update => update\n                    .call(update =>\n                        update.transition(t)\n                            .attr(\"data-city\", d => d.data.label)\n                            .attr('cx', d => d.x)\n                            .attr('cy', d => d.y)\n                            .attr('r', d => d.r)\n                    ),\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n            d3.select(window).on(\"resize.cluster\", this.redrawChart.bind(this))\n\n\n    }\n\n}","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections) {\n        this.props.updateSelections(newSelections);\n        this.setState({ searchTerm: \"\" })\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t,\n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n            .filter(i => i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                    <div className=\"type-area\">\n                        <div className=\"title-area\">{this.props.title}</div>\n                        <TextInput\n                            callback={this.updateSearchTerm}\n                            placeholder={this.props.placeholder}\n                            value={this.state.searchTerm}></TextInput>\n\n                    </div>\n                    <SelectionPool\n                        callback={this.dropSelection}\n                        items={this.props.selections}></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n        this.updateTrackHighlight = this.updateTrackHighlight.bind(this);\n\n        this.repositionHandles = this.repositionHandles.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        // this.setState({ labels: this.getHandleRange() });\n        const handles = d3.select(this.svg).select(\".handle-layer\").selectAll(\".handle\");\n\n        handles.each(function(d){\n            d3.select(this).select(\"text\").text(d.value)\n        })\n\n    }\n\n    updateRange() {\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        // this.setState({ range })\n    }\n\n    updateTrackHighlight() {\n\n        let xValues = [];\n\n        d3.select(this.svg).selectAll(\".handle\")\n            .each(function () {\n                // console.log(\"Double slider handle iter\", this)\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n        d3.select(this.svg).select(\".highlight\")\n            .attr(\"x\", d3.min(xValues) + this.handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n    }\n\n    updateChart() { }\n\n    initializeChart() {\n\n        this.render();\n\n        let svg = d3.select(this.svg)\n        svg.selectAll(\"*\").remove();\n        svg.html(\"\")\n\n        try{\n            this.svg.current.innerHTML = \"\";\n        } catch(e){}\n\n        svg = d3.select(this.svg)\n\n        const\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n        this.yCenter = yCenter;\n        this.handleHeight = handleHeight;\n        this.margin.left = 110;\n\n\n        svg.attr(\"height\", height + \"px\");\n\n        // add label and position it\n        svg.append(\"text\")\n            .text(this.props.label || \"Double Slider\")\n            .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n            .attr(\"y\", function () { return yCenter + d3.select(this).node().getBBox().height * 0.25 })\n\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n        // add selected track highlight\n        svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            updateLabels = this.updateLabels;\n\n        const updateTrackHighlight = this.updateTrackHighlight;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            // d3.select(this).select(\".value-label\").text(yr)\n            updateLabels();\n            updateTrackHighlight();\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            updateRange();\n        }\n\n        const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true);\n\n        const handleGroups = handleLayer\n            .selectAll(\"g.handle\")\n            .data(data)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n\n        updateTrackHighlight();\n        const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n        handleGroups.append(\"image\")\n            .classed(\"handle-icon\", true)\n            .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n            .attr(\"x\", 0)\n            .attr(\"y\", 0)\n            .attr(\"width\", handleWidth)\n            .attr(\"height\", handleHeight)\n\n        handleGroups.append(\"text\")\n            .classed(\"value-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n        d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n    }\n\n    // initializeChartOld() {\n\n    //     const svg = d3.select(this.svg).html(\"\"),\n    //         bbox = svg.node().getBoundingClientRect(),\n    //         width = bbox.width,\n    //         height = bbox.height,\n    //         handleHeight = this.props.handleHeight || 17.151,\n    //         handleWidth = this.props.handleWidth || 13,\n    //         trackHeight = this.props.trackHeight || 6,\n    //         yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n    //     this.width = width;\n    //     this.height = height;\n    //     this.handleWidth = handleWidth;\n    //     this.yCenter = yCenter;\n    //     this.handleHeight = handleHeight;\n\n    //     svg.attr(\"height\", height + \"px\");\n\n    //     const label = svg.append(\"text\")\n    //         .text(this.props.label || \"Double Slider\")\n    //         .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n    //     label.attr(\"y\", function () {\n    //         return yCenter\n    //             + d3.select(this).node().getBBox().height * 0.25\n    //     })\n\n    //     this.margin.left = 120;\n    //     // this.margin.left = label.node().getBBox().width\n    //     //     + label.node().getBBox().x\n    //     //     + handleWidth;\n\n    //     svg.append(\"rect\")\n    //         .classed(\"track\", true)\n    //         .attr(\"x\", this.margin.left)\n    //         .attr(\"width\", width - this.margin.left - this.margin.right)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight);\n\n\n    //     // add selected tract\n    //     const trackHighlight = svg.append(\"rect\")\n    //         .classed(\"highlight\", true)\n    //         .attr(\"y\", yCenter - trackHeight / 2)\n    //         .attr(\"height\", trackHeight)\n\n\n    //     function dragstarted(d) {\n    //         d3.select(this).raise().classed(\"active\", true)\n    //             .transition().duration(250)//.ease(d3.easeQuadIn)\n    //         // .attr(\"transform\",\"skewX(10)\")\n    //         // .attr(\"height\",handleHeight * 0.7)\n    //         // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n    //         // .attr(\"width\",handleWidth * 0.7);\n\n    //     }\n\n    //     const limitX = this.limitX,\n    //         xToValue = this.xToValue,\n    //         // valueToX = this.valueToX,\n    //         updateLabels = this.updateLabels;\n    //     // range = this.state.range;\n\n    //     const updateTrackHighlight = this.updateTrackHighlight;\n    //     function dragged(d) {\n    //         d3.select(this).attr(\"x\", limitX(d3.event.x));\n    //         const yr = xToValue(limitX(d3.event.x))\n    //         d3.select(this)\n    //             .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n    //         d3.select(this).attr(\"data-value\", d.value = yr);\n    //         d3.select(this).select(\".value-label\").text(yr)\n    //         updateLabels();\n\n    //         // \n    //         // let xValues = [];\n    //         // svg.selectAll(\".handle\")\n    //         //     .each(function () {\n    //         //         xValues.push(Number(d3.select(this).attr(\"x\")));\n    //         //     });\n\n    //         // trackHighlight\n    //         //     .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n    //         //     .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n    //         updateTrackHighlight();\n    //     }\n\n    //     const updateRange = this.updateRange;\n\n    //     function dragended(d) {\n    //         d3.select(this).classed(\"active\", false)\n    //         updateRange();\n    //     }\n\n    //     const handleLayer = svg.append(\"g\")\n    //         .classed(\"handle-layer\", true);\n\n    //     const data = this.props.selections ? this.props.selections.map(x => { return { value: x } }) : [{ value: this.props.min }, { value: this.props.max }];\n\n    //     const handleGroups = handleLayer\n    //         .selectAll(\"g.handle\")\n    //         .data(data)\n    //         .enter()\n    //         .append(\"g\")\n    //         .classed(\"handle\", true)\n    //         .attr(\"x\", x => this.valueToX(x.value))\n    //         .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n    //         .call(d3.drag()\n    //             .on(\"start\", dragstarted)\n    //             .on(\"drag\", dragged)\n    //             .on(\"end\", dragended))\n\n\n    //     const svgString = \"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\";\n\n    //     handleGroups.append(\"image\")\n    //         .classed(\"handle-icon\", true)\n    //         .attr(\"xlink:href\", `data:image/svg+xml;base64,${svgString}`)\n    //         .attr(\"x\", 0)\n    //         .attr(\"y\", 0)\n    //         .attr(\"width\", handleWidth)\n    //         .attr(\"height\", handleHeight)\n    //     // .attr(\"xlink:href\", { sliderHandleIcon })\n\n    //     // handleGroups.append(\"rect\")\n    //     //     .attr(\"width\", handleWidth)\n    //     //     .attr(\"height\", handleHeight)\n    //     // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     // .attr(\"x\", x => this.valueToX(x.value))\n    //     // .attr(\"y\", yCenter - handleHeight / 2)\n\n    //     handleGroups.append(\"text\")\n    //         .classed(\"value-label\", true)\n    //         .text(d => d.value)\n    //         .attr(\"transform\", function () {\n    //             return `translate(${\n    //                 handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n    //                 },${\n    //                 yCenter\n    //                 + handleHeight / 2\n    //                 + 1})`\n    //         })\n\n    //     d3.select(window).on(\"resize.doubleslider\" + this.props.label, this.redrawChart.bind(this))\n\n\n    //     // this.setState({ handles });\n\n\n    // }\n\n    // updateChartOld() { }\n\n    repositionHandles(arr) {\n        if (!arr) { arr = [this.props.min, this.props.max] }\n        // if (arr.length !== 2) { return }\n\n        const handleLayer = d3.select(this.svg).select(\".handle-layer\")\n        handleLayer.selectAll(\".handle\")\n            .data(arr.map(x => { return { value: x } }))\n            .attr(\"x\", x => this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${this.yCenter - this.handleHeight / 2})`);\n\n    }\n\n    componentDidUpdate(oldProps, newData) {\n        super.componentDidUpdate.call(this);\n\n        function legitArray(arr) {\n            if (!arr) { return [-1, -1] }\n            return arr;\n        }\n\n        const oldArr = legitArray(oldProps.selections),\n            newArr = legitArray(this.props.selections);\n\n        function arrsMatch(arr1, arr2) {\n            if (arr1.length !== arr2.length) { return false };\n            for (let i = 0; i < arr1.length; i++) {\n                if (arr1[i] !== arr2[i]) { return false }\n            }\n            return true;\n        }\n\n        if (!arrsMatch(oldArr, newArr)) {\n            if (!this.props.selections) {\n                // reset detected\n                this.repositionHandles(this.props.selections);\n                this.updateLabels();\n                this.updateTrackHighlight();\n            }\n        }\n\n\n        // this.repositionHandles(this.props.selections);\n        // this.updateLabels();\n        // this.updateTrackHighlight();\n    }\n\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        // this.state = {\n        //     selections: props.selections\n        // }\n\n      \n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            selections={this.props.selections.birth}\n                            min={this.props.BIRTH_MIN}\n                            max={this.props.BIRTH_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            selections={this.props.selections.recording}\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={this.props.RECORDING_MIN}\n                            max={this.props.RECORDING_MAX}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n        // if (item.id in this.props.programs) {\n            this.props.updateSelections([item.data])\n        //};\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        console.log(\"Programs.render state\", this.props)\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { arrayToObject } from \"../Common\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const items = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n        this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = [];\n\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length === 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n\n                const element = ret;\n                \n                // if (addedCountries.indexOf(country) < 0) { \n                //     addedCountries.push(country);\n                //     const label = `${country}|root`,\n                //         newItem = { label, id: label };\n                //     countryItems.push(newItem)\n                //  }\n    \n                return ret\n            });\n\n        // clusterData = clusterData.concat(countryItems);\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \", \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    renderHoverField() {\n        if (!this.props.selections || this.props.selections.length < 1) {\n            return (\n                <span>\n                    {this.state.hoverText || \" \"}\n                </span>\n            )\n        }\n        return (\n            <div className=\"selected-item\">\n                <div className=\"x-icon\"></div>\n                <div>{this.props.selections[0].label.split(\"|\")[0].split(\",\")[0] + \", \" + this.props.selections[0].country}</div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                {/* <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool> */}\n\n                <div className=\"hover-text\">\n                    {/* {this.state.hoverText} */}\n                    {this.renderHoverField()}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { getRecordingYear } from \"../../Data\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n        return (\n            <a \n            target=\"_blank\" \n            rel=\"noopener noreferrer\"\n            href={result.link} key={i}>\n                <div className=\"result-item\">\n                    <div className=\"testimony-name\">\n                        {result.title}\n                    </div>\n\n                    <div className=\"birth-year\">\n                        {result.birth_years.map(yr => (<li className=\"sub-item\" key={i}>{yr}</li>))}\n                        {/* </div>\n\n                    <div className=\"birth-place\"> */}\n                        {result.birth_place_cities.map((city, i) => (<li className=\"sub-item\" k={i}>{city}, {result.birth_place_countries[i]}</li>))}\n\n\n                    </div>\n                    <div className=\"affiliate\">\n                        {result.programs.map((ref, i) => (<li className=\"sub-item\" key={i}>{this.props.programs[ref].label}</li>))}\n                    </div>\n                    <div className=\"recording-year\">\n                        {getRecordingYear(result)}\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        <div className=\"big-button\">View</div>\n                    </div>\n                </div>\n            </a>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100) {\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div className=\"headers\">\n                    <div className=\"testimony-name\">\n                        Testimony title\n                    </div>\n                    <div className=\"birth-year\">\n                        Birth year / place\n                        </div>\n                    <div className=\"affiliate\">\n                        Affiliate\n                    </div>\n                    <div className=\"recording-year\">\n                        Recording year\n                    </div>\n\n                    <div className=\"big-button-container\">\n                        &nbsp;\n                    </div>\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\n// import { TagFilter, RangeSlider } from '../Inputs';\n// import { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray } from \"./Common\";\n\nimport \"./style/main.scss\";\n\nconst data = require(\"../Data\");\nconst BIRTH_MIN = 1890;\nconst BIRTH_MAX = 1945;\nconst RECORDING_MIN = 1970;\nconst RECORDING_MAX = 2020;\n\nconst DEFAULT_FILTERS = {\n    \"gender\": [\"Men\", \"Women\", \"Both\"],\n    \"birthYear\": [],\n    \"birthCountry\": [],\n    \"language\": [],\n    \"yearRecorded\": [],\n    \"subjects\": [],\n    \"interviewers\": [],\n    \"programs\": [],\n    \"dateRanges\": {}\n};\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: DEFAULT_FILTERS,\n        }\n\n\n        this.setFilters = this.setFilters.bind(this);\n        this.clearFilters = this.clearFilters.bind(this);\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    setFilters(filters) {\n        filters = filters || DEFAULT_FILTERS;\n        const { resources, subjects, summaryData } = data.getData(filters);\n\n        this.setState({\n            filters,\n            resources,\n            subjects,\n            summaryData\n        })\n    }\n\n    clearFilters() { this.setFilters() }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            this.setFilters(filters);\n\n            // --- MOVED TO setFilters --\n            // const { resources, subjects, summaryData } = data.getData(filters);\n\n            // this.setState({\n            //     filters: filters,\n            //     resources,\n            //     subjects,\n            //     summaryData\n            // });\n        }\n    }\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                        items={this.state.resources}\n                        filters={this.state.filters}\n                        summaryData={this.state.summaryData}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n                    <div className=\"text-menu\">\n                        <div\n                            className=\"item\"\n                            onClick={this.clearFilters}\n                        >Clear filters</div>\n                        <div className=\"item\">Documentation</div>\n                    </div>\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={BIRTH_MIN}\n                        maxYear={RECORDING_MAX}\n                        BIRTH_MIN={BIRTH_MIN}\n                        BIRTH_MAX={BIRTH_MAX}\n                        RECORDING_MIN={RECORDING_MIN}\n                        RECORDING_MAX={RECORDING_MAX}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= BIRTH_MIN && yrs.label <= BIRTH_MAX)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= RECORDING_MIN && yrs.label <= RECORDING_MAX)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        allInterviewers={\n                            data.interviewers.search()\n                        }\n                        filterItems={t => {\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            return results\n                                .filter(i => i.id in this.state.summaryData.interviewers)\n                                .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        programs={this.state.summaryData.programs}\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import \"babel-polyfill\";\nimport 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { getRecordingYear } from \"./getRecordingYear\";\nimport { getGender } from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men: { label: \"Men\", count: 0 },\n            women: { label: \"Women\", count: 0 },\n            both: { label: \"Both\", count: 0 }\n        },\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n        \"birthCities\": {},\n        \"birthCountries\": {}\n\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = { id: getGender(r).toLowerCase() };\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => {\n            const city = place.split(\"|\")[0],\n                country = place.split(\"|\")[1];\n            incr(\"birthPlaces\", {\n                label: place,\n                id: place,\n                city,\n                country\n            });\n            incr(\"birthCities\", {\n                label: city,\n                id: city,\n            });\n            incr(\"birthCountries\", {\n                label: country,\n                id: country,\n            })\n\n        });\n\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n        // count occurrences of each affiliate program\n        (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n\n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs,\n\n    getRecordingYear\n};","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw new Error(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );"],"sourceRoot":""}