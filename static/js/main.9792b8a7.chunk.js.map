{"version":3,"sources":["Common/index.js","Data/resources.js","Data/static.js","Data/createReferenceInterface.js","Data/getRecordingYear.js","Data/getGender.js","Data/subjects.js","Data/interviewers.js","Data/programs.js","Data/index.js","Inputs/GenericInput/index.js","Inputs/TextInput/index.js","Inputs/SelectionPool/SelectionPooltem/index.js","Inputs/SelectionPool/index.js","Inputs/TagFilter/TagPool/TagPoolItem/index.js","Inputs/TagFilter/TagPool/index.js","Inputs/TagFilter/index.js","Inputs/RangeSlider/index.js","Inputs/ItemSelector/index.js","Viz/D3Component/index.js","Inputs/DoubleSlider/index.js","Viz/Histogram/index.js","Viz/TreeMap/index.js","MetaDash/Common/objectToArray.js","MetaDash/Common/CountListWithBars.js","MetaDash/Common/arrayToObject.js","Viz/Cluster/index.js","MetaDash/IntroProse/index.js","MetaDash/Gender/index.js","MetaDash/CountListWithBars/index.js","MetaDash/Languages/index.js","MetaDash/BirthAndRecordingYears/index.js","MetaDash/SubjectHeadings/index.js","MetaDash/Programs/index.js","MetaDash/Interviewers/index.js","MetaDash/BirthPlaces/index.js","MetaDash/Results/index.js","MetaDash/index.js","App.js","serviceWorker.js","index.js","Inputs/DoubleSlider/style/graphics/slider.svg"],"names":["unidecode","require","module","exports","normalizeString","term","toLowerCase","trim","replaceKeys","dictObj","keyMap","ret","k","getRecordingYear","getGender","MEN_SUBJECT","WOMEN_SUBJECT","all","filters","itemField","itemFilters","r","i","length","item","indexOf","id","subjects","resourceContainsAllItems","interviewers","programs","options","resourceContainsAllSubjects","gender","recordingYear","dateRanges","recording","birth_years","reduce","curr","next","birth","birthplaces","place","j","birth_place_cities","birth_place_countries","city","country","split","resourceContainsAllPrograms","resourceContainsAllInterviewers","language","query","filter","getResources","__webpack_require__","__webpack_exports__","d","data","indexField","resources","__byID","forEach","byID","itemContainsAllTerms","terms","label","search","s","push","record","recording_dates","a","map","Number","slice","sort","staticStuff","resource","men","subject_refs","women","createReferenceInterface","title","uri","display_names","getData","languages","birthYears","count","both","recordingYears","birthPlaces","incr","retKey","Object","_Users_jake_Code_metadash_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","res","cityCount","countryCount","concat","ryear","undefined","summaryData","react_default","createElement","React","Component","_default","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","callback","updateValue","bind","assertThisInitialized","e","target","value","className","onChange","placeholder","type","GenericInput","handleClick","onClick","items","SelectionPooltem_default","key","data-value","TagPoolItem_default","state","searchTerm","updateSearchTerm","addSelection","dropSelectionByID","dropSelection","updateSelections","newSelections","setState","t","selectionItem","toConsumableArray","selections","dropID","String","_this2","filterItems","allItems","TextInput_default","SelectionPool_default","TagPool_default","handleSelection","clearSelection","selected","subClass","buttonClass","defaultValue","ID","optionProps","assign","svg","createRef","initializeChart","updateChart","redrawChart","margin","top","left","right","bottom","ref","elem","_this3","clearTimeout","timeout","setTimeout","PureComponent","handles","range","min","max","labels","scale","valueToX","xToValue","limitValue","limitX","getHandleRange","updateLabels","updateRange","d3","domain","width","val","handleWidth","x","invert","Math","round","select","selectAll","each","b","bbox","node","getBoundingClientRect","height","handleHeight","trackHeight","yCenter","attr","append","text","getBBox","classed","trackHighlight","handleGroups","enter","on","raise","transition","duration","yr","xValues","console","log","sliderHandleIcon","D3Component","prototype","render","html","xAxisG","yAxisG","barG","yearRange","minYear","maxYear","countRange","xScale","apply","padding","rangeRound","xAxis","tickFormat","numeral","format","tickValues","yScale","yAxis","tickSizeOuter","floor","ease","join","barClass","bandwidth","update","exit","window","h","children","isHighlighted","size","treemap","sum","descendants","itemData","leaves","x0","y0","x1","y1","remove","itemDict","clickCallback","mouseInCallback","mouseOutCallback","objectToArray","obj","keys","arrayToObject","arr","prevProps","prevState","arr1","arr2","allItemsMatch","root","parentId","packLayout","allowInteraction","onMouseOver","onMouseOut","y","genderString","yearRangeString","birthYearRange","recordingYearRange","languageCount","programCount","Men","Women","Both","menRef","bothRef","womenRef","genderToggle","animate","newVal","otherVal","newState","objectSpread","vals","total","style","toggleState","showBars","subtotal","nextItem","showAll","itemCount","barWidth","handleItemClick","renderBar","listProps","MetaDash_CountListWithBars_default","updateRangeFactory","newDict","itemProps","modeClass","subsetMode","Histogram_default","DoubleSlider_default","TagFilter_default","hoverText","setText","handleMouseIn","handleMouseOut","TreeMap_default","ItemSelector_default","arguments","selectionsWithoutCurrentItem","allInterviewers","getSuggestions","cleanClusterData","onSuggestionsFetchRequested","_ref","suggestions","onSuggestionsClearRequested","getSuggestionValue","renderSuggestion","onSuggestionSelected","renderHoverField","nextProps","nextState","addedCountries","clusterData","allBirthPlaces","element","newItem","suggestion","event","newValue","_ref2","_ref3","inputProps","Cluster_default","dist_default","limit","increment","renderResult","trackScrolling","resultsRef","result","scrollBottom","pageYOffset","innerHeight","distanceFromBottom","document","body","offsetHeight","results","addEventListener","removeEventListener","fullData","birthYear","birthCountry","yearRecorded","updateFilterFactory","_data$getData","_React$createElement","genderSubjects","IntroProse_default","Gender_default","Languages_default","BirthAndRecordingYears_default","yrs","BirthPlaces_default","Interviewers_default","defineProperty","Programs_default","SubjectHeadings_default","Results_default","App","MetaDash_default","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","p"],"mappings":"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","file":"static/js/main.9792b8a7.chunk.js","sourcesContent":["var unidecode = require('unidecode');\n\nfunction normalizeString(term) {\n    return unidecode((term||\"\").toLowerCase().trim());\n}\n\n// replace the keys in a dictionary with something else\nfunction replaceKeys(dictObj, keyMap) {\n    var ret = {}\n    for (var k in dictObj) {\n        ret[keyMap[k]] = dictObj[k];\n    }\n    return ret;\n}\n\nmodule.exports = {\n    normalizeString,\n    replaceKeys,\n}","const {getRecordingYear }= require(\"./getRecordingYear\");\nconst {normalizeString} = require(\"../Common\");\nconst { MEN_SUBJECT, WOMEN_SUBJECT } = require(\"./static\");\nconst { getGender } = require(\"./getGender\");\n/**\n * all - return an array containing all records.\n *       This can be accomplished by calling .query\n *       without any parameters\n *         \n */\nconst all = () => require(\"./json/index.2.min.json\");\n\nlet filters = {};\n\nfilters.resourceContainsAllItems = (itemField, itemFilters) => {\n    return r => {\n        for (let i = 0; i < itemFilters.length; i++) {\n            let item = itemFilters[i];\n            if (r[itemField].indexOf(item.id) < 0) return false;\n        }\n        return true;\n    }\n\n}\n\nfilters.resourceContainsAllSubjects = subjects => { return filters.resourceContainsAllItems(\"subject_refs\", subjects) }\n\nfilters.resourceContainsAllInterviewers = interviewers => { return filters.resourceContainsAllItems(\"interviewers\", interviewers) }\n\nfilters.resourceContainsAllPrograms = programs => { return filters.resourceContainsAllItems(\"programs\", programs) }\n\nfilters.getResources = options => {\n\n    // just skip the iteration if no args are passed\n    if (!options) { return all; }\n\n    function validRecordingYear(r){\n        const yr = getRecordingYear(r);\n        if (!options.filters){ return true}\n        if (!options.filters.dateRanges){ return true}\n        if (!options.filters.dateRanges.recording){ return true}\n        if (yr < options.filters.dateRanges[0]){ return false}\n        if (yr > options.filters.dateRanges[1]){ return false}\n        return true;\n\n    }\n\n    return r => {\n\n        // filter by selected subject\n        if (!filters.resourceContainsAllSubjects(options.subjects || [])(r)) { return false }\n\n        // TODO - filter by gender\n        if ((options.gender || []).length > 0 && (options.gender || []).length < 3){\n            if (options.gender.indexOf(getGender(r)) < 0){ return }\n        }\n\n        // TODO - filter by year of recording\n        const recordingYear = getRecordingYear(r);\n        if (options.dateRanges \n           && options.dateRanges.recording \n           && (recordingYear < options.dateRanges.recording[0] || recordingYear > options.dateRanges.recording[1] || !recordingYear)){ return false }\n\n        // TODO - filter by year of birth\n        const birthYears = r.birth_years || [];\n        if (!birthYears.reduce((curr, next)=>{ \n            if (!curr){ return false}\n            if (!options){ return true};\n            if (!options.dateRanges){ return true};\n            if (!options.dateRanges.birth){ return true}\n            if (next < options.dateRanges.birth[0] || next > options.dateRanges.birth[1]){ return false}\n            return true;\n        }, true)) { return false}\n\n        // TODO - filter by place of birth\n\n        if ((options.birthplaces || []).length > 0) {\n            let place = options.birthplaces[0];\n\n            for (let j = 0; j < (r.birth_place_cities || []).length; j++) {\n\n                if ((r.birth_place_cities||[]).length !== (r.birth_place_countries||[]).length){ return false}\n                let city = r.birth_place_cities[j],\n                    country = r.birth_place_countries[j];\n\n                if (normalizeString(country) !== normalizeString(place.country)) return false;\n                if (normalizeString(city) !== normalizeString(place.city.split(\",\")[0])) return false;\n            }\n        }\n\n        // TODO - filter by affiliate program\n        if (!filters.resourceContainsAllPrograms(options.programs || [])(r)) { return false }\n\n        // TODO - filter by interviewer\n        if (!filters.resourceContainsAllInterviewers(options.interviewers || [])(r)) { return false }\n\n        // TODO - in future, support multiple languages\n        if (options.language\n            && options.language.length == 1\n            && r.language !== options.language[0].id) { return false }\n\n        // if it passes everything, return true\n        return true;\n\n    }\n}\n\n/**\n * \n * query - filter resources based on options object. All options elements\n *         are represented as string arrays. All filters are ANDed together,\n *         so filtering by Men + Women would only (ideally) return testimony\n *         with at least two subjects, a man and a woman.\n * \n * @param {object} options - {\n *                     subjectIDs:Array<String> - ArchivesSpace subject refs to include,\n *                         gender:Array<String> - genders (\"Women\",\"Men\") to include,\n *                  recordingYear:Array<String> - [minYear, maxYear]\n *                      birthYear:Array<String> - [minYear, maxYear]\n *              affiliatePrograms:Array<String> - ArchivesSpace agent refs of programs\n *                   interviewers:Array<String> - ArchivesSpace agent refs of interviewers\n *                      languages:Array<String> - list of languages to include\n * \n * }\n */\nlet query = options => all().filter(filters.getResources(options))\n\nmodule.exports = { all, query }","const MEN_SUBJECT = \"/subjects/35425\",\n    WOMEN_SUBJECT = \"/subjects/25470\";\nexport { MEN_SUBJECT, WOMEN_SUBJECT }","/**\n * Common functionality for interface for items referenced from the index,\n *      chiefly, the \"subjects\" and \"interviewers\"\n */\n\nmodule.exports = function(data, indexField) {\n    let ret = {};\n\n    /**\n     * Data api - designed to replaced in-place with a backend API\n     */\n    const { normalizeString } = require(\"../Common\");\n    const resources = require(\"./resources\");\n\n    let __byID = {}\n\n    const all = () => data;\n\n    all().forEach(r => __byID[r.id] = r);\n\n    const byID = id => __byID[id];\n\n    let filters = {};\n\n    filters.itemContainsAllTerms = function (terms) {\n        terms = terms || [];\n        return function (item) {\n            for (let i = 0; i < terms.length; i++) {\n                let term = terms[i];\n                if (normalizeString(item.label).indexOf(normalizeString(term)) < 0) return false;\n            }\n            return true;\n        }\n    };\n\n    /**\n     * \n     * search - return only subjects that contain all of the strings\n     *          in terms. Comparison is case-insensitive and ignores\n     *          most special characters and diacritics (via unidecode)\n     * \n     * @param {Array<String>} terms \n     */\n    function search (terms) {\n\n        let ret = [];\n        terms = terms || [];\n\n        (resources.query() || []).forEach(r => {\n            r[indexField].forEach(s => {\n                if (!(filters.itemContainsAllTerms(terms)(byID(s)))) { return false }\n                if (ret.indexOf(byID(s)) < 0) ret.push(byID(s))\n            });\n        });\n\n        return ret\n    }\n\n    return {byID, search}\n}","function getRecordingYear(record) {\n    // Returns only the first recording year\n    return (record.recording_dates || [])\n        .filter(a => a)\n        .map(a => Number(a.slice(0, 4)))\n        .sort()[0]\n}\n\n\nexport { getRecordingYear }","const staticStuff = require(\"./static\");\n\nfunction getGender(resource){\n    const men = resource.subject_refs.indexOf(staticStuff.MEN_SUBJECT) >= 0,\n    women = resource.subject_refs.indexOf(staticStuff.WOMEN_SUBJECT) >= 0,\n    both = men && women;\n\n    if (both){ return \"Both\" }\n    else if (women){ return \"Women\" }\n    else if (men){ return \"Men\" }\n    return \"Unknown\"\n\n}\n\nexport { getGender }","/**\n * subjects interface - create an API interface for subjects items\n */\nconst createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/subjects.min.json\")\n    .map(a => {\n        const ret = {\n            label: a.title,\n            id: a.uri\n        }\n        return ret;\n    })\n\nmodule.exports = createReferenceInterface(data, \"subject_refs\" );\n","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/interviewers.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Interviewer with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    })\n\nmodule.exports = createReferenceInterface(data, \"interviewers\" );","const createReferenceInterface = require(\"./createReferenceInterface\");\n\nconst data = require(\"./json/programs.min.json\")\n    .map(i => {\n\n        if (i.display_names.length > 1){ throw(\"Program with multiple names\")}\n        return {\n            id: i.uri,\n            label: i.display_names[0]\n        }\n\n    });\n\n\nmodule.exports = createReferenceInterface(data, \"programs\" );","\nimport * as resources from \"./resources\";\nimport * as subjects from \"./subjects\";\nimport * as interviewers from \"./interviewers\";\nimport * as programs from \"./programs\";\nimport { MEN_SUBJECT, WOMEN_SUBJECT } from \"./static\";\nimport {getRecordingYear} from \"./getRecordingYear\";\nimport {getGender} from \"./getGender\";\n\n/**\n * \n * getData - given an options object,\n *           return the counts of specified meta\n *           field values\n * \n */\nfunction getData(options) {\n\n    let ret = {\n        // implemented\n        \"subjects\": {},\n        \"languages\": {},\n        \"birthYears\": {},\n        \"interviewers\": {},\n        \"gender\": {\n            men:{label:\"Men\",count:0},\n            women:{label:\"Women\",count:0},\n            both:{label:\"Both\",count:0}},\n        \"programs\": {},\n\n        // not implemented\n        \"recordingYears\": {},\n        // \"birthCities\": {},\n        // \"birthCountries\": {},\n        \"birthPlaces\": {},\n    }\n\n    // let subj = [];\n\n    function incr(retKey, item) {\n        if (!(item.id in ret[retKey])) {\n            ret[retKey][item.id] = { ...item, count: 0 };\n        }\n        ret[retKey][item.id].count += 1;\n    }\n\n    var res = resources.query(options || {});\n\n    function birthPlaces(r) {\n        let ret = []\n        const cityCount = (r.birth_place_cities || []).length;\n        const countryCount = (r.birth_place_countries || []).length;\n        if (cityCount < 1 || cityCount !== countryCount) { return [] }\n        for (var i = 0; i < cityCount; i++) {\n            const city = r.birth_place_cities[i] || \"\",\n                country = r.birth_place_countries[i] || \"\";\n            ret.push(`${city},${country}|${country}`);\n        }\n        return ret;\n    }\n\n    res = res.map(r => { return { ...r, birthPlaces: birthPlaces(r) } });\n\n    res.forEach(r => {\n\n        // count occurrences of each subject\n        r.subject_refs.forEach(s => { incr(\"subjects\", subjects.byID(s)) });\n\n        // count the number of records with both men and women\n        const genderItem = {id:getGender(r).toLowerCase()};\n        // console.log(\"gender\", genderItem)\n        incr(\"gender\", genderItem);\n        // if (r.subject_refs.indexOf(MEN_SUBJECT) >= 0 && r.subject_refs.indexOf(WOMEN_SUBJECT) >= 0){ ret.gender.both.count += 1 }\n\n        // count occurrences of each birth year\n        if (r.birth_years && r.birth_years.length === 1) {\n            incr(\"birthYears\", { label: r.birth_years[0], id: r.birth_years[0] })\n        }\n\n        // count occurrences of each language\n        incr(\"languages\", { label: r.language, id: r.language });\n\n        // // count occurrences of each birth city/country pair\n        r.birthPlaces.forEach(place => incr(\"birthPlaces\", {\n            label: place,\n            id: place,\n            city: place.split(\"|\")[0],\n            country: place.split(\"|\")[1],\n        }));\n\n        // count occurrences of each recording year\n        const ryear = getRecordingYear(r);\n        incr(\"recordingYears\", { label: ryear, id: ryear });\n\n            // count occurrences of each affiliate program\n            (r.programs || []).forEach(i => { incr(\"programs\", programs.byID(i)) });\n\n        // count occurences of each interviewer\n        (r.interviewers || []).forEach(i => { incr(\"interviewers\", interviewers.byID(i)) })\n\n    });\n\n    // ret.gender.men = (ret.subjects[MEN_SUBJECT] || 0) \n    // ret.gender.women = (ret.subjects[WOMEN_SUBJECT] || 0 )\n    // ret.gender.men.count -= ret.gender.both.count || 0 ;\n    // ret.gender.women.count -= ret.gender.both.count;\n    \n\n    const returnValue = {\n        resources: res,\n        subjects: undefined,\n        summaryData: ret\n    };\n\n    return returnValue;\n\n}\n\nexport {\n    getData,\n    resources,\n    interviewers,\n    subjects,\n    programs\n};","import React from 'react';\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div></div>\n        );\n    }\n\n}\n","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport \"./style/main.scss\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n        super(props);\n\n        this.callback = this.props.callback || function () { };\n\n        this.updateValue = this.updateValue.bind(this);\n    }\n\n    updateValue(e) {\n        this.callback(e.target.value);\n    }\n\n    render() {\n        const value = this.props.value || \"\";\n        return (\n            <div className=\"TextInput\">\n                <input \n                onChange={this.updateValue} \n                value={value} \n                placeholder={this.props.placeholder} \n                type=\"text\"></input>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick() {\n        this.props.callback(this.props.item);\n    }\n\n    render() {\n        return (\n            <div onClick={this.handleClick} className=\"SelectionPoolItem\">\n                <div>{this.props.item.label}</div> <div className=\"button\">x</div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport SelectionPoolItem from \"./SelectionPooltem\";\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SelectionPool\">\n                {(this.props.items || []).map((item,i) => {\n                    return (<SelectionPoolItem key={i} callback={this.props.callback} item={item}></SelectionPoolItem>);\n                })}\n            </div>\n            )\n        }\n}","import React from 'react'\nimport \"./style/main.scss\"\n\nexport default class extends React.Component {\n\n    constructor(props){\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    handleClick(){\n        this.props.callback(this.props.item);\n    }\n\n    render(){\n        return (\n            <div onClick={this.handleClick} data-value={this.props.item.value} className=\"TagItem\">{this.props.item.label}</div>\n        )\n    }\n\n}","import React from 'react';\nimport TagPoolItem from \"./TagPoolItem\";\nimport \"./style/main.scss\"\n\nexport default class extends React.Component{\n\n    render(){\n        return (\n            <div className=\"TagPool\">\n                {(this.props.items || []).map((item, i)=>{\n                    return (\n                    <TagPoolItem \n                    callback={this.props.callback || function(){}} \n                    key={i} \n                    item={item}></TagPoolItem>\n                    )\n                })}\n            </div>\n        )\n    }\n}","import React from 'react';\nimport GenericInput from \"../GenericInput\";\nimport TextInput from \"../TextInput\";\n\nimport SelectionPool from \"../SelectionPool\";\nimport TagPool from \"./TagPool\";\n\nexport default class extends GenericInput {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            searchTerm: '',\n        }\n\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.addSelection = this.addSelection.bind(this);\n        this.dropSelectionByID = this.dropSelectionByID.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.updateSelections = this.updateSelections.bind(this);\n    }\n\n    updateSelections(newSelections){\n        this.props.updateSelections(newSelections);\n        this.setState({searchTerm:\"\"})\n    }\n\n    updateSearchTerm(t) {\n        this.setState({\n            searchTerm: t, \n        });\n    }\n\n    addSelection(selectionItem) {\n        // don't add a duplicate\n        var newSelections = [...this.props.selections];\n        if (newSelections.filter(a => a.id === selectionItem.id).length > 0) { return; }\n\n        newSelections = [...newSelections, selectionItem];\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelectionByID(dropID) {\n        var newSelections = [...this.props.selections];\n        newSelections = newSelections.filter(a => {\n            const ret = String(a.id) !== String(dropID);\n            return ret;\n        });\n\n        this.updateSelections(newSelections, this.state.searchTerm);\n    }\n\n    dropSelection(item) {\n        this.dropSelectionByID(item.id)\n    }\n\n    render() {\n        //const items = this.props.getItems(this.props.selections, this.state.searchTerm.split(\"\"))\n        const items = this.props.filterItems(this.state.searchTerm.split(\" \"))\n        .filter(i=>i.id in this.props.allItems)\n        // .filter(i=>Object.keysthis.props.allItems.indexOf(i.id) >= 0)\n\n        return (\n            <div className=\"TagFilter\">\n                <div className=\"top-area\">\n\n                <div className=\"title-area\">{this.props.title}</div>\n                <TextInput\n                    callback={this.updateSearchTerm}\n                    placeholder={this.props.placeholder}\n                    value={this.state.searchTerm}></TextInput>\n                <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}></SelectionPool>\n                </div>\n\n                <TagPool\n                    callback={this.addSelection}\n                    items={items || []}\n                // items={this.state.poolItems || []}\n                ></TagPool>\n            </div>\n        )\n    }\n\n}","import React from 'react';\n// import \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    componentDidMount(){\n    }\n\n    render(){ return (\n        <div className=\"RangeSlider\">\n        </div>\n    )}\n}","import React from 'react';\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.clearSelection = this.clearSelection.bind(this);\n    }\n\n    handleSelection(item) {\n        this.props.updateSelections(this.props.items.filter(i => i.id === item.target.value))\n    }\n\n    clearSelection() {\n        this.props.updateSelections([])\n    }\n\n    render() {\n\n        const selected = this.props.selections && this.props.selections.length === 1 ? this.props.selections[0] : { id: \"ALL\" };\n        // const clearButtonText = selected.id === \"ALL\" ? \"\" : \"╳\"\n        const subClass = selected.id === \"ALL\" ? \"arrow\" : \"x\"\n        // const active = selected.id !== \"ALL\"\n        let buttonClass = \"clear-button\";\n        buttonClass = \"dropdown-icon \" + subClass;\n\n        if (selected.id !== \"ALL\") { buttonClass += \" enabled\" }\n        return (\n            <div className=\"ItemSelector\">\n\n                <select\n                    className={subClass + \" dropdown-icon\"}\n                    defaultValue={selected.ID}\n                    onChange={this.handleSelection}>\n                    <option\n                        onClick={this.clearSelection}\n                        value=\"all\"\n                    >{this.props.placeholder || \"All items\"}</option>\n\n                    {this.props.items.map((item, i) => {\n                        const optionProps = {\n                            // selected: selected.id === item.id,\n                            value: item.id\n                        }\n                        return (\n                            <option\n                                key={i}\n                                {...optionProps}>{item.label}</option>\n                        )\n                    })}\n                </select>\n\n                <div className={\"button \" + buttonClass} onClick={this.clearSelection}>\n                </div>\n\n            </div>\n        );\n    }\n\n}\n","import React from 'react';\n\nexport default class extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n\n        this.svg = React.createRef();\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        this.redrawChart = this.redrawChart.bind(this);\n\n        this.margin = props.margin || {\n            top:0,\n            left:0,\n            right:0,\n            bottom:0\n        }\n    }\n\n    componentDidUpdate() { \n        this.updateChart(this.props.data) \n    }\n\n    componentDidMount() {\n        this.initializeChart();\n        this.updateChart();\n    }\n\n    render() {\n        return (<div className=\"Viz\">\n            <div></div>\n            <svg ref={(elem) => { this.svg = elem; }}></svg>\n        </div>);\n    }\n\n    redrawChart(){\n        // throttle redrawing\n        clearTimeout(this.timeout)\n        this.timeout = setTimeout(()=>{\n            this.initializeChart();\n            this.updateChart();\n    \n        }, 100)\n    }\n\n    // Override this \n    initializeChart() {\n    }\n\n    // Override this\n    updateChart(data) {\n    }\n\n}","import React from 'react';\nimport D3Component from \"../../Viz/D3Component\"\nimport \"./style/main.scss\";\nimport * as d3 from \"d3\";\n\nimport sliderHandleIcon from \"./style/graphics/slider.svg\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            handles: [],\n            range: [{ value: props.min }, { value: props.max }],\n            labels: [{ value: props.min }, { value: props.max }]\n        }\n\n        this.scale = this.scale.bind(this);\n        this.valueToX = this.valueToX.bind(this);\n        this.xToValue = this.xToValue.bind(this);\n        this.limitValue = this.limitValue.bind(this);\n        this.limitX = this.limitX.bind(this);\n        this.getHandleRange = this.getHandleRange.bind(this);\n        this.updateLabels = this.updateLabels.bind(this);\n        this.updateRange = this.updateRange.bind(this);\n\n    }\n\n    scale() {\n        return d3.scaleLinear()\n            .domain([this.props.min, this.props.max])\n            .range([this.margin.left, this.width - this.margin.right]);\n    }\n\n    valueToX(val) {\n        return this.scale()(val) - this.handleWidth / 2;\n    }\n\n    xToValue(x) {\n        return this.scale().invert(x + this.handleWidth / 2);\n    }\n\n    limitValue(value) {\n        return Math.max(this.props.min, Math.min(this.props.max, value));\n    }\n\n    limitX(x) {\n        return this.valueToX(this.limitValue(Math.round(this.xToValue(x))));\n    }\n\n    getHandleRange() {\n        let range = [];\n        d3.select(this.svg)\n            .select(\".handle-layer\")\n            .selectAll(\"image.handle-icon\")\n            .each(d => range.push(d))\n\n        range = range.sort((a, b) => { return a.value < b.value ? -1 : 1 })\n        return range;\n    }\n\n    updateLabels() {\n        this.setState({ labels: this.getHandleRange() });\n    }\n\n    updateRange() {\n\n        let range = this.getHandleRange();\n        this.props.updateSelections(range.map(x => x.value))\n        this.setState({ range })\n\n    }\n\n    initializeChart() {\n\n        const svg = d3.select(this.svg),\n            bbox = svg.node().getBoundingClientRect(),\n            width = bbox.width,\n            height = bbox.height,\n            handleHeight = this.props.handleHeight || 17.151,\n            handleWidth = this.props.handleWidth || 13,\n            trackHeight = this.props.trackHeight || 6,\n            yCenter = this.margin.top + (height - this.margin.bottom) / 2;\n\n        this.width = width;\n        this.height = height;\n        this.handleWidth = handleWidth;\n\n        svg.attr(\"height\", height + \"px\");\n\n        const label = svg.append(\"text\")\n            .text(this.props.label || \"Double Slider\")\n            .attr(\"x\", function () { return 120 - d3.select(this).node().getBBox().width - 2 * handleWidth })\n\n        label.attr(\"y\", function () {\n            return yCenter\n                + d3.select(this).node().getBBox().height * 0.25\n        })\n\n        this.margin.left = 120;\n        // this.margin.left = label.node().getBBox().width\n        //     + label.node().getBBox().x\n        //     + handleWidth;\n\n        svg.append(\"rect\")\n            .classed(\"track\", true)\n            .attr(\"x\", this.margin.left)\n            .attr(\"width\", width - this.margin.left - this.margin.right)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight);\n\n\n        // add selected tract\n        const trackHighlight = svg.append(\"rect\")\n            .classed(\"highlight\", true)\n            .attr(\"y\", yCenter - trackHeight / 2)\n            .attr(\"height\", trackHeight)\n\n\n        function dragstarted(d) {\n            d3.select(this).raise().classed(\"active\", true)\n                .transition().duration(250)//.ease(d3.easeQuadIn)\n            // .attr(\"transform\",\"skewX(10)\")\n            // .attr(\"height\",handleHeight * 0.7)\n            // .attr(\"y\", yCenter - handleHeight * 0.7 / 2)\n            // .attr(\"width\",handleWidth * 0.7);\n\n        }\n\n        const limitX = this.limitX,\n            xToValue = this.xToValue,\n            valueToX = this.valueToX,\n            updateLabels = this.updateLabels,\n            range = this.state.range;\n\n        function dragged(d) {\n            d3.select(this).attr(\"x\", limitX(d3.event.x));\n            const yr = xToValue(limitX(d3.event.x))\n            d3.select(this)\n                .attr(\"transform\", x => `translate(${limitX(d3.event.x)},${yCenter - handleHeight / 2})`)\n            d3.select(this).attr(\"data-value\", d.value = yr);\n            d3.select(this).select(\".year-label\").text(yr)\n            updateLabels();\n\n            // \n            let xValues = [];\n            svg.selectAll(\".handle\")\n            .each(function(){\n                console.log(this);\n                xValues.push(Number(d3.select(this).attr(\"x\")));\n            });\n\n            trackHighlight\n            .attr(\"x\", d3.min(xValues) + handleWidth / 2)\n            .attr(\"width\", d3.max(xValues) - d3.min(xValues))\n\n        }\n\n        const updateRange = this.updateRange;\n\n        function dragended(d) {\n            d3.select(this).classed(\"active\", false)\n            // .transition().duration(250)//.ease(d3.easeQuadOut)\n            // .attr(\"transform\",\"skewX(0)\")\n            // .attr(\"y\", yCenter - handleHeight / 2)\n            // .attr(\"height\",handleHeight)\n            // .attr(\"width\",handleWidth)\n\n            updateRange();\n\n        }\n\n        const handleLayer = svg.append(\"g\")\n            .classed(\"handle-layer\", true)\n\n        const handleGroups = handleLayer\n            // .append(\"g\")\n            // .classed(\"handle\", true)\n            .selectAll(\"g\")\n            .data(this.state.range)\n            .enter()\n            .append(\"g\")\n            .classed(\"handle\", true)\n            .attr(\"x\",x=>this.valueToX(x.value))\n            .attr(\"transform\", x => `translate(${this.valueToX(x.value)},${yCenter - handleHeight / 2})`)\n            .call(d3.drag()\n                .on(\"start\", dragstarted)\n                .on(\"drag\", dragged)\n                .on(\"end\", dragended))\n\n        \n        console.log(\"slider file\", sliderHandleIcon)\n        const svgString =\"PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMyIgaGVpZ2h0PSIxNy4xNTEiIHZpZXdCb3g9IjAgMCAxMyAxNy4xNTEiPjxwYXRoIGQ9Ik0yNDAsNDQwVjQyOWgxMnYxMWwtNiw1WiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoLTIzOS41IC00MjguNSkiIGZpbGw9IiNmZmYiIHN0cm9rZT0iI2FhYSIgc3Ryb2tlLXdpZHRoPSIxIi8+PC9zdmc+\"\n        handleGroups.append(\"image\")\n        .classed(\"handle-icon\", true)\n        .attr(\"xlink:href\",`data:image/svg+xml;base64,${svgString}`)\n        .attr(\"x\",0)\n        .attr(\"y\",0)\n        .attr(\"width\",handleWidth)\n        .attr(\"height\", handleHeight)\n        // .attr(\"xlink:href\", { sliderHandleIcon })\n\n        // handleGroups.append(\"rect\")\n        //     .attr(\"width\", handleWidth)\n        //     .attr(\"height\", handleHeight)\n        // .attr(\"transform\", x => `translate(${this.valueToX(x.value)},0)`)\n        // .attr(\"y\", yCenter - handleHeight / 2)\n\n        // .attr(\"x\", x => this.valueToX(x.value))\n        // .attr(\"y\", yCenter - handleHeight / 2)\n\n        handleGroups.append(\"text\")\n            .classed(\"year-label\", true)\n            .text(d => d.value)\n            .attr(\"transform\", function () {\n                return `translate(${\n                    handleWidth / 2 - d3.select(this).node().getBBox().width / 2\n                    },${\n                    yCenter\n                    + handleHeight / 2\n                    + 1})`\n            })\n\n\n\n        // this.setState({ handles });\n\n\n\n\n\n    }\n\n    updateChart() {\n\n    }\n\n    render() {\n        return (\n            <div className=\"DoubleSlider\">\n                {D3Component.prototype.render.call(this)}\n                {/* <div className=\"label-container\">\n                    <div className=\"label min\">{this.state.labels[0].value}</div>\n                    <div className=\"label max\">{this.state.labels[1].value}</div>\n                </div> */}\n            </div>)\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../../Viz/D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n        // this.setRange = this.setRange.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        this.xAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"x\", true);\n\n        this.yAxisG = svg.append(\"g\")\n            .classed(\"axis\", true)\n            .classed(\"y\", true);\n\n        this.barG = svg.append(\"g\");\n    }\n\n    updateChart(data) {\n\n        data = data || this.props.data;\n        const svg = d3.select(this.svg);\n\n        // get width and height\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        // svg.attr(\"height\", height + \"px\")\n        // .attr(\"width\", width + \"px\");\n\n        // const yearRange = d3.extent(this.props.data.map(x => x.label))\n        const yearRange = [this.props.minYear, this.props.maxYear]\n        const countRange = [0, d3.max(data.map(x => x.count)) || 1]\n\n        const margin = this.props.margin || {\n            bottom: 30,\n            top: 20,\n            left: 20,\n            right: 20\n        }\n\n        // add axes\n        const xScale = d3.scaleBand()\n            .domain(d3.range(...yearRange))\n            .padding(0.5)\n            .rangeRound([margin.left, width - margin.right])\n\n        const xAxis = d3.axisBottom(xScale)\n            .tickFormat(e => numeral(e).format(\"0\"))\n            .tickValues(d3.range(this.props.minYear, this.props.maxYear, 10))\n\n        this.xAxisG\n            .attr(\"transform\", `translate(${0},${height - margin.bottom})`)\n            .call(xAxis)\n\n        const yScale = d3.scaleLinear()\n            .domain(countRange)\n            .rangeRound([height - margin.bottom, margin.top])\n\n        const yAxis = d3.axisLeft(yScale).tickSizeOuter(0)\n            .tickFormat(e => Math.floor(e) === e ? e : undefined);\n\n        this.yAxisG\n            .attr(\"transform\", `translate(${margin.left},${0})`)\n            .transition().duration(1000).ease(d3.easeQuadIn)\n            .call(yAxis)\n\n        const t = i => svg.transition()\n            .duration(1000)\n            .ease(d3.easeCubic)\n\n        this.barG.selectAll(\".bar\")\n            .data(data)\n            .join(\n                (enter, i) => enter.append(\"rect\")\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"data-enter-value\", d => d.count)\n                    .attr(\"data-label\", d => d.label)\n                    .attr(\"y\", d => yScale(0))\n                    .attr(\"width\", xScale.bandwidth)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(enter => enter.transition(t(i))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                        .attr(\"width\", xScale.bandwidth)\n                    ),\n                update => update\n                    .attr(\"data-update-value\", d => d.count)\n                    .attr(\"class\", d => d.barClass)\n                    .classed(\"bar\", true)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(update => update.transition(t(100))\n                        .attr(\"y\", d => yScale(d.count || 0))\n                        .attr(\"height\", d => yScale(0) - yScale(d.count || 0))\n                    ),\n                exit => exit\n                    .attr(\"data-exit-value\", d => d.count)\n                    // .attr(\"class\",d=>d.barClass)\n                    .attr(\"x\", d => xScale(d.label))\n                    .call(exit => exit.transition(t(100))\n                        .attr(\"height\", 0)\n                        .attr(\"y\", () => yScale(0))\n                    )\n            )\n\n        d3.select(window).on(\"resize\", this.redrawChart)\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height);\n\n        svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    updateChart() {\n        const svg = d3.select(this.svg);\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height)\n        const h = d3.hierarchy({ \"children\": this.props.items });\n\n        var treemap = d3.treemap()\n            .size([width, height])\n            .padding(2);\n\n        var nodes = treemap(h\n            .sum(function (d) { return d.count; })\n            .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n        )\n            .descendants();\n\n        // function color() { return \"gray\" }\n\n        const isHighlighted = item => {\n            const itemData = item.data;\n            if (!this.props.selections || this.props.selections.length < 1) { return false }\n            if (itemData.id === this.props.selections[0].id) { return true };\n            return false\n        }\n        const t = svg.transition()\n            .duration(500)\n            .ease(d3.easeQuad)\n\n        var cell = svg.selectAll(\"rect\")\n            .data(h.leaves())\n            .join(\n                enter => enter\n                    .append(\"rect\")\n                    .classed(\"program\", true)\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n                    .call(enter=>enter\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    )\n                    // .on(\"click\", d => {\n                    //     if (d.data.id in this.props.itemDict) {\n                    //         return this.props.clickCallback(d)\n                    //     }\n                    // })\n                    ,\n                update => update\n                    .classed(\"highlighted\", isHighlighted)\n                    .attr(\"id\", function (d) { return d.id; })\n\n                    .call(update => update.transition(t)\n                        .attr(\"x\", d => d.x0)\n                        .attr(\"y\", d => d.y0)\n                        .attr(\"width\", function (d) { return d.x1 - d.x0; })\n                        .attr(\"height\", function (d) { return d.y1 - d.y0; })\n                    ),\n                exit => exit.remove()\n            )\n            .on(\"click\", d => {\n                if (d.data.id in this.props.itemDict) {\n                    return this.props.clickCallback(d)\n                }\n            })\n\n        svg.selectAll(\"rect\")\n            .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n            .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n            .on(\"click\", item => {\n                console.log(\"initial click\");\n                return this.props.clickCallback(item)\n            });\n\n\n        d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    }\n\n    // initializeChartOld() {\n    //     const svg = d3.select(this.svg).html(\"\");\n\n    //     const width = svg.node().getBoundingClientRect().width,\n    //         height = this.props.height || svg.node().getBoundingClientRect().height;\n\n    //     svg.attr(\"height\", height)\n    //     const h = d3.hierarchy({ \"children\": this.props.items });\n\n    //     var treemap = d3.treemap()\n    //         .size([width, height])\n    //         .padding(2);\n\n    //     var nodes = treemap(h\n    //         .sum(function (d) { return d.count; })\n    //         .sort(function (a, b) { return a.height - b.height || b.count - a.count; })\n    //     )\n    //         .descendants();\n\n\n    //     const isHighlighted = item => {\n    //         const itemData = item.data;\n    //         if (!this.props.selections || this.props.selections.length < 1) { return false }\n    //         if (itemData.id === this.props.selections[0].id) { return true };\n    //         return false\n    //     }\n    //     const t = svg.transition()\n    //         .duration(1000)\n    //         .ease(d3.easeCubic)\n\n    //     var cell = svg.selectAll(\"rect.program\")\n    //         .data(h.leaves())\n    //         .join(\n    //             enter => enter\n    //                 .append(\"rect\")\n    //                 .classed(\"highlighted\", isHighlighted)\n    //                 .attr(\"id\", function (d) { return d.id; })\n    //                 .attr(\"x\", d => d.x0)\n    //                 .attr(\"y\", d => d.y0)\n    //                 .attr(\"width\", function (d) { return d.x1 - d.x0; })\n    //                 .attr(\"height\", function (d) { return d.y1 - d.y0; }),\n    //         )\n\n\n\n\n    //     svg.selectAll(\"rect\")\n    //         .on(\"mouseover\", this.props.mouseInCallback || (() => { console.log(\"Default handler\") }))\n    //         .on(\"mouseout\", this.props.mouseOutCallback || (() => { }))\n    //         .on(\"click\", item => {\n    //             console.log(\"initial click\");\n    //             return this.props.clickCallback(item)\n    //         });\n\n\n    //     d3.select(window).on(\"resize\", this.redrawChart)\n\n\n    // }\n\n    // updateChartOld() {\n\n    //     const svg = d3.select(this.svg);\n\n    //     svg.selectAll(\"rect\")\n    //         .classed(\"highlighted\", d => {\n    //             return d.data.id in this.props.itemDict\n    //         })\n    //         .on(\"click\", d => {\n    //             console.log(\"update click\")\n    //             if (d.data.id in this.props.itemDict) {\n    //                 return this.props.clickCallback(d)\n    //             }\n    //         })\n\n    // }\n\n}","export default function (obj){\n    obj = obj || [];\n    return Object.keys(obj).map(k=>obj[k]);\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        console.log(\"CountListWithBars.props\", this.props)\n        return (\n            <div className=\"count-list\">\n                {(this.props.allItems || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let barWidth = width(item.count);\n                        let className=\"list-item on\"\n                        if (!(item.id in this.props.itemDict)){\n                            barWidth = 0;\n                            className=\"list-item off\"\n                        } else {\n                        }\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick||(()=>{}))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"off-icon\">x</div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {numeral(item.count).format(\"0,0\")}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","export default function (arr){\n    let obj = []\n    arr.forEach(item=>obj[item.id] = item)\n    return obj\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport D3Component from \"../D3Component\";\n// import numeral from \"numeral\";\nimport * as d3 from \"d3\";\nimport { objectToArray } from '../../MetaDash/Common';\n\nexport default class extends D3Component {\n\n    constructor(props) {\n        super(props);\n\n        this.initializeChart = this.initializeChart.bind(this);\n        this.updateChart = this.updateChart.bind(this);\n    }\n\n    initializeChart() {\n        const items = this.props.items\n\n        const svg = d3.select(this.svg).html(\"\");\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        svg.attr(\"height\", height + \"px\");\n\n        svg.on(\"resize\", this.redrawChart)\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        this.updateChart(prevProps, prevState);\n    }\n\n    updateChart(prevProps, prevState) {\n\n        const svg = d3.select(this.svg)\n\n        const width = svg.node().getBoundingClientRect().width,\n            height = this.props.height || svg.node().getBoundingClientRect().height;\n\n        const items = this.props.items;\n        // change this to props.allItems if you want to preserve each node's circle element\n        // which is cooler, but expensive\n        let allItems = this.props.items;\n\n        function allItemsMatch(arr1, arr2){\n            if( arr1.length !== arr2.length ){ return false }\n            for (let i = 0; i < arr1.length; i++){\n                if (arr1[i].id !== arr2[i].id){ return false}\n                if (arr1[i].count !== arr2[i].count){ return false}\n            }\n            return true;\n        }\n\n        // FIXME - this is a really naive improvement that prevents reanimating when\n        // the length of the properties hasn't changed. There could be cases when\n        // it should redraw but won't. really I should check that each item/count is unchanged\n        // if (Object.keys((prevProps||{}).itemDict||{}).length ===  Object.keys(this.props.itemDict).length){ return }\n        // this should be better\n        if (allItemsMatch(\n            objectToArray((prevProps||{}).itemDict||{}), \n            objectToArray(this.props.itemDict))){ \n                return\n            }\n\n        console.log(\"re-rendering!\")\n\n        const root = d3.stratify()\n            .id(d => d.label.split(\"|\")[0])\n            .parentId(d => d.label.split(\"|\")[1])(items);\n\n        var packLayout = d3.pack()\n            .padding(0.725)\n            .size([width, height]);\n\n        root.sum(d => d.count);\n\n        const data = root.descendants().filter(d => d.data.label.indexOf(\"root\") < 0);\n        packLayout(root);\n        svg.selectAll(\"circle.city\").transition();\n\n        const t = d3.transition().duration(1400)//.ease(d3.easeQuad);\n        this.allowInteraction = data.length;\n\n        let nodes = svg\n            .selectAll('circle.city')\n            .data(data)\n            .join(\n                enter => enter\n                    .append('circle')\n                    .classed(\"city\", true)\n                    .on(\"mouseover\", d => this.props.onMouseOver(d.data))\n                    .on(\"mouseout\", d => this.props.onMouseOut(d.data))\n                    .on(\"click\", d => {\n                        if (this.props.selections \n                            && this.props.selections.length == 1\n                            && this.props.selections[0].id == d.data.id){\n                            this.props.updateSelections([])\n                        } else {\n                            this.props.updateSelections([d.data])\n                        }\n                    })\n                    .attr('cx', function (d) { return d.x; })\n                    .attr('cy', function (d) { return d.y; })\n                    .attr('r', function (d) { return d.r; }),\n                update => update\n                    .call(update =>\n                        update.transition(t)\n                            .attr(\"data-city\", d => d.data.label)\n                            .attr('cx', d=>d.x)\n                            .attr('cy',d=>d.y)\n                            .attr('r',d=>d.r)\n                    ),\n                // exit=>exit\n                // .call(exit=>\n                //     exit.transition().duration(1000)\n                //     .attr('r', 0)\n                // )\n            )\n\n    }\n\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.genderString = this.genderString.bind(this);\n        this.yearRangeString = this.yearRangeString.bind(this);\n\n    }\n\n    genderString() {\n        return \"GENDER\"\n    }\n\n    yearRangeString() {\n        return \"YEAR RANGE\"\n    }\n\n\n\n    render() {\n\n        // This data dashboard visualizes \n        // {this.propse.items.length} testimonies \n        // by {men/women/men and women}\n        // born in {yearmin, yearmax}\n\n        return (\n            <div className=\"IntroProse\">\n                This data dashboard visualizes \n                &nbsp; <span className=\"stat\">{numeral(this.props.items.length).format(\"0,0\")} testimonies</span> \n                &nbsp; by <span className=\"stat\">{this.genderString()}</span> \n                &nbsp; born in <span className=\"stat\">{this.yearRangeString(this.props.birthYearRange)}</span>\n                &nbsp; from <span className=\"stat\">{this.props.cityCount}</span> cities\n                &nbsp; who were interviewed from <span className=\"stat\">{this.yearRangeString(this.props.recordingYearRange)}</span>\n                &nbsp; across <span className=\"stat\">{this.props.languageCount} languages</span>\n                &nbsp; by <span className=\"stat\">{this.props.programCount} affiliate programs</span>.\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport * as d3 from \"d3\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"Men\": true,\n            \"Women\": true,\n            \"Both\": true\n        }\n\n        this.menRef = React.createRef();\n        this.bothRef = React.createRef();\n        this.womenRef = React.createRef();\n\n        this.genderToggle = this.genderToggle.bind(this);\n        this.animate = this.animate.bind(this);\n\n    }\n\n    genderToggle(gender) {\n\n        let val = this.state[gender],\n            newVal = !val,\n            // newVal = true,\n            otherVal = false;\n\n    \n        // prevent turning off all genders\n        switch (gender) {\n            case \"Men\":\n                otherVal = this.state.Women || this.state.Both;\n                break;\n            case \"Women\":\n                otherVal = this.state.Men || this.state.Both;\n                break;\n            case \"Both\":\n                otherVal = this.state.Men || this.state.Women;\n                break;\n            default:\n                throw (`Error: Invalid gender ${gender}`)\n\n        }\n\n        if (!otherVal && !newVal) { return }\n\n        const newState = { ...this.state }\n        newState[gender] = newVal;\n        this.setState(newState);\n\n        let selections = [];\n        if (newState.Men) selections.push(\"Men\");\n        if (newState.Women) selections.push(\"Women\");\n        if (newState.Both) selections.push(\"Both\");\n\n        this.props.updateSelections(selections);\n\n    }\n\n    animate() {\n        // animate the width\n\n        const vals = {\n            men: this.props.men || 0,\n            women: this.props.women || 0,\n            both: this.props.both || 0\n        },\n            total = vals.men + vals.women + vals.both;\n\n        const animate = (label, ref) =>\n            d3.select(ref)\n                .transition()\n                .duration(1000)\n                .ease(d3.easeSinOut)\n                .style(\"width\", () => (vals[label] * 100 / total) + \"%\");\n\n        animate(\"both\", this.bothRef)\n        animate(\"men\", this.menRef)\n        animate(\"women\", this.womenRef)\n\n    }\n\n    componentDidMount() { this.animate() }\n    componentDidUpdate() { this.animate() }\n\n    render() {\n        const men = this.props.men || 0,\n            women = this.props.women || 0,\n            both = this.props.both || 0,\n            total = men + both + women;\n\n        const toggleState = label => this.state[label] ? \"on\" : \"off\";\n\n        return (\n            <div className=\"Gender module-box\">\n                <h3 className=\"title\">Gender</h3>\n                <div className=\"label-container\">\n                    <div className=\"big-label\">{numeral(men / total).format(\"0%\")}</div>\n                    <div className=\"big-label\">{numeral(both / total).format(\"0%\")}</div>\n\n                    <div className=\"big-label\">{numeral(women / total).format(\"0%\")}</div>\n\n                    {/* <div className=\"big\">{numeral(men).format(\"0,0\")}</div>\n                    <div className=\"big\">{numeral(women).format(\"0,0\")}</div> */}\n                </div>\n                <div className=\"split-bar-container\">\n                    <div\n                        onClick={() => this.genderToggle(\"Men\")}\n\n                        ref={(elem) => { this.menRef = elem; }}\n                        // style={{ width: `${men * 100 / total}%` }} \n                        className={`men gender-bar ${toggleState(\"Men\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Both\")}\n\n                        ref={(elem) => { this.bothRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`both gender-bar ${toggleState(\"Both\")}`}></div>\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n\n                        ref={(elem) => { this.womenRef = elem; }}\n                        // style={{ width: `${women * 100 / total}%` }} \n                        className={`women gender-bar ${toggleState(\"Women\")}`}></div>\n                </div>\n                <div className=\"label-container\">\n                    <div\n                        className={\"label-area men small-label \" + toggleState(\"Men\")}\n                        onClick={() => this.genderToggle(\"Men\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Men</div>\n                        <div className=\"subtext\">{numeral(men).format(\"0,0\")}</div>\n\n                    </div>\n                    <div\n                        className={\"label-area both small-label \" + toggleState(\"Both\")}\n                        onClick={() => this.genderToggle(\"Both\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Both</div>\n                        <div className=\"subtext\">{numeral(both).format(\"0,0\")}</div>\n\n                    </div>\n\n                    <div\n                        onClick={() => this.genderToggle(\"Women\")}\n                        className={\"label-area women small-label \" + toggleState(\"Women\")}\n                    >\n                        {/* <div className={\"toggle-light\"}></div> */}\n                        <div>Women</div>\n                        <div className=\"subtext\">{numeral(women).format(\"0,0\")}</div>\n\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    renderBar(width) {\n        if (!this.props.showBars) { return }\n        return (\n            <div className=\"pct-bar-container\">\n                <div style={{ \"width\": width }} className=\"pct-bar\"></div>\n            </div>\n\n        )\n    }\n\n    render() {\n\n        const total = this.props.items.reduce((subtotal, nextItem) => subtotal + nextItem.count, 0);\n        const width = val => `${val * 100 / total}%`\n\n        console.log(\"CountListWithBars.props\", this.props);\n        const items = this.props.showAll ? this.props.allItems : this.props.items;\n        return (\n            <div className=\"count-list\">\n                {(items || [])\n                    .sort((a, b) => a.count < b.count ? 1 : -1)\n                    .filter(a => a.label && a.label.length > 0)\n                    .map((item, i) => {\n\n                        let itemCount,\n                            barWidth,\n                            className\n\n\n                        if (item.id in this.props.itemDict) {\n                            className = \"list-item\";\n                            itemCount = numeral(this.props.itemDict[item.id].count).format(\"0,0\");\n                            barWidth = width(this.props.itemDict[item.id].count);\n\n                        } else {\n                            className = \"list-item disabled\";\n                            barWidth = 0;\n                            itemCount = \"--\"\n                        }\n\n                        if (item.id in this.props.selections) {\n                            className = \"list-item selected\";\n                        }\n\n\n                        return (\n                            <div onClick={() => (this.props.handleItemClick || (() => { }))(item)} key={i}\n                                className={className}>\n\n                                <div className=\"x-circle-icon\"></div>\n\n                                <div className=\"list-item-name\">\n                                    {item.label}\n                                </div>\n\n                                {this.renderBar(barWidth)}\n\n                                <div className=\"list-item-value\">\n                                    {itemCount}\n                                </div>\n                            </div>\n                        )\n                    })}\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport CountListWithBars from \"../CountListWithBars\";\nimport { arrayToObject } from \"../Common\";\n\nexport default class extends React.Component {\n    render() {\n\n        const listProps = {\n            ...this.props,\n            handleItemClick: item => {\n                // switch to item, or clear selections if you click on the selected item \n                if (this.props.selections.length === 0 || item.id !== this.props.selections[0].id) { this.props.updateSelections([item]) }\n                else { this.props.updateSelections([]) }\n            },\n            showAll: true,\n            selections: arrayToObject(this.props.selections),\n            showBars: true\n        };\n\n\n        return (\n            <div className=\"Languages module-box\">\n                <h3 className=\"title\">Languages</h3>\n                <CountListWithBars\n                    {...listProps}\n                ></CountListWithBars>\n            </div>\n\n        )\n\n    }\n\n}","import React from 'react';\nimport { Histogram } from \"../../Viz/\";\nimport { DoubleSlider } from \"../../Inputs\";\n\nimport \"./style/main.scss\";\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            selections: props.selections\n        }\n\n        this.updateRangeFactory = this.updateRangeFactory.bind(this);\n\n    }\n\n    updateRangeFactory(key) {\n        return value => {\n            var newDict = { ...this.props.selections }\n            newDict[key] = value\n            this.props.updateSelections(newDict)\n        }\n    }\n\n    render() {\n        const itemProps = {\n            ...this.props,\n            margin: {\n                top: 20,\n                left: 30,\n                right: 10,\n                bottom: 20\n            }\n        };\n        const modeClass = this.props.subsetMode ? \"subset-mode\" : \"full-mode\";\n\n        return (\n            <div className={\"BirthYear module-box \" + modeClass}>\n                <h3 className=\"title\">Dates</h3>\n                <div className=\"Histogram\">\n                    <Histogram\n                        {...itemProps}\n                    ></Histogram>\n                </div>\n\n\n                <div className=\"slider-container\">\n                    <div className=\"half\">\n                        <DoubleSlider\n                        label=\"Birth year\"\n                            updateSelections={this.updateRangeFactory(\"birth\")}\n                            min={1890}\n                            max={1945}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n\n                    </div>\n                    <div className=\"half\">\n                        <DoubleSlider\n                            label=\"Recording year\"\n                            updateSelections={this.updateRangeFactory(\"recording\")}\n                            min={1969}\n                            max={2020}\n                            margin={{ top: 2, bottom: 10, left: 20, right: 40 }}\n                        ></DoubleSlider>\n                    </div>\n\n                </div>\n\n\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport \"./style/main.scss\";\nimport TagFilter from \"../../Inputs/TagFilter\";\n\n\nexport default class extends React.Component {\n\n    render() {\n        return (\n            <div className=\"SubjectHeadings\">\n                <TagFilter {...this.props}></TagFilter>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport { TagFilter, ItemSelector } from \"../../Inputs\";\nimport { TreeMap } from \"../../Viz\";\nimport { objectToArray } from \"../Common\"\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = { hoverText: \" \" }\n        this.setText = this.setText.bind(this);\n        this.handleMouseIn = this.handleMouseIn.bind(this);\n        this.handleMouseOut = this.handleMouseOut.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n\n    }\n\n    setText(hoverText) {\n        this.setState({ hoverText })\n    }\n\n    handleMouseIn(item) {\n        this.setText(item.data.label)\n    }\n\n    handleClick(item) {\n        // if (item.id in this.props.programs) {\n            this.props.updateSelections([item.data])\n        //};\n\n    }\n\n    handleMouseOut() {\n        this.setText(\" \");\n    }\n\n    render() {\n\n        console.log(\"Programs.render state\", this.props)\n        return (\n            <div className=\"Programs module-box\">\n\n                <h3 className=\"title\">Affiliate programs</h3>\n                <div className=\"hover-text\">\n                    {this.state.hoverText}\n                </div>\n\n                <TreeMap\n                    items={objectToArray(this.props.programs)}\n                    itemDict={this.props.programs}\n\n                    mouseInCallback={this.handleMouseIn}\n                    mouseOutCallback={this.handleMouseOut}\n                    selections={this.props.selections}\n                    clickCallback={this.handleClick}\n                ></TreeMap>\n\n                <ItemSelector\n                    updateSelections={this.props.updateSelections}\n                    items={objectToArray(this.props.programs)}\n                    selections={this.props.selections}\n                    placeholder={\"All affiliate programs\"}\n                ></ItemSelector>\n                {/* <ItemSelection></ItemSelection> */}\n                {/* <TagFilter {...this.props}></TagFilter> */}\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\n// import TagFilter from \"../../Inputs/TagFilter\";\nimport { arrayToObject, objectToArray } from \"../Common\";\nimport CountListWithBars from \"../CountListWithBars\";\n\nimport { TextInput, SelectionPool } from \"../../Inputs\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchTerm: '',\n        }\n        this.updateSelections = this.updateSelections.bind(this);\n        this.updateSearchTerm = this.updateSearchTerm.bind(this);\n        this.dropSelection = this.dropSelection.bind(this);\n        this.handleItemClick = this.handleItemClick.bind(this);\n\n    }\n\n    dropSelection(item) {\n        this.props.updateSelections(this.props.selections.filter(i => i.id !== item.id))\n    }\n\n    updateSearchTerm(searchTerm) {\n\n        this.setState({\n            searchTerm,\n            // filteredItems: this.props.filterItems(searchTerm)\n        })\n\n    }\n\n    updateSelections() {\n\n        // this.updateSearchTerm(this.state.searchTerm);\n        this.updateSearchTerm(\"\");\n        this.props.updateSelections.apply(null, arguments);\n\n    }\n\n    handleItemClick(item) {\n        // if you click an item that's already selected, unselect it.\n        // otherwise, select it\n        const selections = arrayToObject(this.props.selections);\n        const selectionsWithoutCurrentItem = this.props.selections.filter(i => i.id !== item.id);\n\n        if (item.id in selections) { this.updateSelections(selectionsWithoutCurrentItem) }\n        else { this.updateSelections(selectionsWithoutCurrentItem.concat([item])) }\n\n        // this.updateSelections(this.props.selections.filter(i=>i.id !== item.id).concat([item]))\n    }\n\n    render() {\n\n        const items = this.props.filterItems(this.state.searchTerm);\n\n        const listProps = {\n            showBars: this.props.showBars,\n            updateSelections: this.updateSelections,\n            items: items,\n            allItems: this.props.allInterviewers,\n            showAll: false,\n            itemDict: arrayToObject(items),\n            handleItemClick: this.handleItemClick,\n            selections: arrayToObject(this.props.selections)\n            //allowMultipleSelections: true,\n            // items: this.state.filteredItems\n            // items: objectToArray(this.props.interviewers)\n        }\n\n        return (\n            <div className=\"Interviewers module-box\">\n                <h3 className=\"title\">Interviewers</h3>\n                <div className=\"input-wrapper\">\n                    <TextInput\n                        placeholder=\"Search by name\"\n                        callback={this.updateSearchTerm}\n                        value={this.state.searchTerm}>\n                        ></TextInput>\n                </div>\n                {/* <div>\n                    <SelectionPool\n                    callback={(this.dropSelection)}\n                    items={this.props.selections}></SelectionPool>\n                </div> */}\n                <CountListWithBars {...listProps}></CountListWithBars>\n            </div>);\n\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\nimport { Cluster } from \"../../Viz\";\nimport { objectToArray } from \"../Common\";\nimport { normalizeString } from \"../../Common\";\n\nimport SelectionPool from \"../../Inputs/SelectionPool\";\nimport Autosuggest from 'react-autosuggest';\n\nexport default class extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchTerm: \"\",\n            suggestions: [],\n            hoverText: \" \"\n        }\n\n        this.cleanClusterData = this.cleanClusterData.bind(this);\n\n        this.dropSelection = this.dropSelection.bind(this);\n        this.onMouseOut = this.onMouseOut.bind(this);\n        this.onMouseOver = this.onMouseOver.bind(this);\n\n        this.getSuggestions = this.getSuggestions.bind(this);\n        this.getSuggestionValue = this.getSuggestionValue.bind(this);\n        this.onChange = this.onChange.bind(this);\n        this.onSuggestionsClearRequested = this.onSuggestionsClearRequested.bind(this);\n        this.onSuggestionsFetchRequested = this.onSuggestionsFetchRequested.bind(this);\n        this.renderSuggestion = this.renderSuggestion.bind(this);\n        this.onSuggestionSelected = this.onSuggestionSelected.bind(this);\n\n        this.renderHoverField = this.renderHoverField.bind(this);\n\n        this.cleanClusterData();\n\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const shouldUpdate = (nextProps !== this.props)\n            || (nextState !== this.state);\n\n        return (shouldUpdate);\n    }\n\n\n    // the data needs to be reformatted a little bit \n    // in order to work with a cluster pack layout.\n    // we want to create a hierarchy of countries and cities\n    cleanClusterData() {\n        // if (this.state.cleanClusterData) { return this.state.cleanClusterData }\n        let addedCountries = []\n        let clusterData = objectToArray(this.props.allBirthPlaces)\n            .filter(\n                place => place.label.split(\"|\").filter(x => x.length > 0).length == 2\n            )\n            .map(item => {\n                let ret = { ...item };\n                // console.log(\"item\",item, item.id in this.props.birthPlaces)\n                if (!(item.id in this.props.birthPlaces)) {\n                    // console.log(\"removing\", item);\n                    ret.count = 0\n                }\n                return ret\n            });\n\n        // add an item for each country\n        clusterData.forEach(element => {\n            const country = element.label.split(\"|\")[1];\n            if (addedCountries.indexOf(country) >= 0) { return }\n            addedCountries.push(country);\n            const label = `${country}|root`,\n                newItem = { label, id: label };\n            clusterData.push(newItem)\n        });\n\n        clusterData.push({ label: \"root|\", id: \"root|\" })\n\n        // this.setState({ cleanClusterData: clusterData });\n        return clusterData;\n\n    }\n\n    getSuggestionValue(suggestion) {\n        return suggestion.label\n    }\n\n    getSuggestions = value => {\n        const all = this.cleanClusterData();\n        return all.filter(x => normalizeString(x.label).indexOf(normalizeString(value)) >= 0)\n        // return [{label: value + \" and a hot plate!\"}]\n    }\n\n    onChange(event, { newValue }) {\n        this.setState({\n            searchTerm: newValue\n        });\n    }\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    renderSuggestion(suggestion) {\n        return (\n            <div className=\"suggestion\">\n                {suggestion.label.split(\"|\")[0].split(\",\").join(\", \")}\n            </div>\n        )\n    }\n\n    onSuggestionSelected(e, { suggestion }) {\n        this.props.updateSelections([suggestion])\n    }\n\n    dropSelection() {\n        this.props.updateSelections([])\n    }\n\n    onMouseOver(d) {\n        this.setState({ hoverText: d.label.split(\"|\")[0].split(\",\")[0] + \" \" + d.country })\n    }\n\n    onMouseOut() {\n        this.setState({ hoverText: \" \" })\n    }\n\n    renderHoverField() {\n        if (!this.props.selections || this.props.selections.length < 1) {\n            return (\n                <span>\n                    {this.state.hoverText || \" \"}\n                </span>\n            )\n        }\n        return (\n            <div className=\"selected-item\">\n                <div className=\"x-icon\"></div>\n                <div>{this.props.selections[0].label}</div>\n            </div>\n        )\n    }\n\n\n    render() {\n\n        const inputProps = {\n            placeholder: 'Type a place name',\n            value: this.state.searchTerm,\n            onChange: this.onChange\n        };\n\n        return (\n            <div className=\"BirthPlaces module-box\">\n                <h3 className=\"title\">Birth places</h3>\n\n                {/* <SelectionPool\n                    callback={this.dropSelection}\n                    items={this.props.selections}\n                ></SelectionPool> */}\n\n                <div className=\"hover-text\">\n                    {/* {this.state.hoverText} */}\n                    {this.renderHoverField()}\n                </div>\n\n                <Cluster\n                    items={this.cleanClusterData()}\n                    allItems={this.props.allBirthPlaces}\n                    itemDict={this.props.birthPlaces}\n                    selections={this.props.selections}\n                    onMouseOver={this.onMouseOver}\n                    onMouseOut={this.onMouseOut}\n                    updateSelections={this.props.updateSelections}\n                ></Cluster>\n\n                <Autosuggest\n                    suggestions={this.state.suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    getSuggestionValue={this.getSuggestionValue}\n                    onSuggestionSelected={this.onSuggestionSelected}\n                    renderSuggestion={this.renderSuggestion}\n                    inputProps={inputProps}\n                ></Autosuggest>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport \"./style/main.scss\";\nimport numeral from \"numeral\";\n\n\nexport default class extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            limit: 1,\n            increment: 1\n\n        }\n\n        this.renderResult = this.renderResult.bind(this);\n        this.trackScrolling = this.trackScrolling.bind(this);\n        // this.maybeLoadMore = this.maybeLoadMore.bind(this);\n        this.resultsRef = React.createRef()\n    }\n\n    // maybeLoadMore(el){\n    //     return this.state.limit < props.items.length && el.getBoundClientRect().bottom <= window.innerHeight - 100;\n    // }\n\n\n    renderResult(result, i) {\n        return (\n            <div key={i} className=\"result-item\">\n                <div className=\"testimony-name\">\n                    Name of testimony\n                </div>\n                <div className=\"birth-year\">\n                    19XX\n                </div>\n                <div className=\"birth-place\">\n                    City, Country\n                </div>\n                <div className=\"affiliate\">\n                    Affiliate name\n                </div>\n                <div className=\"recording-year\">\n                    19XX\n                </div>\n            </div>\n        )\n    }\n\n    trackScrolling() {\n        const scrollBottom = window.pageYOffset + window.innerHeight;\n        const distanceFromBottom = window.document.body.offsetHeight - scrollBottom;\n\n        if (this.props.results.length > this.state.limit\n            && distanceFromBottom < 100){\n            console.log(\"Loading more\");\n            this.setState({ limit: this.state.limit + this.state.increment })\n        }\n    }\n\n    componentDidMount() {\n        document.addEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener(\"scroll\", this.trackScrolling);\n    }\n\n    render() {\n        return (\n            <div\n                className=\"Results\">\n                <div className=\"prose\">\n                    There are <span className=\"stat\">{numeral(this.props.results.length).format(\"0,0\")}</span> testimonies with matching criteria.\n                </div>\n                <div\n                    ref={this.resultsRef}\n                    className=\"results-container\">\n                    {this.props.results.slice(0, this.state.limit).map(this.renderResult)}\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\n\nimport { TagFilter, RangeSlider } from '../Inputs';\nimport { BarChart, DonutChart } from \"../Viz\";\n\n// import OverviewBillboard from \"./OverviewBillboard\";\nimport IntroProse from \"./IntroProse\";\nimport Gender from \"./Gender\";\nimport Languages from \"./Languages\";\nimport BirthAndRecordingYear from \"./BirthAndRecordingYears\";\nimport SubjectHeadings from \"./SubjectHeadings\";\nimport Programs from \"./Programs\";\nimport Interviewers from \"./Interviewers\";\nimport BirthPlaces from \"./BirthPlaces\";\nimport Results from \"./Results\";\nimport { objectToArray, arrayToObject } from \"./Common\";\n\nimport \"./style/main.scss\";\nimport { Subject } from 'rxjs';\n\nconst data = require(\"../Data\");\n\nexport default class extends React.Component {\n\n    constructor(props) {\n\n        super(props);\n        this.fullData = data.getData();\n\n        this.state = {\n            ...this.fullData,\n            // resources: data.resources.query(),\n            // summaryData: summaryData,\n            filters: {\n                \"gender\": [\"Men\", \"Women\", \"Both\"],\n                \"birthYear\": [],\n                \"birthCountry\": [],\n                \"language\": [],\n                \"yearRecorded\": [],\n                \"subjects\": [],\n                \"interviewers\": [],\n                \"programs\": [],\n                \"dateRanges\": {}\n            },\n        }\n\n\n        this.updateFilterFactory = this.updateFilterFactory.bind(this);\n    }\n\n    updateFilterFactory(key) {\n        return val => {\n            var filters = { ...this.state.filters }\n            filters[key] = val;\n            const { resources, subjects, summaryData } = data.getData(filters);\n\n            this.setState({\n                filters: filters,\n                resources,\n                subjects,\n                summaryData\n            });\n        }\n    }\n\n\n    render() {\n\n        console.log(\"MetaDash.render state\", this.state);\n\n        let genderSubjects = [];\n        Object.keys(this.state.summaryData.subjects).filter(s => {\n            if ([\"Men\", \"Women\"].indexOf(this.state.summaryData.subjects[s].label) >= 0) {\n                genderSubjects.push(this.state.summaryData.subjects[s]);\n            }\n        })\n\n        return (\n            <div className=\"MetaDash\">\n\n                <section className=\"prose intro-prose-section\">\n                    <IntroProse\n                    items={this.state.resources}\n                    filters={this.state.filters}\n                    ></IntroProse>\n                </section>\n\n                <section className=\"module-area\">\n\n                    {/* <OverviewBillboard\n                        testimonyCount={this.state.resources.length}\n                    ></OverviewBillboard> */}\n\n\n                    <Gender\n                        updateSelections={this.updateFilterFactory(\"gender\")}\n                        men={this.state.summaryData.gender.men.count}\n                        women={this.state.summaryData.gender.women.count}\n                        both={this.state.summaryData.gender.both.count}\n                    ></Gender>\n\n                    <Languages\n                        updateSelections={this.updateFilterFactory(\"language\")}\n                        selections={this.state.filters.language}\n                        items={objectToArray(this.state.summaryData.languages)}\n                        itemDict={this.state.summaryData.languages}\n                        allItems={objectToArray(this.fullData.summaryData.languages)}\n                    ></Languages>\n\n                    <BirthAndRecordingYear\n                        // height={200}\n                        minYear={1890}\n                        maxYear={2022}\n                        updateSelections={this.updateFilterFactory(\"dateRanges\")}\n                        selections={this.state.filters.dateRanges}\n                        subsetMode={this.fullData.resources.length > this.state.resources.length}\n                        data={\n                            Object.keys(this.state.summaryData.birthYears)\n                                .map(k => this.state.summaryData.birthYears[k])\n                                // TODO - the data needs to be cleaned up \n                                // so we don't need to manually exclude stuff\n                                .filter(yrs => yrs.label >= 1890 && yrs.label < 1950)\n                                .map(a => { return { ...a, barClass: \"birth\" } })\n                                .concat(\n                                    Object.keys(this.state.summaryData.recordingYears)\n                                        .map(k => this.state.summaryData.recordingYears[k])\n                                        .filter(yrs => yrs.label >= 1960 && yrs.label < 2030)\n                                        .map(a => { return { ...a, barClass: \"recording\" } })\n                                )\n                        }\n                    ></BirthAndRecordingYear>\n\n                    <BirthPlaces\n                        updateSelections={this.updateFilterFactory(\"birthplaces\")}\n                        selections={this.state.filters.birthplaces}\n                        birthPlaces={this.state.summaryData.birthPlaces}\n                        allBirthPlaces={this.fullData.summaryData.birthPlaces}\n                        placeholder=\"Search for a city...\"\n                    ></BirthPlaces>\n\n                    <Interviewers\n                        interviewers={this.state.summaryData.interviewers}\n                        allInterviewers={this.fullData.summaryData.interviewers}\n                        updateSelections={this.updateFilterFactory(\"interviewers\")}\n                        selections={this.state.filters.interviewers}\n                        allInterviewers={\n                            data.interviewers.search()\n                        }\n                        filterItems={t => {\n                            const results = data.interviewers.search((t || \"\").split(\" \"));\n                            return results\n                                .filter(i => i.id in this.state.summaryData.interviewers)\n                                .map(i => { return { ...i, count: this.state.summaryData.interviewers[i.id].count } })\n                        }}\n                    ></Interviewers>\n\n                    <Programs\n                        updateSelections={this.updateFilterFactory(\"programs\")}\n                        selections={this.state.filters.programs}\n                        allItems={this.state.summaryData.programs}\n                        programs={this.state.summaryData.programs}\n                        filterItems={data.programs.search}\n                        placeholder=\"Begin searching programs...\">\n                    </Programs>\n\n                </section>\n\n                <section className=\"headings-area\">\n\n                    <SubjectHeadings\n                        title=\"Subjects\"\n                        updateSelections={this.updateFilterFactory(\"subjects\")}\n                        selections={this.state.filters.subjects}\n                        allItems={this.state.summaryData.subjects}\n                        filterItems={data.subjects.search}\n                        placeholder=\"Begin searching subjects...\">\n                    </SubjectHeadings>\n\n                </section>\n\n                <section className=\"results-section\">\n                    <Results\n                        results={this.state.resources}\n                    ></Results>\n                </section>\n\n\n            </div >\n        );\n    }\n\n}\n","import React from 'react';\nimport MetaDash from './MetaDash';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MetaDash></MetaDash>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/slider.8a77e598.svg\";"],"sourceRoot":""}